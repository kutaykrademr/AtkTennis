

@model Helpers.Dto.PartialViewDtos.CourtSettingsViewDto;

<style>

    button {
        border: none !important;
    }
</style>

<div class="content-wrapper">
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Kort Ayarları</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active">DataTables</li>
                    </ol>
                </div>
            </div>
        </div>
    </section>

    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-6">
                    <div class="card">

                        <div class="card-header d-flex justify-content-between">
                            <div class="card-title">
                                <h3>Kort Türleri</h3>
                            </div>
                            <div>
                                <button class="btn btn-outline-primary" data-toggle="modal" data-target="#addCourtType"><i class="fas fa-plus-square"></i></button>
                            </div>
                        </div>

                        <div class="card-body">
                            <table id="courtTypeTable" class="table table-bordered table-hover">
                                <thead>
                                    <tr style="text-align:center">

                                        <th>Kort Türü</th>
                                        <th>İşlemler</th>



                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var item in Model.courtRecipeTypes)
                                    {
                                        <tr style="text-align:center" id="">
                                            <td>@item.CourtRecipeTypes</td>


                                            <td>


                                                <button type="button" class="btn btn-outline-success" id="@item.CourtRecipeTypeId" onclick="openUpdateCourtTypeModal(this.id)"><i class="fas fa-edit"></i></button>
                                                <button type="button" class="btn btn-outline-danger" id="@item.CourtRecipeTypeId" onclick="deleteCourtType(this.id) "><i class="fas fa-trash"></i></button>



                                            </td>

                                        </tr>
                                    }


                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-header d-flex justify-content-between">
                            <div class="card-title">
                                <h3>Kort Ücret Tarifesi</h3>
                            </div>

                            <div>
                                <button class="btn btn-outline-primary" data-toggle="modal" data-target="#addCourtPrice"><i class="fas fa-plus-square"></i></button>
                            </div>
                        </div>

                        <div class="card-header d-flex justify-content-between">

                            @foreach (var item in Model.courtRecipeTypes)
                            {
                                <div>
                                    <button class="btn btn-outline-dark pListGen pList_@item.CourtRecipeTypeId" id="@item.CourtRecipeTypeId" onclick="getPriceList(this.id)">@item.CourtRecipeTypes</button>
                                </div>
                            }

                        </div>

                        <div class="card-body">

                            <table id="courtPriceTable" class="table table-bordered table-hover">
                                <thead>
                                    <tr style="text-align:center">
                                        <th>Adı </th>
                                        <th>Fiyatı</th>
                                        <th>Ücret Tipi</th>
                                        <th>Tarife Tipi</th>
                                        <th>Durumu</th>
                                        <th>İşlemler</th>

                                    </tr>
                                </thead>
                                <tbody id="getPriceListTable">
                                    @for (int i = 0; i < Model.courtPriceLists.Count; i++)
                                    {
                                        <tr style="text-align:center">


                                            <td>@Model.courtPriceLists[i].Name</td>
                                            <td>@Model.courtPriceLists[i].CourtPrice</td>

                                            @if (Model.courtPriceLists[i].PriceType == "1")
                                            {
                                                <td>Aktif Ücret</td>
                                            }
                                            else
                                            {
                                                <td>Pasif Ücret</td>
                                            }


                                            <td>@Model.courtPriceLists[i].RecipeType</td>

                                            @if (Model.courtPriceLists[i].Condition == "1")
                                            {
                                                <td>Aktif</td>
                                            }

                                            else
                                            {
                                                <td>Pasif</td>
                                            }

                                            <td>
                                                <button class="btn btn-outline-success" id="@Model.courtPriceLists[i].CourtPriceListId" onclick="openUpdateCourtPriceModal(this.id)"><i class="fas fa-edit"></i></button>
                                                <button class="btn btn-outline-danger" id="@Model.courtPriceLists[i].CourtPriceListId" onclick="deleteCourtPrice(this.id) "><i class="fas fa-trash"></i></button>
                                            </td>

                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between">
                            <div class="card-title">
                                <h3>Kort Skalası</h3>
                            </div>
                            <div>
                                <button class="btn btn-outline-primary" data-toggle="modal" data-target="#addCourtScaleModal"><i class="fas fa-plus-square"></i></button>
                            </div>
                        </div>

                        <div class="card-body">
                            <table id="courtScaleSet" class="table table-bordered table-hover">
                                <thead>
                                    <tr style="text-align:center">
                                        <th>Kodu </th>
                                        <th>Adı</th>
                                        <th>Renk Kodu</th>

                                        <th>İşlemler</th>

                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var item2 in Model.courtScales)
                                    {

                                        <tr style="text-align:center">
                                            <td style="text-align:center;background-color:@item2.Color;color:#ffffff;"><span>@item2.Code</span></td>
                                            <td>@item2.Name</td>
                                            <td>@item2.Color</td>


                                            <td>

                                                <button class="btn btn-outline-success" id="@item2.CourtScaleListId" onclick="openUpdateCourtScaleModal(this.id)"><i class="fas fa-edit"></i></button>
                                                <button class="btn btn-outline-danger" id="@item2.CourtScaleListId" onclick="deleteCourtScale(this.id)"><i class="fas fa-trash"></i></button>
                                            </td>

                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>


            </div>

            <div class="card">
                <div class="card-header d-flex justify-content-between">
                    <div class="card-title">
                        <h3>Kort İşlemleri</h3>
                    </div>
                    <div>
                        <button class="btn btn-outline-primary" data-toggle="modal" data-target="#addCourt"><i class="fas fa-plus-square"></i></button>
                    </div>
                </div>

                <div class="card-body">
                    <table id="example2" class="table table-bordered table-hover">
                        <thead>
                            <tr style="text-align:center">
                                <th>Adı </th>
                                <th>Türü</th>
                                <th>Web Durumu</th>
                                <th>Durumu</th>
                                <th>Başlangıç Tarihi</th>
                                <th>Bitiş Tarihi</th>
                                <th>Period</th>
                                <th>İşlemler</th>


                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in Model.Courts)
                            {
                                <tr style="text-align:center" id="">
                                    <td>@item.CourtName</td>

                                    @foreach (var item2 in Model.courtRecipeTypes)
                                    {
                                        if (item2.CourtRecipeTypeId == Convert.ToInt32(item.CourtType))
                                        {
                                            <td>@item2.CourtRecipeTypes</td>
                                        }

                                    }


                                    @if (item.CourtWebConditions == 1)
                                    {
                                        <td>Web Aktif  </td>
                                    }
                                    else
                                    {
                                        <td>Web Pasif  </td>
                                    }

                                    @if (item.CourtConditions == 1)
                                    {
                                        <td>Aktif  </td>
                                    }
                                    else
                                    {
                                        <td>Pasif </td>
                                    }

                                    <td>@item.CourtStartTime </td>
                                    <td>@item.CourtFinishTime </td>
                                    <td>@item.CourtTimePeriod </td>

                                    <td>
                                        <button class="btn btn-outline-success" id="@item.CourtId" onclick="openUpdateCourtModal(this.id)"><i class="fas fa-edit"></i></button>
                                        <button class="btn btn-outline-danger" id="@item.CourtId" onclick="deleteCourt(this.id) "><i class="fas fa-trash"></i></button>
                                    </td>

                                </tr>
                            }


                        </tbody>
                    </table>
                </div>
            </div>




        </div>

    </section>
</div>


<div class="modal fade" id="addCourt" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Kort Ekle</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group col-md-6">
                        <label for="recipient-name" class="col-form-label">Kort Adı:</label>
                        <input type="text" class="form-control" id="courtName">
                    </div>

                    <div class="form-group col-md-6">
                        <label for="recipient-name" class="col-form-label">Kort Durumu:</label>
                        <div class="input-group">
                            <select id="courtType" class="form-control">
                                <option disabled="disabled" selected="selected">Kort Türü</option>

                                @foreach (var item in Model.courtRecipeTypes)
                                {
                                    <option value="@item.CourtRecipeTypeId">@item.CourtRecipeTypes</option>
                                }


                            </select>
                        </div>
                    </div>

                    <div class="form-group col-md-6">
                        <label for="recipient-name" class="col-form-label">Kort Durumu:</label>
                        <div class="input-group">
                            <select id="AddcourtCondition" class="form-control">
                                <option disabled="disabled" selected="selected">Durumu</option>

                                <option value="1"> Aktif</option>
                                <option value="0"> Pasif</option>

                            </select>
                        </div>
                    </div>

                    <div class="form-group col-md-6">
                        <label for="recipient-name" class="col-form-label">Kort Web Durumu:</label>
                        <div class="input-group">
                            <select id="AddcourtWebCondition" class="form-control">
                                <option disabled="disabled" selected="selected">Durumu</option>

                                <option value="1"> Web Aktif</option>
                                <option value="0"> Web Pasif</option>

                            </select>
                        </div>
                    </div>

                    <div class="form-group col-md-4">
                        <label for="recipient-name" class="col-form-label">Başlangıç Saati:</label>
                        <div class="input-group">
                            <select id="courtStartTime" class="form-control">
                                <option disabled="disabled" selected="selected">Başlangıç Saati</option>

                                @foreach (var item in Model.resTimes)
                                {
                                    <option>@item.ResTimes</option>
                                }


                            </select>
                        </div>
                    </div>

                    <div class="form-group col-md-4">
                        <label for="recipient-name" class="col-form-label">Bitiş Saati:</label>
                        <div class="input-group">
                            <select id="courtFinishTime" class="form-control">
                                <option disabled="disabled" selected="selected">Bitiş Saati</option>

                                @foreach (var item in Model.resTimes)
                                {
                                    <option>@item.ResTimes</option>
                                }

                            </select>
                        </div>
                    </div>

                    <div class="form-group col-md-4">
                        <label for="recipient-name" class="col-form-label">Period:</label>
                        <div class="input-group">
                            <select id="courtTimePeriod" class="form-control">
                                <option disabled="disabled" selected="selected">Durumu</option>

                                <option>15</option>
                                <option>30</option>
                                <option>60</option>

                            </select>
                        </div>
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" onclick="saveAddCourt()">Ekle</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="updateCourtModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <div class="row ">
                    <div class="col-md-6 form-group">
                        <label class="col-form-label">Adı</label>
                        <input type="text" id="name" class="form-control">
                    </div>
                    <div class="col-md-6 form-group">

                        <label for="recipient-name" class="col-form-label">Kort Durumu:</label>
                        <div class="input-group">
                            <select id="type" class="form-control">
                                <option disabled="disabled" selected="selected">Kort Türü</option>

                                @foreach (var item in Model.courtRecipeTypes)
                                {
                                    <option> @item.CourtRecipeTypes</option>
                                }


                            </select>
                        </div>
                    </div>



                    <div class="col-md-6 form-group">
                        <label class="col-form-label">Durumu</label>

                        <select id="courtCondition" class="form-control">
                            <option disabled="disabled" selected="selected">Durumu</option>

                            <option value="1"> Aktif</option>
                            <option value="0"> Pasif</option>

                        </select>
                    </div>

                    <div class="col-md-6 form-group">
                        <label class="col-form-label">Web Durumu</label>
                        <select id="courtWebCondition" class="form-control">
                            <option disabled="disabled" selected="selected"> Durumu</option>

                            <option value="1">Web Aktif</option>
                            <option value="0">Web Pasif</option>
                        </select>
                    </div>




                    <div class="form-group col-md-4">
                        <label for="recipient-name" class="col-form-label">Başlangıç Saati:</label>
                        <div class="input-group">
                            <select id="courtTimeStart" class="form-control">


                                @foreach (var item in Model.resTimes)
                                {
                                    <option>@item.ResTimes</option>
                                }


                            </select>
                        </div>
                    </div>

                    <div class="form-group col-md-4">
                        <label for="recipient-name" class="col-form-label">Bitiş Saati:</label>
                        <div class="input-group">
                            <select id="courtTimeFinish" class="form-control">


                                @foreach (var item in Model.resTimes)
                                {
                                    <option>@item.ResTimes</option>
                                }

                            </select>
                        </div>
                    </div>

                    <div class="form-group col-md-4">
                        <label for="recipient-name" class="col-form-label">Period:</label>
                        <div class="input-group">
                            <select id="courtPeriodTime" class="form-control">


                                <option>15</option>
                                <option>30</option>
                                <option>60</option>

                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer" id="updateModel">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" onclick="updateCourt(this.id)">Güncelle</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="updatePriceModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Kort Tarife Güncelle</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <div class="form-group">
                    <label>Ay Seçiniz</label>

                    <select id="selectMonth" class="select2bs4 select2-hidden-accessible" multiple="" data-placeholder="Ay Bilgisi Seçimi Yapınız" style="width: 100%;" tabindex="-1" aria-hidden="true">
                    </select>
                </div>

                <div class="form-group">
                    <label>Gün Seçiniz</label>
                    <select id="selectDay" class="select2bs4 select2-hidden-accessible" multiple="" data-placeholder="Gün Bilgisi Seçimi Yapınız" style="width: 100%;" tabindex="-1" aria-hidden="true">
                        <option value="0,1,2,3,4,5,6">Tüm Günler</option>
                        <option value="1,">Pazartesi</option>
                        <option value="2,">Salı</option>
                        <option value="3,">Çarşamba</option>
                        <option value="4,">Perşembe</option>
                        <option value="5,">Cuma</option>
                        <option value="6,">Cumartesi</option>
                        <option value="0,">Pazar</option>
                    </select>
                </div>

                <div class="form-group">
                    <label>Saat Seçiniz</label>
                    <select id="selectTime" class="select2bs4" multiple="multiple" data-placeholder="Saat Bilgisi Seçimi Yapınız" style="width: 100%;">

                        <option value="1">Tüm Saatler </option>

                        @foreach (var item in Model.resTimes)

                        {
                            if (item.Restimes60 == 60)
                            {
                                <option value="@item.ResTimes,">@item.ResTimes</option>
                            }
                        }

                    </select>
                </div>

                <div class="row ">
                    <div class="col-md-6 form-group">
                        <label class="col-form-label">Kort Adı:</label>
                        <input type="text" id="courtPriceName" class="form-control">
                    </div>
                    <div class="col-md-6 form-group">
                        <label class="col-form-label">Fiyatı</label>
                        <input type="text" id="price" class="form-control">
                    </div>
                </div>

                <div class="row ">
                    <div class="col-md-6 form-group">
                        <label class="col-form-label">Ücret Tipi</label>
                        <select id="priceType" class="form-control">
                            <option disabled="disabled" selected="selected">Ücret Tipi</option>

                            <option value="1">Asıl Ücret</option>
                            <option value="0">Ek Ücret</option>
                        </select>
                    </div>

                    <div class="col-md-6">
                        <label class="col-form-label">Kort Türü</label>
                        <select id="recipeType2" class="form-control">
                            <option disabled="disabled" selected="selected">Kort Türü</option>

                            @foreach (var item in Model.courtRecipeTypes)
                            {
                                <option value="@item.CourtRecipeTypeId">@item.CourtRecipeTypes</option>

                            }

                        </select>
                    </div>

                </div>

                <div class="row ">
                    <div class="col-md-6 form-group">
                        <label class="col-form-label">Durumu</label>
                        <select id="conditions" class="form-control">
                            <option disabled="disabled" selected="selected">Durumu</option>

                            <option value="1"> Aktif</option>
                            <option value="0"> Pasif</option>
                        </select>
                    </div>

                </div>

            </div>

            <div class="modal-footer" id="updateCourtPriceModel">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" onclick="updateCourtPriceList(this.id)">Güncelle</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addCourtPrice" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered " role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Kort Ücret Ekle</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label>Ay Seçiniz</label>
                    <select id="selectedMonth" class="select2bs4" multiple="multiple" data-placeholder="Ay Bilgisi Seçimi Yapınız"
                            style="width: 100%;">
                        <option value="0,1,2,3,4,5,6,7,8,9,10,11">Tüm Yıl</option>
                        <option value="0,">Ocak</option>
                        <option value="1,">Şubat</option>
                        <option value="2,">Mart</option>
                        <option value="3,">Nisan</option>
                        <option value="4,">Mayıs</option>
                        <option value="5,">Haziran</option>
                        <option value="6,">Temmuz</option>
                        <option value="7,">Ağustos</option>
                        <option value="8,">Eylül</option>
                        <option value="9,">Ekim</option>
                        <option value="10,">Kasım</option>
                        <option value="11,">Aralık</option>

                    </select>
                </div>


                <div class="form-group">
                    <label>Gün Seçiniz</label>
                    <select id="selectedDay" class="select2bs4" multiple="multiple" data-placeholder="Gün Bilgisi Seçimi Yapınız"
                            style="width: 100%;">
                        <option value="0,1,2,3,4,5,6">Tüm Günler</option>
                        <option value="1,">Pazartesi</option>
                        <option value="2,">Salı</option>
                        <option value="3,">Çarşamba</option>
                        <option value="4,">Perşembe</option>
                        <option value="5,">Cuma</option>
                        <option value="6,">Cumartesi</option>
                        <option value="0,">Pazar</option>
                    </select>
                </div>

                <div class="form-group">
                    <label>Saat Seçiniz</label>
                    <select id="selectedTime" class="select2bs4" multiple="multiple" data-placeholder="Saat Bilgisi Seçimi Yapınız" style="width: 100%;">

                        <option value="1">Tüm Saatler </option>

                        @foreach (var item in Model.resTimes)

                        {
                            if (item.Restimes60 == 60)
                            {
                                <option value="@item.ResTimes,">@item.ResTimes</option>
                            }
                        }

                    </select>
                </div>

                <div class="row">


                    <div class="form-group col-md-6">
                        <label for="recipient-name" class="col-form-label">Tarife Adı:</label>
                        <input type="text" class="form-control" id="recipeName">
                    </div>

                    <div class="form-group col-md-6">
                        <label for="recipient-name" class="col-form-label">Tarife Fiyatı:</label>
                        <input type="text" class="form-control" id="recipePrice">
                    </div>
                </div>
                <div class="row">

                    <div class="col-md-6">
                        <select id="recipePriceType" class="form-control">
                            <option disabled="disabled" selected="selected">Ücret Tipi</option>

                            <option value="1"> Asıl Ücret</option>
                            <option value="0"> Ek Ücret</option>

                        </select>
                    </div>


                    <div class="col-md-6">
                        <select id="recipeTypeAdd" class="form-control">
                            <option disabled="disabled" selected="selected">Kort Türü</option>

                            @foreach (var item in Model.courtRecipeTypes)
                            {
                                <option value="@item.CourtRecipeTypeId">@item.CourtRecipeTypes</option>

                            }

                        </select>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" onclick="saveAddCourtPrice()">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addCourtType" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div>
                    <div class="form-group">
                        <label class="col-form-label">Kort Türü:</label>
                        <input type="text" id="courtTypeName" class="form-control">
                    </div>

                </div>


            </div>

            <div class="modal-footer" id="updateCourtPriceModel">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" onclick="saveAddCourtType()">Tür Ekle</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="updateCourtTypeModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <div>
                    <div class="form-group">
                        <label class="col-form-label">Kort Türü Adı:</label>
                        <input type="text" id="courtTypeNameUpd" class="form-control" autocomplete="new-password">
                    </div>
                </div>
            </div>

            <div class="modal-footer" id="updateTypeModel">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" onclick="updateCourtType(this.id)">Güncelle</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="updateCourtScaleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">

                <div class="row">

                    <div class="col-md-6 form-group">
                        <label>Adı:</label>
                        <input type="text" id="scaleName" class="form-control" autocomplete="new-password">
                    </div>


                    <div class="col-md-6 form-group">
                        <label>Kodu:</label>
                        <input type="text" id="scaleCode" class="form-control" autocomplete="new-password">
                    </div>

                </div>

                <div class="form-group col-md-12">
                    <label>Renk:</label>

                    <div class="input-group my-colorpicker2">
                        <input id="scaleColor" type="text" class="form-control" autocomplete="new-password">

                        <div class="input-group-append">
                            <span class="input-group-text"><i class="fas fa-square"></i></span>
                        </div>
                    </div>


                </div>

            </div>

            <div class="modal-footer" id="updateCourtScaleModel">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" onclick="updateCourtScaleList(this.id)">Güncelle</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addCourtScaleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <div class="row">

                    <div class="col-md-6 form-group">
                        <label>Adı:</label>
                        <input type="text" id="addScaleName" class="form-control" autocomplete="new-password">
                    </div>


                    <div class="col-md-6 form-group">
                        <label>Kodu:</label>
                        <input type="text" id="addScaleCode" class="form-control" autocomplete="new-password">
                    </div>

                </div>

                <div class="form-group col-md-12">
                    <label>Renk:</label>

                    <div class="input-group my-colorpicker2">
                        <input id="addScaleColor" type="text" class="form-control" autocomplete="new-password">

                        <div class="input-group-append">
                            <span class="input-group-text"><i class="fas fa-square"></i></span>
                        </div>
                    </div>

                </div>

            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" onclick="saveAddCourtScale()">Güncelle</button>
            </div>
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {

        $('.select2bs4').select2({
            theme: 'bootstrap4'
        })


        $("#example1").DataTable({
            "responsive": true, "lengthChange": false, "autoWidth": false,
            "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"]
        }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');

        $('#example2 , #example3 , #example4').DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": false,
            "ordering": true,
            "info": true,
            "autoWidth": false,
            "responsive": true,
        });

        $('#courtPriceTable').DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": false,
            "ordering": true,
            "info": true,
            "autoWidth": false,
            "responsive": true,
            "pageLength": 6,
        });

        $('#courtTypeTable').DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": false,
            "ordering": true,
            "info": true,
            "autoWidth": false,
            "responsive": true,
            "pageLength": 3,
        });

        $('#courtScaleSet').DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": false,
            "ordering": true,
            "info": true,
            "autoWidth": false,
            "responsive": true,
            "pageLength": 14,
        });


        $('.my-colorpicker2').colorpicker()

        $('.my-colorpicker2').on('colorpickerChange', function (event) {
            $('.my-colorpicker2 .fa-square').css('color', event.color.toString());
        });


    });




    function saveAddCourtType() {

        if ($("#courtTypeName").val() == "") {
            $.confirm({
                title: "Bilgilendirme",
                content: "Lütfen Bilgilerini Eksizsiz Doldurunuz.",
                buttons: {
                    TAMAM: function () {

                    }
                }
            });
        } else {

            var courtTypeName = $("#courtTypeName").val();

            $.ajax({
                type: "POST",
                url: '../SystemSettings/AddNewCourtType',
                cache: false,
                data: { "courtTypeName": courtTypeName },
                dataType: "json",
                async: true,
                success: function (res) {


                    if (res == true) {

                        swal({
                            title: "Kort Ekleme Başarılı",
                            text: "Kort Ekleme Başarılı Bir Şekilde Gerçekleşti !",
                            icon: "success",
                            button: "Tamam",
                        }).then((value) => {

                            window.location.href = "CourtSettings"
                        });



                    }
                    else {

                        $.confirm({
                            title: "Uyarı",
                            content: "Kayıt sırasında bir hata oluştu. Lütfen Kontrol edip daha sonra tekrar deneyiniz.",
                            buttons: {
                                TAMAM: function () {

                                }
                            }
                        });
                    }

                },
                error: function (textStatus, errorThrown) {
                    console.log(JSON.stringify(textStatus));
                    console.log(textStatus);
                }
            });
        }

    }

    function deleteCourtType(id) {

        swal({
            title: "Emin Misiniz?",
            text: "Tarife Bilgisi Silinecek !",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        type: "POST",
                        url: '../SystemSettings/DeleteCourtType',
                        cache: false,
                        data: { "id": id },
                        dataType: "json",
                        async: true,
                        success: function (res) {

                            if (res != false) {

                                swal({
                                    title: "Kort Silindi",
                                    text: "Kort  Başarılı Bir Şekilde Silindi !",
                                    icon: "success",
                                    button: "Tamam",
                                }).then((value) => {

                                    window.location.href = "CourtSettings";

                                });
                            }
                            else {

                                alert("Hata");
                            }
                        },
                        error: function (textStatus, errorThrown) {
                            console.log(JSON.stringify(textStatus));
                            console.log(textStatus);
                        }
                    });
                }
                else
                    swal({
                        title: "Kort Korundu",
                        text: "Kortu Silmekten Vazgeçtiniz!",
                        icon: "success",
                        button: "Tamam",
                    });
            });
    }

    function openUpdateCourtTypeModal(id) {
        $.ajax({
            type: "GET",
            url: '../SystemSettings/GetCourtTypeInf',
            cache: false,
            data: { "id": id },
            dataType: "json",
            async: true,
            success: function (res) {

                debugger;

                if (res != null) {

                    $("#courtTypeNameUpd").val(res.courtRecipeTypes);

                    $("#updateTypeModel button:nth-of-type(2)").attr("id", id);
                    $('#updateCourtTypeModal').modal('toggle');
                }

                else {
                    $.confirm({
                        title: "Uyarı",
                        content: "Kort Türü Bulunamadı.",
                        buttons: {
                            TAMAM: function () {

                            }
                        }
                    });
                }

            },
            error: function (textStatus, errorThrown) {
                console.log(JSON.stringify(textStatus));
                console.log(textStatus);
            }
        });
    }

    function updateCourtType(id) {

        if ($("#courtTypeNameUpd").val() == "") {
            $.confirm({
                title: "Bilgilendirme",
                content: "Lütfen Bilgilerini Eksizsiz Doldurunuz.",
                buttons: {
                    TAMAM: function () {

                    }
                }
            });
        } else {

            $.ajax({
                type: "GET",
                url: '../SystemSettings/UpdateCourtType',
                cache: false,
                data: { "id": id, "courtTypeName": $("#courtTypeNameUpd").val() },
                dataType: "json",
                async: true,
                success: function (res) {


                    if (res == true) {

                        swal({
                            title: "Kort Türü Güncelleme Başarılı",
                            text: "Kort Güncelleme Başarılı Bir Şekilde Gerçekleşti !",
                            icon: "success",
                            button: "Tamam",
                            timer: 500,
                        }).then((value) => {

                            location.reload();
                        });

                    }

                    else {
                        $.confirm({
                            title: "Uyarı",
                            content: "Kort Türü Bulunamadı.",
                            buttons: {
                                TAMAM: function () {

                                }
                            }
                        });
                    }

                },
                error: function (textStatus, errorThrown) {
                    console.log(JSON.stringify(textStatus));
                    console.log(textStatus);
                }
            });
        }
    }




    function saveAddCourt() {

        if ($("#courtName").val() == "" || $("#courtType option:selected").val() == "" || $("#AddcourtCondition option:selected").val() == "" || $("#AddcourtWebCondition option:selected").val() == "") {
            $.confirm({
                title: "Bilgilendirme",
                content: "Lütfen Kort Bilgilerini Eksizsiz Doldurunuz.",
                buttons: {
                    TAMAM: function () {

                    }
                }
            });
        } else {

            $("#addCourt").modal("toggle");

            var AddcourtCondition = $("#AddcourtCondition option:selected").val();
            var AddcourtWebCondition = $("#AddcourtWebCondition option:selected").val();
            var courtStartTime = $("#courtStartTime option:selected").val();
            var courtFinishTime = $("#courtFinishTime option:selected").val();
            var courtTimePeriod = $("#courtTimePeriod option:selected").val();

            $.ajax({
                type: "POST",
                url: '../SystemSettings/AddNewCourt',
                cache: false,
                data: { "courtName": $("#courtName").val(), "courtType": $("#courtType option:selected").val(), AddcourtCondition, AddcourtWebCondition, courtStartTime, courtFinishTime, courtTimePeriod },
                dataType: "json",
                async: true,
                success: function (res) {


                    if (res == true) {

                        swal({
                            title: "Kort Ekleme Başarılı",
                            text: "Kort Ekleme Başarılı Bir Şekilde Gerçekleşti !",
                            icon: "success",
                            button: "Tamam",
                        }).then((value) => {

                            window.location.href = "CourtSettings"
                        });



                    }
                    else {

                        $.confirm({
                            title: "Uyarı",
                            content: "Kayıt sırasında bir hata oluştu. Lütfen Kontrol edip daha sonra tekrar deneyiniz.",
                            buttons: {
                                TAMAM: function () {

                                }
                            }
                        });
                    }

                },
                error: function (textStatus, errorThrown) {
                    console.log(JSON.stringify(textStatus));
                    console.log(textStatus);
                }
            });
        }

    }

    function openUpdateCourtModal(ID) {
        $.ajax({
            type: "GET",
            url: '../SystemSettings/GetCourtInf',
            cache: false,
            data: { "id": ID },
            dataType: "json",
            async: true,
            success: function (res) {



                if (res != null) {

                    $("#name").val(res.courtName);
                    $("#type option:selected").text(res.courtType);
                    $("#courtCondition option:selected").text(res.courtConditions);
                    $("#courtWebCondition option:selected").text(res.courtWebConditions);

                    $("#courtTimeStart option:selected").text(res.courtStartTime);
                    $("#courtTimeFinish option:selected").text(res.courtFinishTime);
                    $("#courtPeriodTime option:selected").text(res.courtTimePeriod);

                    $("#updateModel button:nth-of-type(2)").attr("id", ID);
                    $('#updateCourtModalLong').modal('toggle');
                }

                else {
                    $.confirm({
                        title: "Uyarı",
                        content: "Kort Bulunamadı.",
                        buttons: {
                            TAMAM: function () {

                            }
                        }
                    });
                }

            },
            error: function (textStatus, errorThrown) {
                console.log(JSON.stringify(textStatus));
                console.log(textStatus);
            }
        });
    }

    function updateCourt(id) {

        var courtCondition = $("#courtCondition option:selected").val();
        var courtWebCondition = $("#courtWebCondition option:selected").val();
        var courtTimeStart = $("#courtTimeStart option:selected").val();
        var courtTimeFinish = $("#courtTimeFinish option:selected").val();
        var courtPeriodTime = $("#courtPeriodTime option:selected").val();

        $.ajax({
            type: "POST",
            url: '../SystemSettings/UpdateCourt',
            cache: false,
            data: { "id": id, "courtName": $("#name").val(), "courtType": $("#type option:selected").text(), courtCondition, courtWebCondition, courtTimeStart, courtTimeFinish, courtPeriodTime },
            dataType: "json",
            async: true,
            success: function (res) {

                if (res != null) {

                    swal({
                        title: "Kort Güncellendi",
                        text: "Kort Güncelleme Başarılı Bir Şekilde Gerçekleşti !",
                        icon: "success",
                        button: "Tamam",
                    }).then((value) => {

                        window.location.href = "CourtSettings"
                    });

                }

                else {
                    $.confirm({
                        title: "Uyarı",
                        content: "Kort Bulunamadı.",
                        buttons: {
                            TAMAM: function () {

                            }
                        }
                    });
                }

            },
            error: function (textStatus, errorThrown) {
                console.log(JSON.stringify(textStatus));
                console.log(textStatus);
            }
        });
    }

    function deleteCourt(id) {

        swal({
            title: "Emin Misiniz?",
            text: "Tarife Bilgisi Silinecek !",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        type: "POST",
                        url: '../SystemSettings/DeleteCourt',
                        cache: false,
                        data: { "id": id },
                        dataType: "json",
                        async: true,
                        success: function (res) {

                            if (res != null) {

                                swal({
                                    title: "Kort Silindi",
                                    text: "Kort  Başarılı Bir Şekilde Silindi !",
                                    icon: "success",
                                    button: "Tamam",
                                }).then((value) => {

                                    window.location.href = "CourtSettings";

                                });
                            }
                            else {
                                alert("Hata");
                            }
                        },
                        error: function (textStatus, errorThrown) {
                            console.log(JSON.stringify(textStatus));
                            console.log(textStatus);
                        }
                    });
                }
                else
                    swal({
                        title: "Kort Korundu",
                        text: "Kortu Silmekten Vazgeçtiniz!",
                        icon: "success",
                        button: "Tamam",
                    });
            });
    }




    function openUpdateCourtPriceModal(ID) {
        $.ajax({
            type: "GET",
            url: '../SystemSettings/GetCourtPriceInf',
            cache: false,
            data: { "id": ID },
            dataType: "json",
            async: true,
            success: function (res) {



                if (res != null) {

                    $("#courtPriceName").val(res.name);
                    $("#price").val(res.courtPrice);

                    if (res.priceType == "1") {
                        $("#priceType option:selected").text("Asıl Ücret");
                        $("#priceType option:selected").val("1");
                    }
                    else {
                        $("#priceType option:selected").text("Ek Ücret");
                        $("#priceType option:selected").val("0");
                    }


                    $("#recipeType2 option:selected").text(res.recipeType);
                    $("#recipeType2 option:selected").val(res.recipeTypeId);

                    if (res.condition == "1") {
                        $("#conditions option:selected").text("Aktif");
                        $("#conditions option:selected").val("1");
                    }
                    else {
                        $("#conditions option:selected").text("Pasif");
                        $("#conditions option:selected").val("0");
                    }

                    var monthInfName = "";

                    $("#selectMonth").empty();

                    row = "";

                    for (var i = 0; i < 12; i++) {
                        debugger;

                        switch (i) {
                            case 0:
                                monthInfName = "Ocak";
                                break;
                            case 1:
                                monthInfName = "Şubat";
                                break;
                            case 2:
                                monthInfName = "Mart";
                                break;
                            case 3:
                                monthInfName = "Nisan";
                                break;
                            case 4:
                                monthInfName = "Mayıs";
                                break;
                            case 5:
                                monthInfName = "Haziran";
                                break;
                            case 6:
                                monthInfName = "Temmuz";
                                break;
                            case 7:
                                monthInfName = "Ağustos";
                                break;
                            case 8:
                                monthInfName = "Eylül";
                                break;
                            case 9:
                                monthInfName = "Ekim";
                                break;
                            case 10:
                                monthInfName = "Kasım";
                                break;
                            case 11:
                                monthInfName = "Aralık";
                                break;

                            default:
                        }

                        if (res.monthInf.includes(i))

                            row += '<option selected value="' + i + "," + '">' + monthInfName + '</option>'

                        else
                            row += '<option value="' + i + "," + '">' + monthInfName + '</option>'

                    }


                    $("#selectMonth").append(row);


                    var dayInfName = "";

                    $("#selectDay").empty();

                    row = "";

                    for (var i = 0; i < 7; i++) {
                        debugger;

                        switch (i) {
                            case 0:
                                dayInfName = "Pazar";
                                break;
                            case 1:
                                dayInfName = "Pazartesi";
                                break;
                            case 2:
                                dayInfName = "Salı";
                                break;
                            case 3:
                                dayInfName = "Çarşamba";
                                break;
                            case 4:
                                dayInfName = "Perşembe";
                                break;
                            case 5:
                                dayInfName = "Cuma";
                                break;
                            case 6:
                                dayInfName = "Cumartesi";
                                break;                       

                            default:
                        }

                        if (res.dayInf.includes(i))

                            row += '<option selected value="' + i + "," + '">' + dayInfName + '</option>'

                        else
                            row += '<option value="' + i + "," + '">' + dayInfName + '</option>'
                    }


                    $("#selectDay").append(row);

                    $("#updateCourtPriceModel button:nth-of-type(2)").attr("id", ID);
                    $('#updatePriceModalLong').modal('toggle');
                }

                else {
                    $.confirm({
                        title: "Uyarı",
                        content: "Kort Bulunamadı.",
                        buttons: {
                            TAMAM: function () {

                            }
                        }
                    });
                }

            },
            error: function (textStatus, errorThrown) {
                console.log(JSON.stringify(textStatus));
                console.log(textStatus);
            }
        });
    }

    function updateCourtPriceList(id) {

        var month = $("#selectMonth").val();

        var months = "";

        for (var i = 0; i < month.length; i++) {
            var firstMonth = month[i];
            months = firstMonth + months;
        }

        var day = $("#selectDay").val();

        var days = "";

        for (var i = 0; i < day.length; i++) {

            var firstMonth = day[i];

            days = firstMonth + days;
        }

        //var time = $("#selectedTime").val();

        //var times = "";

        //for (var i = 0; i < time.length; i++) {

        //    var firstDay = time[i];

        //    times = firstDay + times;
        //}

        var priceType = $("#priceType option:selected").val();
        var condition = $("#conditions option:selected").val();
        var recipeType = $("#recipeType2 option:selected").val();
        var recipeTypeName = $("#recipeType2 option:selected").text();

        $.ajax({
            type: "POST",
            url: '../SystemSettings/UpdateCourtPriceList',
            cache: false,
            data: {"month":months , "day":days , "id": id, "name": $("#courtPriceName").val(), "courtPrice": $("#price").val(), "priceType": priceType, "recipeType": recipeType, "recipeTypeName": recipeTypeName, "condition": condition },
            dataType: "json",
            async: true,
            success: function (res) {



                if (res != null) {

                    swal({
                        title: "Tarife Güncellendi",
                        text: "Tarife Güncellemesi Başarılı Bir Şekilde Gerçekleşti !",
                        icon: "success",
                        button: "Tamam",
                    }).then((value) => {

                        window.location.href = "CourtSettings"

                    });

                }

                else {
                    $.confirm({
                        title: "Uyarı",
                        content: "Tarife Bulunamadı.",
                        buttons: {
                            TAMAM: function () {

                            }
                        }
                    });
                }

            },
            error: function (textStatus, errorThrown) {
                console.log(JSON.stringify(textStatus));
                console.log(textStatus);
            }
        });
    }

    function deleteCourtPrice(id) {

        swal({
            title: "Emin Misiniz?",
            text: "Tarife Bilgisi Silinecek !",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        type: "POST",
                        url: '../SystemSettings/DeleteCourtPrice',
                        cache: false,
                        data: { "id": id },
                        dataType: "json",
                        async: true,
                        success: function (res) {

                            if (res != null) {

                                swal({
                                    title: "Tarife Silindi",
                                    text: "Tarife  Başarılı Bir Şekilde Silindi !",
                                    icon: "success",
                                    button: "Tamam",
                                }).then((value) => {

                                    window.location.href = "CourtSettings";

                                });

                            }

                            else {
                                $.confirm({
                                    title: "Uyarı",
                                    content: "Kullanıcı Bulunamadı.",
                                    buttons: {
                                        TAMAM: function () {

                                        }
                                    }
                                });
                            }

                        },
                        error: function (textStatus, errorThrown) {
                            console.log(JSON.stringify(textStatus));
                            console.log(textStatus);
                        }
                    });
                }
                else
                    swal({
                        title: "Tarife Korundu",
                        text: "Tarifeyi Silmekten Vazgeçtiniz!",
                        icon: "success",
                        button: "Tamam",
                    });
            });



    }

    function saveAddCourtPrice() {


        var month = $("#selectedMonth").val();

        var months = "";

        for (var i = 0; i < month.length; i++) {
            var firstMonth = month[i];
            months = firstMonth + months;
        }

        var day = $("#selectedDay").val();

        var days = "";

        for (var i = 0; i < day.length; i++) {

            var firstMonth = day[i];

            days = firstMonth + days;
        }

        var time = $("#selectedTime").val();

        var times = "";

        for (var i = 0; i < time.length; i++) {

            var firstDay = time[i];

            times = firstDay + times;
        }

        debugger;

        $.ajax({
            type: "POST",
            url: '../SystemSettings/AddNewCourtPriceList',
            cache: false,
            data: { "month": months, "day": days, "time": times, "recipeName": $("#recipeName").val(), "recipePrice": $("#recipePrice").val(), "recipePriceType": $("#recipePriceType option:selected").val(), "courtRecipeType": $("#recipeTypeAdd option:selected").text(), "recipeTypeId": $("#recipeTypeAdd option:selected").val(), "recipeCondition": "1" },
            dataType: "json",
            async: true,
            success: function (res) {



                if (res == true) {

                    swal({
                        title: "Tarife Ekleme Başarılı",
                        text: "Tarige Ekleme Başarılı Bir Şekilde Gerçekleşti !",
                        icon: "success",
                        button: "Tamam",
                    }).then((value) => {

                        window.location.href = "CourtSettings"
                    });

                }
                else {
                    $.confirm({
                        title: "Uyarı",
                        content: "Kayıt sırasında bir hata oluştu. Lütfen Kontrol edip daha sonra tekrar deneyiniz.",
                        buttons: {
                            TAMAM: function () {

                            }
                        }
                    });
                }

            },
            error: function (textStatus, errorThrown) {
                console.log(JSON.stringify(textStatus));
                console.log(textStatus);
            }
        });
    }

    function getPriceList(id) {


        $(".pListGen").removeClass("btn-dark");
        $(".pListGen").addClass("btn-outline-dark");
        $(".pList_" + id).removeClass("btn-outline-dark");
        $(".pList_" + id).addClass("btn-dark");

        $.ajax({
            type: "GET",
            url: '../SystemSettings/GetPriceListTable',
            cache: false,
            data: { "id": id },
            dataType: "json",
            async: true,
            success: function (res) {

                debugger;

                $("#getPriceListTable").empty();

                row = "";

                if (res.length > 0) {

                    for (var i = 0; i < res.length; i++) {

                        row += '  <tr style="text-align:center" id="">';
                        row += '<td>' + res[i].name + '</td>';
                        row += '<td>' + res[i].courtPrice + '</td>';
                        if (res[i].priceType == 1) {
                            row += '<td>' + "Asıl Ücret" + '</td>';
                        }
                        else {
                            row += '<td>' + "Ek Ücret" + '</td>';
                        }

                        row += '<td>' + res[i].recipeType + '</td>';
                        if (res[i].condition == 1) {
                            row += '<td>' + "Aktif" + '</td>';
                        }
                        else {
                            row += '<td>' + "Pasif" + '</td>';
                        }

                        row += '<td>';
                        row += '<button class="btn btn-outline-success" id="' + res[i].courtPriceListId + '" onclick="openUpdateCourtPriceModal(this.id)"><i class="fas fa-edit"></i></button>';
                        row += '<button class="btn btn-outline-danger" id="' + res[i].courtPriceListId + '" onclick="deleteCourtPrice(this.id) "><i class="fas fa-trash"></i></button>';
                        row += '</td>';
                        row += '</tr>';

                    }
                }


                $("#getPriceListTable").append(row);


            },
            error: function (textStatus, errorThrown) {
                console.log(JSON.stringify(textStatus));
                console.log(textStatus);
            }
        });
    }



    function openUpdateCourtScaleModal(id) {


        $.ajax({
            type: "GET",
            url: '../SystemSettings/GetCourtScaleInf',
            cache: false,
            data: { "id": id },
            dataType: "json",
            async: true,
            success: function (res) {



                if (res != null) {


                    $("#scaleColor").val(res.color);
                    $("#scaleName").val(res.name);
                    $("#scaleCode").val(res.code);

                    $("#updateCourtScaleModel button:nth-of-type(2)").attr("id", id);
                    $('#updateCourtScaleModal').modal('toggle');


                }

                else {
                    $.confirm({
                        title: "Uyarı",
                        content: "Skala Bulunamadı.",
                        buttons: {
                            TAMAM: function () {

                            }
                        }
                    });
                }

            },
            error: function (textStatus, errorThrown) {
                console.log(JSON.stringify(textStatus));
                console.log(textStatus);
            }
        });
    }

    function updateCourtScaleList(id) {


        var color = $("#scaleColor").val();
        var name = $("#scaleName").val();
        var code = $("#scaleCode").val();

        $.ajax({
            type: "POST",
            url: '../SystemSettings/UpdateCourtScaleList',
            cache: false,
            data: { "id": id, "name": name, "color": color, "code": code },
            dataType: "json",
            async: true,
            success: function (res) {



                if (res == true) {

                    swal({
                        title: "Tarife Güncellendi",
                        text: "Tarife Güncellemesi Başarılı Bir Şekilde Gerçekleşti !",
                        icon: "success",
                        button: "Tamam",
                    }).then((value) => {

                        window.location.href = "CourtSettings"

                    });

                }

                else {
                    $.confirm({
                        title: "Uyarı",
                        content: "Tarife Bulunamadı.",
                        buttons: {
                            TAMAM: function () {

                            }
                        }
                    });
                }

            },
            error: function (textStatus, errorThrown) {
                console.log(JSON.stringify(textStatus));
                console.log(textStatus);
            }
        });
    }

    function saveAddCourtScale() {

        var scaleColor = $("#addScaleColor").val();
        var scaleName = $("#addScaleName").val();
        var scaleCode = $("#addScaleCode").val();

        if (scaleColor == "" || scaleName == "") {

            alert("eksiksiz doldurun");
        }

        else {

            $.ajax({
                type: "POST",
                url: '../SystemSettings/AddNewCourtScale',
                cache: false,
                data: { "scaleColor": scaleColor, "scaleName": scaleName, "scaleCode": scaleCode },
                dataType: "json",
                async: true,
                success: function (res) {


                    if (res == true) {

                        swal({
                            title: "Skala Ekleme Başarılı",
                            text: "Skala Ekleme Başarılı Bir Şekilde Gerçekleşti !",
                            icon: "success",
                            button: "Tamam",
                        }).then((value) => {

                            window.location.href = "CourtSettings"
                        });

                    }

                    else {
                        $.confirm({
                            title: "Uyarı",
                            content: "Kayıt sırasında bir hata oluştu. Lütfen Kontrol edip daha sonra tekrar deneyiniz.",
                            buttons: {
                                TAMAM: function () {

                                }
                            }
                        });
                    }

                },
                error: function (textStatus, errorThrown) {
                    console.log(JSON.stringify(textStatus));
                    console.log(textStatus);
                }
            });
        }

    }

    function deleteCourtScale(id) {

        swal({
            title: "Emin Misiniz?",
            text: "Tarife Bilgisi Silinecek !",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        type: "POST",
                        url: '../SystemSettings/DeleteCourtScale',
                        cache: false,
                        data: { "id": id },
                        dataType: "json",
                        async: true,
                        success: function (res) {

                            if (res != null) {

                                swal({
                                    title: "Skala Silindi",
                                    text: "Skala  Başarılı Bir Şekilde Silindi !",
                                    icon: "success",
                                    button: "Tamam",
                                }).then((value) => {

                                    window.location.href = "CourtSettings";

                                });

                            }

                            else {
                                $.confirm({
                                    title: "Uyarı",
                                    content: "Kullanıcı Bulunamadı.",
                                    buttons: {
                                        TAMAM: function () {

                                        }
                                    }
                                });
                            }

                        },
                        error: function (textStatus, errorThrown) {
                            console.log(JSON.stringify(textStatus));
                            console.log(textStatus);
                        }
                    });
                }
                else
                    swal({
                        title: "Tarife Korundu",
                        text: "Tarifeyi Silmekten Vazgeçtiniz!",
                        icon: "success",
                        button: "Tamam",
                    });
            });



    }

</script>

