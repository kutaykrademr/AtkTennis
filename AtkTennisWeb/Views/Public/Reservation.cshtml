@model Helpers.Dto.PartialViewDtos.ReservationViewDto;

@{
    Layout = "_MemberLayout";
}

@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor;


@{

    var fullname = HttpContextAccessor.HttpContext.Session.GetString("FullName");
    var userId = HttpContextAccessor.HttpContext.Session.GetString("UserId");
    var Role = HttpContextAccessor.HttpContext.Session.GetString("Role");
    var RoleId = HttpContextAccessor.HttpContext.Session.GetString("RoleId");
    var times = Model.resTimes.Where(x => x.Restimes60 == 00 && x.ResTimes30 == 00).ToList();
    var x = times.Count * 4;

    var start = Model.reservationSettings.Where(x => x.ReservationSettingsInf == "Web Rezervasyon Başlangıç Saati").FirstOrDefault();
    var finish = Model.reservationSettings.Where(x => x.ReservationSettingsInf == "Web Rezervasyon Bitiş Saati (Max = 23:59)").FirstOrDefault();
    var resSettingsTime = Model.reservationSettings.Where(x => x.ReservationSettingsInf == "Rezervasyon Süresi (Dakika)").FirstOrDefault();
    var resSettingsTime2 = Model.reservationSettings.Where(x => x.ReservationSettingsInf == "Rezervasyon İleri Gün (Antrenör)").FirstOrDefault();
    var resSettingsTime3 = Model.reservationSettings.Where(x => x.ReservationSettingsInf == "Rezervasyon İleri Gün (Üye)").FirstOrDefault();
    var resSettingsTime4 = Model.reservationSettings.Where(x => x.ReservationSettingsInf == "Gün içerisinde Üye için Max Rezervasyon Saati").FirstOrDefault();

    var startTime = start.ReservationValue;
    var finishTime = finish.ReservationValue;
    var resSetTime = resSettingsTime.ReservationValue;

    var antNextDay = resSettingsTime2.ReservationValue;
    var memNextDay = resSettingsTime3.ReservationValue;
    var memMaxRes = resSettingsTime4.ReservationValue;

}



<style>

    .modal-dialog-bottom {
        position: fixed !important;
        top: auto;
        right: 0;
        left: 0;
        bottom: 0;
    }

    .table-bordered2 {
        border: 1px solid #dee2e6;
    }

        .table-bordered2 th {
            border: 1px solid #dee2e6;
        }

        .table-bordered2 thead th {
            border-bottom-width: 2px;
        }

    .table td {
        position: inherit !important;
    }


    .hourborder {
        border-left: 1px solid #dee2e6;
        border-bottom: 1px solid #dee2e6;
    }


    .tdHover:hover {
        background-color: #131da882;
    }

    .reservationForm {
        padding: 1rem 0 0.3rem 0 !important;
        border: 1px solid #dedede !important;
        margin: 0.2rem !important;
    }

    .custom-control2 {
        padding: 0.2rem !important;
    }

    .custom-control-label2::before {
        top: -0.75rem !important;
        left: 0.8rem !important;
    }

    .custom-control-label2::after {
        top: -0.75rem !important;
        left: 0.8rem !important;
    }
</style>

<div style="display: none;"><input id="RoleName" type="text" name="name" value="@Role" /></div>
<div style="display: none;"><input id="doRes" start="@startTime" finish="@finishTime" setTime="@resSetTime" type="text" /></div>

<div style="display: none;"><input id="userIdMember" value="@userId" /></div>
<div style="display: none;"><input id="antNextDay" value="@antNextDay" /></div>
<div style="display: none;"><input id="memNextDay" value="@memNextDay" /></div>
<div style="display: none;"><input id="memMaxRes" value="@memMaxRes" /></div>
<div style="display: none;"><input id="RoleSes" value="@Role" /></div>
<div style="display: none;"><input id="RoleSesId" value="@RoleId" /></div>


@{
    var date = DateTime.Now;
    var resCount = Model.reservations.Where(x => x.UserId == userId && x.ResDate == date.ToString("yyyy-MM-dd")).ToList().Count();
    var totalDebtList = Model.res.Where(x => x.UserId == userId && x.PriceInf == false).ToList();
    var totalDebtCancelList = Model.resCan.Where(x => x.UserId == userId && x.PriceInf == false && x.Procedure == false).ToList();
    float totalFirstDebt;
    float totalSecDebt;


    if (totalDebtList != null)
    {
        totalFirstDebt = 0;

        for (int i = 0; i < totalDebtList.Count; i++)
        {
            var totalResDebt = totalDebtList[i].Price;

            totalFirstDebt = totalResDebt + totalFirstDebt;

        }
    }
    else
    {
        totalFirstDebt = 0;
    }

    if (totalDebtList != null)
    {
        totalSecDebt = 0;

        for (int i = 0; i < totalDebtCancelList.Count; i++)
        {
            var totalResCancelDebt = totalDebtCancelList[i].Price;

            totalSecDebt = totalResCancelDebt + totalSecDebt;

        }
    }
    else
    {
        totalSecDebt = 0;
    }

    var debt = totalFirstDebt + totalSecDebt;
    var debt2 = String.Format("{0:n}", debt);
}


<div class="content-wrapper">
    <section class="content">
        <div class="container-fluid">

            <div class="card" style="border-radius:40px; margin-top:15px">
                <div class="card-content">
                    <div class="card-body cleartfix">
                        <div class="media align-items-stretch">
                            <div class="align-self-center">
                                <i style="font-size:60px; margin-right:20px ; color:darkmagenta" class="fas fa-id-card"></i>
                            </div>
                            <div class="media-body">
                                @{
                                    var person = Model.memberLists.Where(x => x.UserId == userId).FirstOrDefault();
                                }

                                <h4>@person.FullName - @person.NickName - @person.MemberNumber</h4>

                                <span>@person.UserName</span>
                            </div>



                            <div class="align-self-center">
                                <h3>Toplam Bakiye: @person.Price ₺<i style="font-size:25px; margin-left:10px ; color:darkmagenta" class="fas fa-tags"></i></h3>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="row">
                <div class="col-9">
                    <div class="card">

                        <div class="card-header d-flex justify-content-between">

                            <div style="margin:8px" id="TimeInf">

                            </div>

                            <div style="margin-top:8px">
                                <nav aria-label="Page navigation example">
                                    <ul class="pagination">

                                        @{
                                            DateTime date1 = DateTime.Now;

                                            var currentTime = date1.ToString("HH:mm");
                                            var cTimePriv = currentTime.Split(":")[0] + currentTime.Split(":")[1];
                                            var sTimePriv = startTime.Split(":")[0] + startTime.Split(":")[1];
                                            var date2 = date1.AddDays(1);
                                            var today = date1.ToString("yyyy-MM-dd");
                                            var tomorrow = date2.ToString("yyyy-MM-dd");


                                        }

                                        <li class="page-item"><a style="color:white;  background-color:#3fc9d5 !important" class="page-link" href="~/Public/Reservation?date=@today">Bugün</a></li>
                                        <li class="page-item"><a style="color:white; background-color:#337ab7" class="page-link" href="~/Public/Reservation?date=@tomorrow">Yarın</a></li>
                                        <li class="page-item"><input class="form-control" type="date" id="timeNow" style="cursor:pointer; background-color:#e7505a; color:white"></li>
                                        <li class="page-item"><button style="color:cornflowerblue; background-color:#f9f9f9" class="page-link" onclick="preDate()"><i class="fas fa-chevron-left"></i></button></li>
                                        <li class="page-item"><button style="color:cornflowerblue; background-color:#f9f9f9" class="page-link" onclick="nextDate()"><i class="fas fa-chevron-right"></i></button></li>

                                    </ul>
                                </nav>
                            </div>
                        </div>

                        <div class="card ">
                            <div class="card-body">
                                <table id="tablecount" style="text-align:center" class="table table-bordered2">
                                    <thead>
                                        <tr>
                                            <th style="background-color:#f5f8fd; font-weight:bold" scope="col">

                                            </th>

                                            @for (int i = 0; i < times.Count; i++)

                                                if (times[i].ResTimes.Split(":")[1] != "45")
                                                {
                                                    <th style="background-color:#f5f8fd; font-weight:inherit;" colspan="4" scope="col">@times[i].ResTimes</th>
                                                }


                                        </tr>
                                    </thead>

                                    <tbody>



                                        @foreach (var item in Model.courts)

                                        {
                                            if (item.CourtConditions == 1)
                                            {

                                                <tr>

                                                    <th style="background-color:#f5f8fd; font-weight:inherit;" scope="row">@item.CourtName</th>

                                                    @for (int i = 0; i < Model.resTimes.Count; i++)
                                                    {

                                                        var res = Model.reservations.Where(x => x.ResStartTime == Model.resTimes[i].ResTimes && x.Court.CourtId == item.CourtId).FirstOrDefault();


                                                        var period = (60 / Convert.ToInt32(item.CourtTimePeriod));


                                                        if (res != null)
                                                        {

                                                            double colspanVal = 0;

                                                            if (res.ResFinishTime.Split(":")[0] == "24")
                                                            {
                                                                var c = res.ResFinishTime.Split(":");
                                                                var d = res.ResStartTime.Split(":");
                                                                var fTimeS = Convert.ToInt32(c[0] + c[1]);
                                                                var sTimeS = Convert.ToInt32(d[0] + d[1]);
                                                                colspanVal = (fTimeS - sTimeS) * 4;
                                                            }

                                                            else
                                                            {
                                                                colspanVal = (Convert.ToDateTime(res.ResFinishTime) - Convert.ToDateTime(res.ResStartTime)).TotalHours * 4;
                                                            }

                                                            var mem = Model.memberLists.FirstOrDefault(x => x.UserId == res.UserId);
                                                            var scale = Model.courtScales.FirstOrDefault(x => x.Code == res.NickName);

                                                            if (mem != null)
                                                            {
                                                                if (res.UserId == userId)
                                                                {
                                                                    DateTime startT = Convert.ToDateTime(startTime);
                                                                    DateTime finishT = DateTime.Now;
                                                                    var tHours = (startT - finishT).TotalHours;

                                                                    if (res.PrivRes == true && tHours < 0)
                                                                    {
                                                                        <td borderRes="@res.ResStartTime , @period" data-toggle="popover" data-html="true" data-trigger="hover" data-placement="top" data-container="body" data-original-title="@res.NickName | @mem.FullName" data-content="<span style='color:#e61a1a'></span><br />@res.ResStartTime-@res.ResFinishTime <br /> @res.Court.CourtName <br /> @res.ResDate @res.ResTime" onclick="openResInfModal(this.id)" id="@res.ResId" colspan="@colspanVal" style="text-align:center; vertical-align:middle; cursor:pointer; background-color:#1bbc27!important;color:#ffffff!important; border-right: 1px solid #dee2e6;">
                                                                            <div style="background-color:#1bbc27!important;color:#ffffff!important;">
                                                                                <a style="padding:0;color:#fff;">
                                                                                    @res.NickName
                                                                                </a>

                                                                            </div>
                                                                        </td>
                                                                    }

                                                                    else if (res.PrivRes == false)
                                                                    {
                                                                        <td borderRes="@res.ResStartTime , @period" data-toggle="popover" data-html="true" data-trigger="hover" data-placement="top" data-container="body" data-original-title="@res.NickName | @mem.FullName" data-content="<span style='color:#e61a1a'></span><br />@res.ResStartTime-@res.ResFinishTime <br /> @res.Court.CourtName <br /> @res.ResDate @res.ResTime" onclick="openResInfModal(this.id)" id="@res.ResId" colspan="@colspanVal" style="text-align:center; vertical-align:middle; cursor:pointer; background-color:#1bbc27!important;color:#ffffff!important; border-right: 1px solid #dee2e6;">
                                                                            <div style="background-color:#1bbc27!important;color:#ffffff!important;">
                                                                                <a style="padding:0;color:#fff;">
                                                                                    @res.NickName
                                                                                </a>

                                                                            </div>
                                                                        </td>
                                                                    }

                                                                }

                                                                else
                                                                {
                                                                    DateTime startT = Convert.ToDateTime(startTime);
                                                                    DateTime finishT = DateTime.Now;
                                                                    var tHours = (startT - finishT).TotalHours;


                                                                    if (res.PrivRes == true && tHours < 0)
                                                                    {
                                                                        <td borderRes="@res.ResStartTime , @period" colspan="@colspanVal" style="text-align:center; vertical-align:middle;  background-color:#1bbc27!important;color:#ffffff!important; border-right: 1px solid #dee2e6;">
                                                                            <div style="background-color:#1bbc27!important;color:#ffffff!important;">
                                                                                <a style="padding:0;color:#fff;">
                                                                                    @res.NickName
                                                                                </a>

                                                                            </div>
                                                                        </td>
                                                                    }

                                                                    else if (res.PrivRes == false)
                                                                    {
                                                                        <td borderRes="@res.ResStartTime , @period" colspan="@colspanVal" style="text-align:center; vertical-align:middle;  background-color:#1bbc27!important;color:#ffffff!important; border-right: 1px solid #dee2e6;">
                                                                            <div style="background-color:#1bbc27!important;color:#ffffff!important;">
                                                                                <a style="padding:0;color:#fff;">
                                                                                    @res.NickName
                                                                                </a>

                                                                            </div>
                                                                        </td>
                                                                    }
                                                                }

                                                            }

                                                            else
                                                            {

                                                                <td borderRes="@res.ResStartTime , @period" id="@res.ResId" colspan="@colspanVal" style="text-align:center; vertical-align:middle;  background-color:@scale.Color!important;color:#ffffff!important; border-right: 1px solid #dee2e6;">
                                                                    <div style="background-color:@scale.Color!important;color:#ffffff!important;">
                                                                        <a style="padding:0;color:#fff;">
                                                                            @res.NickName
                                                                        </a>

                                                                    </div>
                                                                </td>
                                                            }


                                                            i = i + Convert.ToInt32(colspanVal) - 1;
                                                        }


                                                        else

                                                        {
                                                            if (period == 4)
                                                            {
                                                                <td borderRes="@Model.resTimes[i].ResTimes , @period" class="tdHover droppable" data-toggle="popover" data-trigger="hover" data-placement="top" data-container="body" data-content="@item.CourtName - @Model.resTimes[i].ResTimes" onclick="openResModal(this.id)" style="cursor:pointer" id="@item.CourtId , @item.CourtName , @Model.resTimes[i].ResTimes" per="@period"></td>
                                                            }

                                                            else if (period == 2)
                                                            {
                                                                <td borderRes="@Model.resTimes[i].ResTimes , @period" class="tdHover droppable" data-toggle="popover" data-trigger="hover" data-placement="top" data-container="body" data-content="@item.CourtName - @Model.resTimes[i].ResTimes" onclick="openResModal(this.id)" colspan="2" style="cursor:pointer" id="@item.CourtId , @item.CourtName , @Model.resTimes[i].ResTimes" per="@period"></td>
                                                                i = i + 1;
                                                            }
                                                            else if (period == 1)
                                                            {
                                                                <td borderRes="@Model.resTimes[i].ResTimes , @period" class="tdHover droppable" data-toggle="popover" data-trigger="hover" data-placement="top" data-container="body" data-content="@item.CourtName - @Model.resTimes[i].ResTimes" onclick="openResModal(this.id)" colspan="4" style="cursor:pointer" id="@item.CourtId , @item.CourtName , @Model.resTimes[i].ResTimes" per="@period"></td>
                                                                i = i + 3;
                                                            }

                                                        }

                                                    }

                                                </tr>
                                            }
                                        }

                                    </tbody>
                                </table>
                            </div>
                        </div>


                    </div>

                </div>

                <div class="col-3">

                    <div class="small-box bg-warning">
                        <div class="inner">
                            <h3>
                                @resCount
                            </h3>
                            <p>Bugüne Ait Reservasyon Sayısı</p>
                        </div>
                        <div class="icon">
                            <i class="ion ion-person-add"></i>
                        </div>
                    </div>

                    <div style="background-color:#337ab7 !important" class="small-box bg-info">
                        <div class="inner">
                            <h3>
                                @debt2 ₺
                            </h3>
                            <p>Toplam Rezervasyon Borcu</p>
                        </div>
                        <div class="icon">
                            <i class="ion ion-bag"></i>
                        </div>
                    </div>

                    <div class="small-box bg-success">
                        <div class="inner">

                            @{
                                var debtList = Model.memberDues.Where(x => x.MemberId == userId).ToList();

                                var priceNum = 0;

                                for (int i = 0; i < debtList.Count; i++)
                                {
                                    var xc = debtList[i].RemainingPrice;

                                    priceNum = priceNum + xc;
                                }
                            }

                            <h3>
                                @priceNum ₺
                            </h3>

                            <p>Üyelik Aidat Borcum</p>
                        </div>
                        <div class="icon">
                            <i class="ion ion-stats-bars"></i>
                        </div>
                    </div>

                    <div class="small-box bg-warning">
                        <div class="inner">

                            @{
                                var debtList2 = Model.memberDues.Where(x => x.MemberId == userId && x.DuesInfType == true).ToList();

                                var priceNum2 = 0;

                                for (int i = 0; i < debtList2.Count; i++)
                                {
                                    var xc = debtList2[i].RemainingPrice;

                                    priceNum2 = priceNum2 + xc;
                                }
                            }

                            <h3>
                                @priceNum2 ₺
                            </h3>

                            <p>Dolap Aidat Borcum</p>
                        </div>
                        <div class="icon">
                            <i class="ion ion-stats-bars"></i>
                        </div>
                    </div>

                    <div class="small-box bg-danger">
                        <div class="inner">
                            <h3>
                                @Model.resCan.Where(x => x.UserId == userId).ToList().Count()
                            </h3>

                            <p>İptal Edilen Toplam Rezervasyon Sayısı</p>
                        </div>
                        <div class="icon">
                            <i class="ion ion-pie-graph"></i>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </section>
</div>


<div class="modal fade" id="openResInf" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #004e6c;">
                <h5 class="modal-title" style="color:white;" id="exampleModalLabel">Rezervasyon Bilgileri</h5>
                <button style="color:white;" type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">


                <div style="background-color:#d39e000f" class="callout callout-warning row">


                    <h5 class="col-md-9" id="nickAndFullName"></h5>
                    <div id="cancelRes" class="col-md-0">
                        <button style="background-color:#dc3545; color:white" class="btn btn-danger" type="button" onclick="cancelResProcedure(this.id)">İptal Et</button>
                    </div>
                    <div class="col-md">
                        <button style="background-color:#004e6c; color:white" class="btn btn-primary" type="button" id="">Düzenle</button>
                    </div>
                </div>


                <div class="row">
                    <div class="col-sm-6">
                        <div class="card">
                            <div class="card-body" style="background-color:#d39e000f">
                                <ul style="font-size:20px" class="list-group list-group-flush">
                                    <li id="courtName" class="list-group-item"></li>
                                    <li id="resDate" class="list-group-item"></li>
                                    <li id="resTime" class="list-group-item"></li>
                                    <li id="resNowDate" class="list-group-item"></li>
                                    <li id="doResInf" class="list-group-item"></li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="card">
                            <div class="card-body" style="background-color:#d39e000f">

                                <div id="PriceInf" class="info-box shadow-lg">

                                </div>

                                <div class="info-box shadow-lg">
                                    <div class="info-box-content">
                                        <table style="text-align:center" class="table table-bordered">

                                            <thead>
                                                <tr>
                                                    <th style="font-weight:bold" scope="col">Ücret Bilgisi</th>
                                                    <th style="font-weight:bold" scope="col">Ücret </th>

                                                </tr>
                                            </thead>

                                            <tbody id="PriceNI">
                                            </tbody>

                                            <tfoot>

                                                <tr>
                                                    <th style="font-weight:bold" scope="col">Ücret Toplam :</th>
                                                    <th id="sumPrice" style="font-weight:bold" scope="col"></th>

                                                </tr>
                                            </tfoot>

                                        </table>
                                    </div>
                                </div>

                                <div class="info-box shadow-lg">
                                    <div class="info-box-content">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <button style="font-size:15px; background-color:#ffc107" type="button" class="btn btn-dark">Ödeme</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="rsvModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <div id="CourtandTime">

            </div>

            <div class="modal-header">
                <div class="row" id="court_select">
                    <div id="ResModal" style="display: contents;">

                    </div>
                </div>
            </div>


            <div class="modal-footer" id="forApproveId">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" onclick="ApproveAll(this.id)">Rezervasyon Yap</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="priceModal">
    <div class="modal-dialog modal-dialog-bottom modal-lg" style="top:35% !important">
        <div class="modal-content">


            <div class="modal-header" style="background-color: #004e6c;">
                <h4 style="margin:auto; color:white">Ücretlendirme</h4>
            </div>


            <div class="modal-header">
                <div class="col-sm-12">
                    <div class="form-group" style="text-align:center">
                        <table class="table table-bordered ">
                            <thead>
                                <tr>
                                    <th style="font-weight:bold" scope="col">Adı</th>
                                    <th style="font-weight:bold" scope="col">Fiyatı</th>
                                    <th style="font-weight:bold" scope="col">Seç</th>
                                </tr>
                            </thead>
                            <tbody id="courtPriceListAppend">
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th style="font-weight:bold" scope="col">Ücret Toplam :</th>
                                    <th id="sumOfPrice" style="font-weight:bold" scope="col"></th>
                                    <th scope="col"></th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>

            <div style="display:none" class="modal-footer">
                <textbox style="color:black; " id="userId">@userId</textbox>
            </div>

            <div class="modal-footer" id="forApproveId2">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" onclick="Approve(this.id)">Rezervasyon Tamamla</button>
            </div>
        </div>
    </div>
</div>

<script>

    var picker = "@ViewBag.Date";

    $(document).ready(function () {

        $("#example1").DataTable({
            "responsive": true, "lengthChange": false, "autoWidth": false,
            "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"]
        }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');

        $('#example2 , #example3 , #example4').DataTable({
            "paging": false,
            "lengthChange": false,
            "searching": false,
            "ordering": true,
            "info": true,
            "autoWidth": false,
            "responsive": true,
        });



         $('[data-toggle="popover"]').popover()





        //Rezervasyon Şema Tarih

        $('#timeNow').val(picker);


        $('#timeNow').change(function () {

            window.location.href = "Reservation?date=" + $('#timeNow').val();

         });




        //TimeInf
        var time = $('#timeNow').val();
        var b = time.split("-");
        var timeNow = b[2] + '-' + b[1] + '-' + b[0];

        var days = new Date(time);
        var getday = days.getDay();



        switch (getday) {
            case 0:
                day = "Pazar";
                break;
            case 1:
                day = "Pazartesi";
                break;
            case 2:
                day = "Salı";
                break;
            case 3:
                day = "Çarşamba";
                break;
            case 4:
                day = "Perşembe";
                break;
            case 5:
                day = "Cuma";
                break;
            case 6:
                day = "Cumartesi";
        }

        $("#TimeInf").empty();
        row = "";
        row += '<h4 style="margin:auto; color:black"><i style="color:black" class="fas fa-flag nav-icon"></i>' + ' ' + timeNow + ' ' + ' - ' + ' ' + day + ' ' + '</h4>';
        $("#TimeInf").append(row);
    });



    // Rezervasyon Şema Tarih
    function nextDate() {

        var date = $("#timeNow").val();

        const d = new Date(date);
        d.setDate(d.getDate() + 1);

        var month = (d.getMonth() + 1);
        var day = d.getDate();
        if (month < 10)
            month = "0" + month;
        if (day < 10)
            day = "0" + day;

        var date3 = d.getFullYear() + '-' + month + '-' + day;



        window.location.href = "Reservation?date=" + date3;
    }

    function preDate() {

        var date = $("#timeNow").val();

        const d = new Date(date);
        d.setDate(d.getDate() - 1);

        var month = (d.getMonth() + 1);
        var day = d.getDate();
        if (month < 10)
            month = "0" + month;
        if (day < 10)
            day = "0" + day;
        var date4 = d.getFullYear() + '-' + month + '-' + day;



        window.location.href = "Reservation?date=" + date4;

    }

    //Rezervasyon Yap
    function openResModal(id) {

        var tm = $("#timeNow").val();
        var uI = $('#userIdMember').val();


        var a = id.split(",");
        var courtId = a[0];
        var courtName = a[1];
        var checkTime = a[2];

        var resStartTime = $('#doRes').attr('start');
        var resFinishTime = $('#doRes').attr('finish');
        var dt = new Date();
        var hours = dt.getHours();
        var min = dt.getMinutes();

        if (hours < 10)
        {
            var time = "0" +  hours + ":" + min;
        }

        else if (min < 10) {
            var time = hours + ":" + "0" +  min;
        }
        else if (hours < 10 && min <10) {
            var time = "0" + hours + ":" + "0" + min;
        }
        else
            var time =  hours + ":" + min;



        var a = time.split(":");
        var b = resStartTime.split(":");
        var c = resFinishTime.split(":");

        var nowTime = a[0] + a[1];
        var sTime = b[0] + b[1]; //2109
        var fTime = c[0] + c[1]; //2209

        debugger;

        $.ajax({
            type: "POST",
            url: '../Public/GetResList2',
            cache: false,
            data: { "date": tm, "userId": uI },
            dataType: "json",
            async: false,
            success: function (res) {

                debugger;

                if (res.length >= parseInt($("#memMaxRes").val())) {
            
                    swal("Üye İçin Gün İçinde Max Rezervasyon Saatini Aştınız!", "Rezervasyonunuzun Tamamlanmasını Bekleyiniz", "warning", {
                        button: "Tamam",
                    });
                }

               else if (sTime <= nowTime && fTime >= nowTime) {

                    getCourtTime(courtId, courtName, checkTime);
                }

                else 

                    swal("Rezervasyon Saatleri Dışındasınız !", "Rezervasyon Saatleri: " + '  ' + resStartTime + '  ' + "ile" + '  ' + resFinishTime + '  ' + "saatleri" + '  ' + "arasındadır.", "warning", {
                        button: "Tamam",
                    });
                
            },

            error: function (textStatus, errorThrown) {
                console.log(JSON.stringify(textStatus));
                console.log(textStatus);
            }
        });
    }

    function getCourtTime(courtId , courtName , checkTime) {

        $("#forApproveId button:nth-of-type(2)").attr("id", courtId);
        $("#forApproveId2 button:nth-of-type(2)").attr("id", courtId);


        var dt = new Date();

        var hours = dt.getHours();
        var min = dt.getMinutes();

        if (hours < 10)
        {
            var time = "0" +  hours + ":" + min;
        }
        else if (min < 10) {
            var time = hours + ":" + "0" +  min;
        }
        else if (hours < 10 && min <10) {
            var time = "0" + hours + ":" + "0" + min;
        }
        else
            var time =  hours + ":" + min;



        var days = new Date($('#timeNow').val());
        var getday = days.getDay();

        var dd = String(dt.getDate()).padStart(2, '0');
        var mm = String(dt.getMonth() + 1).padStart(2, '0');
        var yyyy = dt.getFullYear();

        var today = yyyy + '-' + mm + '-' + dd;


        var date = $("#timeNow").val();
        var b = date.split("-");
        var timeInf = b[2] + '-' + b[1] + '-' + b[0];


        //ResNextDayMember
        function parseDate(str) {
            var mdy = str.split('-');
            return new Date(mdy[0], mdy[1] - 1, mdy[2]);
        }

        function datediff(first, second) {
            // Take the difference between the dates and divide by milliseconds per day.
            // Round to nearest whole number to deal with DST.
            return Math.round((second - first) / (1000 * 60 * 60 * 24));
        }

        var x = today;
        var y = $("#timeNow").val();

        var antNextDay = parseInt($("#antNextDay").val());
        var memNextDay = parseInt($("#memNextDay").val());


        var diff = datediff(parseDate(x), parseDate(y));



        if ($("#timeNow").val() < today) {

            swal("Uyarı !", "Önceki Günlere Rezervasyon Yapamazsınız." , "warning", {
                button: "Tamam",
            });

            $("#timeNow").val(today)
        }


        else if ($("#RoleName").val() == "Üye" && diff > memNextDay) {


            swal("Uyarı !", "En Fazla " + memNextDay + " Gün Sonraya Rezervasyon Yapabilirsiniz  !!", "warning", {
                    button: "Tamam",
            });

                $("#dateInf").val(today)
        }

        else if ($("#RoleName").val() == "Antrenör" && diff > antNextDay) {

                swal("Uyarı !", "En Fazla 6 Gün Sonraya Rezervasyon Yapabilirsiniz  !!", "warning", {
                    button: "Tamam",
                });

                $("#dateInf").val(today)
        }

        else
            $.ajax({
                type: "POST",
                url: '../Public/GetResTime',
                cache: false,
                data: { "dateInf": $("#timeNow").val(), courtId },
                dataType: "json",
                async: false,
                success: function (res) {



                    $('#rsvModal').modal('toggle');


                    switch (getday) {
                        case 0:
                            day = "Pazar";
                            break;
                        case 1:
                            day = "Pazartesi";
                            break;
                        case 2:
                            day = "Salı";
                            break;
                        case 3:
                            day = "Çarşamba";
                            break;
                        case 4:
                            day = "Perşembe";
                            break;
                        case 5:
                            day = "Cuma";
                            break;
                        case 6:
                            day = "Cumartesi";
                    }

                    $("#CourtandTime").empty();
                    row = "";
                    row += '<div class="modal-header" style="background-color: #004e6c;">';
                    row += '<h4 style=" margin:auto; color:white"><i class="fas fa-flag nav-icon"></i>' + ' ' + courtName + ' ' + ' - ' + ' ' + timeInf + ' ' + ' - ' + ' ' + day + ' ' + ':' + ' ' + '</h4>';
                    row += '</div>';
                    $("#CourtandTime").append(row);


                    if (res.length > 0) {

                            $("#ResModal").empty();

                        for (var i = 0; i < res.length; i++) {

                                NewRow = "";


                            if (res[i].isTaken == true) {
                                NewRow += '<div style="background-color:rgb(236, 0, 18);" class="form-group reservationForm">';
                                NewRow += '<div class="custom-control custom-checkbox custom-control2" id="checkTimeTable">';
                                NewRow += '<input class="custom-control-input custom-control-input-danger custom-control-input-outline" type="checkbox" id="customCheckbox5" checked="" disabled="">';
                                NewRow += '<label style="color:white; font-weight:inherit;" for="t_' + res[i].timeId + '" class="custom-control-label custom-control-label2">' + res[i].start + '</label>';
                                NewRow += '</div></div>';
                            }



                            else if (res[i].start <= time && date == today) {
                                NewRow += '<div style="background-color:rgb(236, 0, 18);" class="form-group reservationForm">';
                                NewRow += '<div class="custom-control custom-checkbox custom-control2" id="checkTimeTable">';
                                NewRow += '<input class="custom-control-input custom-control-input-danger custom-control-input-outline" type="checkbox" id="customCheckbox5" checked="" disabled="">';
                                NewRow += '<label style="color:white; font-weight:inherit; for="t_' + res[i].timeId + '" class="custom-control-label custom-control-label2">' + res[i].start + '</label>';
                                NewRow += '</div></div>';
                            }


                            else {
                                NewRow += '<div  class="form-group reservationForm">';
                                NewRow += '<div class="custom-control custom-checkbox custom-control2 " id="checkTimeTable">';
                                NewRow += '<input onclick="checkMe(this.id)" class="custom-control-input custom-control-input-primary" type="checkbox" id= "t_' + res[i].timeId + '" name= "' + res[i].start + '" per= "' + res[i].period + '">';
                                NewRow += '<label style="font-weight:inherit;" for="t_' + res[i].timeId + '" class="custom-control-label custom-control-label2">' + res[i].start + '</label>';
                                NewRow += '</div></div>';
                            }


                                $("#ResModal").append(NewRow);
                        }

                    }
                },

                error: function (textStatus, errorThrown) {
                    console.log(JSON.stringify(textStatus));
                    console.log(textStatus);
                }
            });

        checkMe(checkTime);
    }

    function getPrice() {


        var price = [];
        $('#checkPriceTables input:checked').each(function () {
            price.push(this.name);
        });


        var sum = 0;

        for (var i = 0; i < price.length; i++) {

            var first = parseInt(price[i])
            var sum = first + sum;


            $("#sumOfPrice").html(sum);
        }

    }

    function ApproveAll(id) {



        var checkTimeList = [];

        $('#checkTimeTable input:checked:not(:disabled)').each(function () {
            checkTimeList.push(this.name);
        });

        if (checkTimeList.length == 0) {
            swal({
                title: "Uyarı",
                text: "Lütfen Saat Seçiniz !",
                icon: "error",
                button: "Tamam",
            }).then((value) => {



            });
        }

        else {
            var timePickerModal = $('#timeNow').val();

            var clcTime = checkTimeList[0];
            var pickerDay = new Date(timePickerModal);
            var Day = pickerDay.getDay();
            var Month = pickerDay.getMonth();
            var courtId = id;

            $.ajax({
                type: "POST",
                url: '../Public/GetListPrice',
                cache: false,
                data: { "id": courtId, "day": Day, "month": Month, "time": clcTime },
                dataType: "json",
                async: false,
                success: function (res) {

                    $("#courtPriceListAppend").empty();

                    row = "";

                    for (var i = 0; i < res.courtPriceLists.length; i++) {

                        if (res.courtPriceLists[i].condition == "1") {

                            row += '<tr>';
                            row += '<td>' + res.courtPriceLists[i].name + '</td>';
                            row += '<td>' + res.courtPriceLists[i].courtPrice + "₺" + '</td>';
                            row += '<td>';
                            row += '<div class="custom-control custom-checkbox" id="checkPriceTables">';
                            row += '<input class="custom-control-input custom-control-input-danger custom-control-input-outline" value="' + res.courtPriceLists[i].courtPriceListId + '" type="checkbox" name="' + res.courtPriceLists[i].courtPrice + '" id="cb_' + res.courtPriceLists[i].courtPriceListId + '" checked="checked" disabled="true">';
                            row += '<label for="cb_' + res.courtPriceLists[i].courtPriceListId + '" class="custom-control-label"></label>';
                            row += '</div>';
                            row += '</td>';
                            row += '</tr>';

                        }
                    }



                    $("#courtPriceListAppend").append(row);

                    getPrice()

                    $('#priceModal').modal('toggle');


                },

                error: function (textStatus, errorThrown) {
                    console.log(JSON.stringify(textStatus));
                    console.log(textStatus);
                }
            });
        }

    }

    function Approve(id) {

        // seçilen saatler
        var times = [];
        $('#checkTimeTable input:checked:not(:disabled)').each(function () {
            times.push(this.name);
        });

        var priceId = [];
        $('#checkPriceTables input:checked').each(function () {
            priceId.push(this.value);
        });

        var strPriceId = "";

        for (var i = 0; i < priceId.length; i++) {

            var Id = priceId[i];
            var x = Id + ',';
            strPriceId = strPriceId + x;
        }


        //saat  - tarih
        var dt = new Date();
        var time = dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds();

        var dd = String(dt.getDate()).padStart(2, '0');
        var mm = String(dt.getMonth() + 1).padStart(2, '0');
        var yyyy = dt.getFullYear();

        var today = yyyy + '-' + mm + '-' + dd;



        var resobject = {

            ResDate: '',
            ResStartTime: '',
            ResFinishTime: '',
            ResEvent: '',
            userId: '',
            CourtId: '',
            ResTime: '',
            ResNowDate: '',
            Price: '',
            PriceIds: '',
            RoleId: '',
            RoleName: '',
        }

        resobject.ResNowDate = today;
        resobject.ResStartTime = times[0];
        resobject.ResFinishTime = times[(times.length - 1)];

        resobject.Price = $("#sumOfPrice").html();
        resobject.ResDate = $("#timeNow").val();
        resobject.ResTime = time;
        resobject.PriceIds = strPriceId;
        resobject.userId = $("#userId").text();
        resobject.ResEvent = "event-1"
        resobject.CourtId = id;
        resobject.CourtId = id;
        resobject.RoleId = $("#RoleSesId").val();
        resobject.RoleName = $("#RoleSes").val();

        debugger;

        if (times.length == 0) {

            swal({
                title: "Rezervasyon Onaylanmadı",
                text: "Lütfen Saat Seçiniz !",
                icon: "error",
                button: "Tamam",
            }).then((value) => {



            });
        }

        else {
            try {

                $.ajax({
                    type: "POST",
                    url: '../Public/NewReservation',
                    cache: false,
                    data: resobject,
                    dataType: "json",
                    async: true,
                    success: function (res) {

                        if (res == true) {

                            $('#rsvModal').modal('toggle');

                            swal({
                                title: "Rezervasyon Başarılı",
                                text: "Rezervasyon Kaydınız Başarılı Bir Şekilde Gerçekleşti !",
                                icon: "success",
                                button: "Tamam",
                            }).then((value) => {

                                window.location.href = "Reservation?date=" + $('#timeNow').val();

                            });
                        }

                        else {

                            $('#rsvModal').modal('toggle');

                            swal({
                                title: "Rezervasyon Onaylanmadı",
                                text: "Bakiye Yetersiz Lütfen Bakiye Yükleyiniz !",
                                icon: "error",
                                button: "Tamam",
                            }).then((value) => {



                            });
                        }

                    },
                    error: function (textStatus, errorThrown) {
                        console.log(JSON.stringify(textStatus));
                        console.log(textStatus);
                    }
                });
            } catch (e) {
                console.log(e.message);
            }

        }
    }

    function WebReservation() {

        swal("Dikkat!", "İnternet Üzerinden Rezervasyon Yetkiniz Bulunmamaktadır.", "warning", {
            button: "Tamam",
        });
    }





    //RezervasyonBilgiModal

    function openResInfModal(id) {

        $.ajax({
            type: "GET",
            url: '../Public/GetResModalInf',
            cache: false,
            data: { "id": id },
            dataType: "json",
            async: true,
            success: function (res) {



                $("#PriceInf").empty();
                row = "";

                if (res.resSchemaModal.priceInf == false) {
                    row += '<span class="info-box-icon"><i style="color:red" class="fas fa-times"></i></span>';
                    row += '<div class="info-box-content">';
                    row += '<span class="info-box-text">Ücreti Ödenmedi - Borç Mevcut</span>';
                }
                else {
                    row += '<span class="info-box-icon"><i style="color:#1bbc27" class="fas fa-check"></i></span>';
                    row += '<div class="info-box-content">';
                    row += '<span class="info-box-text">Ücreti Ödendi - Borç Mevcut Değil</span>';
                }
                row += '</div>';
                $("#PriceInf").append(row);



                var x = res.resSchemaModal.priceIds;
                var IdsArray = x.split(",");

                $("#PriceNI").empty();

                row = "";

                for (var i = 0; i < res.courtPriceLists.length; i++) {
                    for (var a = 0; a < IdsArray.length; a++) {

                        if (IdsArray[a] == res.courtPriceLists[i].courtPriceListId) {
                            row += '<tr>';
                            row += '<td>' + res.courtPriceLists[i].name + '</td>';
                            row += '<td>'+ res.courtPriceLists[i].courtPrice+'</td>';
                            row += '</tr>';
                        }
                    }
                }

                $("#PriceNI").append(row);

                $("#sumPrice").html(res.resSchemaModal.price);

                var a = res.resSchemaModal.resNowDate.split("-");
                var nowDate = a[2] + '-' + a[1] + '-' + a[0];

                var b = res.resSchemaModal.resDate.split("-");
                var date = b[2] + '-' + b[1] + '-' + b[0];

                var days = new Date(res.resSchemaModal.resDate);
                var getday = days.getDay();

                switch (getday) {
                    case 0:
                        day = "Pazar";
                        break;
                    case 1:
                        day = "Pazartesi";
                        break;
                    case 2:
                        day = "Salı";
                        break;
                    case 3:
                        day = "Çarşamba";
                        break;
                    case 4:
                        day = "Perşembe";
                        break;
                    case 5:
                        day = "Cuma";
                        break;
                    case 6:
                        day = "Cumartesi";
                }

                if (res != null) {



                    $("#nickAndFullName").text(res.resSchemaModal.nickName + ' - ' + res.resSchemaModal.fullName);
                    $("#courtName").text('Kort Adı:' + ' ' + res.resSchemaModal.courtName);
                    $("#resDate").text('Tarih-Gün:' + ' ' + date + ' - ' + day);
                    $("#resTime").text('Saat:' + ' ' + res.resSchemaModal.resStartTime + ' - ' + res.resSchemaModal.resFinishTime);
                    $("#resNowDate").text('Oluşturulma' + ':' + ' ' + nowDate + ' - ' + res.resSchemaModal.resTime);
                    $("#doResInf").text('İşlem Yapan' + ':' + ' ' + res.resSchemaModal.doResInf);

                    $("#cancelRes button:nth-of-type(1)").attr("id", id);
                    $('#openResInf').modal('toggle');

                }
                else {
                    $.confirm({
                        title: "Uyarı",
                        content: "Üye Bulunamadı.",
                        buttons: {
                            TAMAM: function () {

                            }
                        }
                    });
                }

            },
            error: function (textStatus, errorThrown) {
                console.log(JSON.stringify(textStatus));
                console.log(textStatus);
            }
        });

    }

    function cancelRes(id , procedure) {

        var  userId = $("#userId").text();
        $('#openResInf').modal('toggle');

        if (procedure == false) {
            swal({
                title: "Emin Misiniz?",
                text: "Rezervasyon İptal Süresi Geçtiği için Ücret Yansıtılarak İptal Edilecektir. Ücret Yansımadan İptal Etmek için Yetkili ile Görüşünüz !",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {

                        $.ajax({
                            type: "GET",
                            url: '../Public/CancelRes',
                            cache: false,
                            data: { "id": id, "userId": userId, "procedure": procedure },
                            dataType: "json",
                            async: true,
                            success: function (res) {

                                if (res != null) {

                                    swal({
                                        title: "Rezervasyon İptal Edildi",
                                        text: "Rezervasyon Kaydınız Başarılı Bir Şekilde İptal Edildi !",
                                        icon: "success",
                                        button: "Tamam",
                                    }).then((value) => {

                                        window.location.href = "Reservation?date=" + $('#timeNow').val();

                                    });

                                }
                            },

                            error: function (textStatus, errorThrown) {
                                console.log(JSON.stringify(textStatus));
                                console.log(textStatus);
                            }
                        });

                    }
                    else
                        swal({
                            title: "Rezervasyon Korundu",
                            text: "Rezervasyonu Silmekten Vazgeçtiniz!",
                            icon: "success",
                            button: "Tamam",
                        });
                });
        }

        else {

        swal({
            title: "Emin Misiniz?",
            text: "Rezervasyon  İptal Edilecek !",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {

                    $.ajax({
                        type: "GET",
                        url: '../Public/CancelRes',
                        cache: false,
                        data: { "id": id, "userId": userId, "procedure": procedure},
                        dataType: "json",
                        async: true,
                        success: function (res) {

                            if (res != null) {

                                swal({
                                    title: "Rezervasyon İptal Edildi",
                                    text: "Rezervasyon Kaydınız Başarılı Bir Şekilde İptal Edildi !",
                                    icon: "success",
                                    button: "Tamam",
                                }).then((value) => {

                                    window.location.href = "Reservation?date=" + $('#timeNow').val();

                                });

                            }
                        },

                        error: function (textStatus, errorThrown) {
                            console.log(JSON.stringify(textStatus));
                            console.log(textStatus);
                        }
                    });

                }
                else
                    swal({
                        title: "Rezervasyon Korundu",
                        text: "Rezervasyonu Silmekten Vazgeçtiniz!",
                        icon: "success",
                        button: "Tamam",
                    });
            });
        }
    }

    function cancelResProcedure(id) {

        $.ajax({
            type: "GET",
            url: '../Public/CancelResProcedure',
            cache: false,
            data: { "id": id },
            dataType: "json",
            async: true,
            success: function (res) {


                if (res == false) {

                    var procedure = false;

                    cancelRes(id , procedure)

                }

                else {

                    var procedure = true;

                    cancelRes(id, procedure)
                }
            },

            error: function (textStatus, errorThrown) {
                console.log(JSON.stringify(textStatus));
                console.log(textStatus);
            }
        });

    }


    $("#tablecount td").each(function () {


        var abc = $(this).attr('borderRes');
        var time = abc.split(",")[0].split(":")[1].trim();
        var per = abc.split(",")[1].trim();

        if (time == "00" && per == "1")

            $(this).addClass("hourborder");

        else if (time == "15" && per == "1") {
            $(this).addClass("hourborder");
        }

        else if (time == "00" && per == "2") {
            $(this).addClass("hourborder");
        }

        else if (time == "15" && per == "2") {
            $(this).addClass("hourborder");
        }


        else if (time == "15" && per == "4") {
            $(this).addClass("hourborder");
        }


        //else if (time == "00" && per == "4") {

        //    $(this).addClass("hourborder");
        //}


        else {
            $(this).addClass("");
        }

        $(this).css("width", "15px");

    });

    function checkMe(id) {

        var checkID = "";

        var value = $("input[name='" + id.trim() + "']");

        if (value.length != 0) {

            var xx = id.split(":");

            if (xx.length > 1) {

                id = value[0].id;
                checkID = parseInt(value[0].id.split("_")[1]);
                $("input[id=" + id + "]").attr('checked', true)
            }
        }

        else {

            checkID = parseInt(id.split("_")[1]);
        }


        var per = $("#" + id).attr("per");
        var checkList = [];
        var checkTrueList = [];


        $('#checkTimeTable input:checked:not(:disabled)').each(function () {
            checkTrueList.push(this.id);
        });

        if (checkTrueList.length > 0) {

            for (var i = 0; i < checkTrueList.length; i++) {

                var x = checkTrueList[i];

                if (x != id) {

                    checkList.push(x);
                }

            }
            checkList.push(id);

            if (per == 15) {

                if (checkTrueList.length < 4 && checkTrueList.length == 3) {

                    for (var i = 0; i < checkTrueList.length; i++) {

                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', false);
                    }
                }


                else if (checkTrueList.length < 4 && checkTrueList.length != 1) {

                    for (var i = 0; i < checkTrueList.length; i++) {

                        $("#t_" + i).prop('checked', false);
                    }

                }



                else if (checkTrueList.length > 4 && checkList[checkList.length - 1].split("_")[1] - checkList[checkList.length - 2].split("_")[1] == 1) {

                    for (var i = 0; i < checkTrueList.length; i++) {
                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', true);
                    }

                }


                else if (checkTrueList.length > 4) {

                    for (var i = 0; i < checkTrueList.length; i++) {
                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', false);
                    }


                    for (var i = checkID; i < (checkID + 4); i++) {

                        $("#t_" + i).prop('checked', true);

                        checkList.push("t_" + i);

                    }
                }

                else
                    for (var i = checkID; i < (checkID + 4); i++) {

                        $("#t_" + i).prop('checked', true);

                        checkList.push("t_" + i);

                    }
            }

            else if (per == 30) {

                if (checkTrueList.length > 2 && checkList[checkList.length - 1].split("_")[1] - checkList[checkList.length - 2].split("_")[1] == 1) {

                    for (var i = 0; i < checkTrueList.length; i++) {
                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', true);
                    }

                }

                else if (checkTrueList.length > 2) {

                    for (var i = 0; i < checkTrueList.length; i++) {

                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', false);
                    }


                    for (var i = checkID; i < (checkID + 2); i++) {

                        $("#t_" + i).prop('checked', true);

                        checkList.push("t_" + i);


                    }
                }

                else if (checkTrueList.length == 1) {


                    for (var i = 0; i < checkTrueList.length; i++) {

                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', false);
                    }


                    for (var i = checkID; i < (checkID + 2); i++) {

                        $("#t_" + i).prop('checked', true);

                        checkList.push("t_" + i);


                    }
                }

            }

            else

                if (checkTrueList.length > 1) {

                    for (var i = 0; i < checkTrueList.length; i++) {

                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', false);
                    }


                    for (var i = checkID; i < (checkID + 1); i++) {

                        $("#t_" + i).prop('checked', true);

                        checkList.push("t_" + i);


                    }
                }
        }


    }


</script>
