
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model Helpers.Dto.ViewDtos.HomeModelDto


@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor;

@{
    var fullname = HttpContextAccessor.HttpContext.Session.GetString("FullName");
    var nickname = HttpContextAccessor.HttpContext.Session.GetString("NickName");
    var username = HttpContextAccessor.HttpContext.Session.GetString("UserName");
    var userId = HttpContextAccessor.HttpContext.Session.GetString("UserId");
    var Role = HttpContextAccessor.HttpContext.Session.GetString("Role");




    var times = Model.resTimes.Where(x => x.Restimes60 == 60 && x.ResTimes30 == 30).ToList();

    var x = times.Count * 4;

    var start = Model.reservationSettings.Where(x => x.ReservationSettingsInf == "Web Rezervasyon Başlangıç Saati").FirstOrDefault();
    var finish = Model.reservationSettings.Where(x => x.ReservationSettingsInf == "Web Rezervasyon Bitiş Saati (Max = 23:59)").FirstOrDefault();
    var resSettingsTime = Model.reservationSettings.Where(x => x.ReservationSettingsInf == "Rezervasyon Süresi (Dakika)").FirstOrDefault();

    var startTime = start.ReservationValue;
    var finishTime = finish.ReservationValue;
    var resSetTime = resSettingsTime.ReservationValue;

    var TotalResPriceList = Model.reservations.Where(x => x.PriceInf == false).ToList();
    var TotalResCanPriceList = Model.reservationCancels.Where(x => x.PriceInf == false).ToList();

    float firstDebt;
    float secDebt;

    if (TotalResPriceList.Count != 0)
    {
        firstDebt = 0;

        for (int i = 0; i < TotalResPriceList.Count; i++)
        {
            firstDebt = firstDebt + TotalResPriceList[i].Price;
        }
    }
    else
    {
        firstDebt = 0;
    }

    if (TotalResCanPriceList.Count != 0)
    {
        secDebt = 0;

        for (int i = 0; i < TotalResCanPriceList.Count; i++)
        {
            secDebt = secDebt + TotalResCanPriceList[i].Price;
        }
    }

    else
    {
        secDebt = 0;
    }
    var totalResDebtInf = firstDebt + secDebt;
    var totalResDebtInf2 = String.Format("{0:n}", totalResDebtInf);
   


}

<style>


    .table-bordered2 {
        border: 1px solid #dee2e6;
    }

        .table-bordered2 th {
            border: 1px solid #dee2e6;
        }

        .table-bordered2 thead th {
            border-bottom-width: 2px;
        }

    .table td {
        position: inherit !important;
    }


    .hourborder {
        border-left: 1px solid #dee2e6;
        border-bottom: 1px solid #dee2e6;
    }
</style>
<style>
    .tdHover:hover {
        background-color: #131da882;
    }

    .reservationForm {
        padding: 0.8rem 0 0 0 !important;
        border: 0.5px solid #dedede !important;
        margin: 0.1rem !important;
    }

    .custom-control2 {
        padding: 0.2rem !important;
    }

    .custom-control-label2::before {
        top: -0.75rem !important;
        left: 0.8rem !important;
    }

    .custom-control-label2::after {
        top: -0.75rem !important;
        left: 0.8rem !important;
    }
</style>

    <div class="content-wrapper">
        <section class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-3 col-6">
                        <div class="small-box bg-warning">
                            <div style="margin-top:10px" class="inner">
                                <h3>

                                    75,412.00 ₺

                                </h3>
                                <p>Toplam Aidat Borçları</p>
                            </div>
                            <div class="icon">
                                <i class="ion ion-person-add"></i>
                            </div>
                            @*<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>*@
                        </div>
                    </div>

                    <div class="col-lg-3 col-6">

                        <div style="background-color:#337ab7 !important" class="small-box bg-info">
                            <div style="margin-top:10px" class="inner">
                                <h3>
                                    @totalResDebtInf2
                                </h3>
                                <p>Toplam Reservasyon Borçları</p>
                            </div>
                            <div class="icon">
                                <i class="ion ion-bag"></i>
                            </div>
                            @*<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>*@
                        </div>
                    </div>

                    <div class="col-lg-3 col-6">

                        <div class="small-box bg-success">
                            <div style="margin-top:10px" class="inner">
                                @*<h3>53<sup style="font-size: 20px">%</sup></h3>*@

                                <h3>

                                    @if (Model.TodayResCount == null)
                                    {
                                        @Html.Raw("-") ;
                                    }

                                    else

                                        @Model.TodayResCount

                                </h3>
                                <p>Bugüne Ait Rezervasyon Sayısı</p>
                            </div>
                            <div class="icon">
                                <i class="ion ion-stats-bars"></i>
                            </div>
                            @*<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>*@
                        </div>
                    </div>

                    <div class="col-lg-3 col-6">

                        <div class="small-box bg-danger">
                            <div style="margin-top:10px" class="inner">
                                <h3>

                                    @if (Model.TotalResCount == null)
                                    {
                                        @Html.Raw("-") ;
                                    }

                                    else

                                        @Model.TotalResCount

                                </h3>

                                <p>Toplam Rezervasyon Sayısı</p>
                            </div>
                            <div class="icon">
                                <i class="ion ion-pie-graph"></i>
                            </div>
                            @*<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>*@
                        </div>
                    </div>
                </div>

                <div id="resTableGeneral" class="row">
                    <div class="col-lg-9">

                        <div style="display: none;"><input id="RoleName" =""="text" name="name" value="@Role" /></div>
                        <div style="display: none;"><input id="doRes" start="@startTime" finish="@finishTime" setTime="@resSetTime" type="text" /></div>

                        <div class="card">
                            <div class="card-body">

                                <div class="d-flex justify-content-between">

                                    <div style="margin:8px" id="TimeInf">

                                    </div>


                                    <div style="margin-top:8px">
                                        <nav aria-label="Page navigation example">
                                            <ul class="pagination">

                                                @{
                                                    DateTime date1 = DateTime.Now;
                                                    var date2 = date1.AddDays(1);
                                                    var today = date1.ToString("yyyy-MM-dd");
                                                    var tomorrow = date2.ToString("yyyy-MM-dd");
                                                }

                                                <li class="page-item"><a style="color:white; cursor:pointer; background-color:#3fc9d5 !important" class="page-link" id="@today" onclick="getResTable(this.id)">Bugün</a></li>
                                                <li class="page-item"><a style="color:white; cursor:pointer;  background-color:#337ab7" class="page-link" id="@tomorrow" onclick="getResTable(this.id)">Yarın</a></li>
                                                <li class="page-item"><input class="form-control" type="date" id="timeNow" style="cursor:pointer; background-color:#e7505a; color:white"></li>
                                                <li class="page-item"><button style="color:cornflowerblue; background-color:#f9f9f9" class="page-link" onclick="preDate()"><i class="fas fa-chevron-left"></i></button></li>
                                                <li class="page-item"><button style="color:cornflowerblue; background-color:#f9f9f9" class="page-link" onclick="nextDate()"><i class="fas fa-chevron-right"></i></button></li>

                                            </ul>
                                        </nav>
                                    </div>
                                </div>

                                <table id="tablecount" style="text-align:center; " class=" table table-bordered2 ">
                                    <thead>
                                        <tr>
                                            <th style="background-color:#f5f8fd; min-width:100px" scope="col">
                                                <div class="btn-group btn-group-sm" role="group" aria-label="Basic example">
                                                    <button id="submit" type="button" class="btn btn-warning"><i class="fas fa-print"></i></button>
                                                    <button type="button" class="btn btn-danger"><i style="color:white" class="fas fa-trash"></i></button>
                                                </div>
                                            </th>

                                            @for (int i = 0; i < times.Count; i++)

                                            {

                                                <th style="background-color:#f5f8fd; font-weight:inherit;" colspan="4" scope="col">@times[i].ResTimes</th>

                                            }

                                        </tr>
                                    </thead>

                                    <tbody id="xyz">

                                        @*@foreach (var item in Model.courts)

                                            {
                                                if (item.CourtConditions == 1)
                                                {

                                                    <tr>

                                                        <th style="background-color:#f5f8fd; font-weight:inherit;" scope="row">@item.CourtName</th>

                                                        @for (int i = 0; i < Model.resTimes.Count; i++)
                                                        {



                                                            var res = Model.reservations.Where(x => x.ResStartTime == Model.resTimes[i].ResTimes && x.Court.CourtId == item.CourtId).FirstOrDefault();

                                                            var resCancel = Model.reservationCancels.Where(x => x.ResStartTime == Model.resTimes[i].ResTimes && x.CourtId == item.CourtId).FirstOrDefault();

                                                            var period = (60 / Convert.ToInt32(item.CourtTimePeriod));




                                                            if (res != null && resCancel != null && res.UserId == res.doResUserId)
                                                            {
                                                                var colspanVal = (Convert.ToDateTime(res.ResFinishTime) - Convert.ToDateTime(res.ResStartTime)).TotalHours * 4;

                                                                var mem = Model.memberLists.First(x => x.UserId == res.UserId).FullName;

                                                                <td borderRes="@res.ResStartTime , @period" data-toggle="popover" data-html="true" data-trigger="hover" data-placement="top" data-container="body" data-original-title="@res.NickName | @mem" data-content="<span style='color:#e61a1a'></span><br />@res.ResStartTime-@res.ResFinishTime <br /> @res.Court.CourtName <br /> @res.ResDate @res.ResTime" onclick="openResInfModal(this.id)" id="@res.ResId" colspan="@colspanVal" style="text-align:center; vertical-align:middle; cursor:pointer; background-color:#1bbc27!important;color:#ffffff!important;  border-right: 1px solid #dee2e6; ">
                                                                    <div style="background-color:#1bbc27!important;color:#ffffff!important;">
                                                                        <a style="padding:0;color:#fff;">
                                                                            @res.NickName
                                                                        </a>

                                                                        <small style="right: -3px;top: -10px;position: relative; color:inherit">
                                                                            w
                                                                        </small>

                                                                    </div>
                                                                    <div style="position: relative;height:3px;background-color:#e61a1a"></div>
                                                                </td>

                                                                i = i + Convert.ToInt32(colspanVal) - 1;
                                                            }

                                                            else if (res != null && resCancel != null)
                                                            {
                                                                var colspanVal = (Convert.ToDateTime(res.ResFinishTime) - Convert.ToDateTime(res.ResStartTime)).TotalHours * 4;
                                                                var mem = Model.memberLists.First(x => x.UserId == res.UserId).FullName;

                                                                <td borderRes="@res.ResStartTime , @period" data-toggle="popover" data-html="true" data-trigger="hover" data-placement="top" data-container="body" data-original-title="@res.NickName | @mem" data-content="<span style='color:#e61a1a'></span><br />@res.ResStartTime-@res.ResFinishTime <br /> @res.Court.CourtName <br /> @res.ResDate @res.ResTime" onclick="openResInfModal(this.id)" id="@res.ResId" colspan="@colspanVal" style="text-align:center; vertical-align:middle; cursor:pointer; background-color:#1bbc27!important;color:#ffffff!important;  border-right: 1px solid #dee2e6; ;">
                                                                    <div style="background-color:#1bbc27!important;color:#ffffff!important;">
                                                                        <a style="padding:0;color:#fff;">
                                                                            @res.NickName

                                                                        </a>
                                                                    </div>
                                                                    <div style="position: relative;height:3px;background-color:#e61a1a"></div>
                                                                </td>

                                                                i = i + Convert.ToInt32(colspanVal) - 1;
                                                            }

                                                            else if (res != null && res.UserId == res.doResUserId)
                                                            {
                                                                var colspanVal = (Convert.ToDateTime(res.ResFinishTime) - Convert.ToDateTime(res.ResStartTime)).TotalHours * 4;
                                                                var mem = Model.memberLists.First(x => x.UserId == res.UserId).FullName;

                                                                <td borderRes="@res.ResStartTime , @period" data-toggle="popover" data-html="true" data-trigger="hover" data-placement="top" data-container="body" data-original-title="@res.NickName | @mem" data-content="<span style='color:#e61a1a'></span><br />@res.ResStartTime-@res.ResFinishTime <br /> @res.Court.CourtName <br /> @res.ResDate @res.ResTime" onclick="openResInfModal(this.id)" id="@res.ResId" colspan="@colspanVal" style="text-align:center; vertical-align:middle; cursor:pointer; background-color:#1bbc27!important;color:#ffffff!important; border-right: 1px solid #dee2e6; ">
                                                                    <div style="background-color:#1bbc27!important;color:#ffffff!important;">
                                                                        <a style="padding:0;color:#fff;">
                                                                            @res.NickName
                                                                        </a>
                                                                        <small style="right: -3px;top: -10px;position: relative; color:inherit">
                                                                            w
                                                                        </small>

                                                                    </div>

                                                                </td>

                                                                i = i + Convert.ToInt32(colspanVal) - 1;
                                                            }

                                                            else if (res != null)
                                                            {

                                                                var colspanVal = (Convert.ToDateTime(res.ResFinishTime) - Convert.ToDateTime(res.ResStartTime)).TotalHours * 4;
                                                                var mem = Model.memberLists.First(x => x.UserId == res.UserId).FullName;

                                                                <td borderRes="@res.ResStartTime , @period" data-toggle="popover" data-html="true" data-trigger="hover" data-placement="top" data-container="body" data-original-title="@res.NickName | @mem" data-content="<span style='color:#e61a1a'></span><br />@res.ResStartTime-@res.ResFinishTime <br /> @res.Court.CourtName <br /> @res.ResDate @res.ResTime" onclick="openResInfModal(this.id)" id="@res.ResId" colspan="@colspanVal" style="text-align:center; vertical-align:middle; cursor:pointer; background-color:#1bbc27!important;color:#ffffff!important; border-right: 1px solid #dee2e6;">
                                                                    <div style="background-color:#1bbc27!important;color:#ffffff!important;">
                                                                        <a style="padding:0;color:#fff;">
                                                                            @res.NickName
                                                                        </a>

                                                                    </div>
                                                                </td>

                                                                i = i + Convert.ToInt32(colspanVal) - 1;
                                                            }

                                                            else if (resCancel != null)
                                                            {
                                                                var time = resCancel.ResStartTime;
                                                                var time2 = resCancel.ResFinishTime;

                                                                var colspanVal = (Convert.ToDateTime(resCancel.ResFinishTime) - Convert.ToDateTime(resCancel.ResStartTime)).TotalHours * 4;

                                                                for (var t = 0; t < colspanVal; t++)
                                                                {
                                                                    if (period == 1)
                                                                    {
                                                                        <td borderRes="@Model.resTimes[i].ResTimes , @period" id="@item.CourtId , @item.CourtName" class="tdHover " data-toggle="tooltip" data-placement="top" title="@item.CourtName - @time" onclick="openResModal(this.id)" colspan="4" style="vertical-align:bottom; padding: 0px; border: 1px solid #dadee2; cursor:pointer">
                                                                            <div style="height:3px;background-color:#e61a1a"></div>
                                                                        </td>


                                                                        t = t + 3;

                                                                    }

                                                                    else if (period == 2)
                                                                    {
                                                                        <td borderRes="@Model.resTimes[i].ResTimes , @period" id="@item.CourtId , @item.CourtName" class="tdHover" data-toggle="tooltip" data-placement="top" title="@item.CourtName - @time" onclick="openResModal(this.id)" colspan="2" style="vertical-align:bottom; padding: 0px; border: 1px solid #dadee2; cursor:pointer">
                                                                            <div style="height:3px;background-color:#e61a1a"></div>
                                                                        </td>

                                                                        var c = time.Split(":");
                                                                        var hour = Convert.ToInt32(c[0]);
                                                                        var min = Convert.ToInt32(c[1]);
                                                                        if (min == 30)
                                                                        {
                                                                            time = (hour + 1) + ":" + "00";
                                                                        }
                                                                        else
                                                                        {

                                                                            time = hour + ":" + (min + 30);
                                                                        }

                                                                        t = t + 1;
                                                                    }

                                                                    else
                                                                    {
                                                                        <td borderRes="@Model.resTimes[i].ResTimes , @period" id="@item.CourtId , @item.CourtName" class="tdHover" data-toggle="tooltip" data-placement="top" title="@item.CourtName - @time" onclick="openResModal(this.id)" style="vertical-align:bottom; padding: 0px; border: 1px solid #dadee2; cursor:pointer">
                                                                            <div style="height:3px;background-color:#e61a1a"></div>
                                                                        </td>


                                                                        var c = time.Split(":");
                                                                        var hour = Convert.ToInt32(c[0]);
                                                                        var min = Convert.ToInt32(c[1]);

                                                                        if (min == 45)

                                                                        {
                                                                            time = (hour + 1) + ":" + "00";
                                                                        }

                                                                        else
                                                                        {

                                                                            time = hour + ":" + (min + 15);
                                                                        }
                                                                    }

                                                                }

                                                                i = i + Convert.ToInt16(colspanVal - 1);
                                                            }

                                                            else

                                                            {
                                                                if (period == 4)
                                                                {
                                                                    <td borderRes="@Model.resTimes[i].ResTimes , @period" class="tdHover droppable" data-toggle="popover" data-trigger="hover" data-placement="top" data-container="body" data-content="@item.CourtName - @Model.resTimes[i].ResTimes" onclick="openResModal(this.id)" style="cursor:pointer" id="@item.CourtId , @item.CourtName , @Model.resTimes[i].ResTimes" per="@period"></td>
                                                                }

                                                                else if (period == 2)
                                                                {
                                                                    <td borderRes="@Model.resTimes[i].ResTimes , @period" class="tdHover droppable" data-toggle="popover" data-trigger="hover" data-placement="top" data-container="body" data-content="@item.CourtName - @Model.resTimes[i].ResTimes" onclick="openResModal(this.id)" colspan="2" style="cursor:pointer" id="@item.CourtId , @item.CourtName , @Model.resTimes[i].ResTimes" per="@period"></td>
                                                                    i = i + 1;
                                                                }
                                                                else if (period == 1)
                                                                {
                                                                    <td borderRes="@Model.resTimes[i].ResTimes , @period" class="tdHover droppable" data-toggle="popover" data-trigger="hover" data-placement="top" data-container="body" data-content="@item.CourtName - @Model.resTimes[i].ResTimes" onclick="openResModal(this.id)" colspan="4" style="cursor:pointer" id="@item.CourtId , @item.CourtName , @Model.resTimes[i].ResTimes" per="@period"></td>
                                                                    i = i + 3;
                                                                }

                                                            }

                                                        }

                                                    </tr>
                                                }
                                            }*@

                                    </tbody>
                                </table>

                                <div class="pull-left d-flex justify-content-between" style="font-size: 16px; margin-top:10px">
                                    <div style="margin-top:15px">
                                        <div>

                                            @foreach (var item in Model.courtScaleLists)
                                            {
                                                <div data-toggle="popover" data-trigger="hover" data-placement="top" data-container="body" data-content="@item.Name" style="font-size: 13px; cursor:pointer; font-weight: 300;width:50px; text-align:center;float:left; background-color:@item.Color!important;color:white!important;">
                                                    @item.Code
                                                </div>
                                            }

                                        </div>
                                    </div>



                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3">

                        <div>
                            <div style="padding: 0px;">
                                <div id="resSchemaDetail" style="max-height: 505px; min-height: 661px; padding: 0px; background-color: #f5f8fd; overflow: scroll;">

                                </div>
                            </div>
                        </div>
                    </div>
                </div>


            </div>
        </section>
    </div>


    <div class="modal fade" id="openResInf" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #004e6c;">
                    <h5 class="modal-title" style="color:white;" id="exampleModalLabel">Rezervasyon Bilgileri</h5>
                    <button style="color:white;" type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">


                    <div style="background-color:#d39e000f" class="callout callout-warning row">

                        <div class="col-md-9"><h5 id="nickAndFullName"></h5></div>


                        <div style="margin-right:15px" id="cancelRes">
                            <button color:white" class="btn btn-danger" type="button" onclick="cancelResProcedureModal(this.id)">İptal Et</button>
                        </div>


                        <div id="updateRes">
                            <button style="background-color:#004e6c;" color:white" class="btn btn-primary" type="button" onclick="openUpdateResModal(this.id)">Düzenle</button>
                        </div>

                    </div>




                    <div class="row">
                        <div class="col-sm-6">
                            <div class="card">
                                <div class="card-body" style="background-color:#d39e000f">
                                    <ul style="font-size:20px" class="list-group list-group-flush">
                                        <li id="courtName" class="list-group-item"></li>
                                        <li id="resDate" class="list-group-item"></li>
                                        <li id="resTime" class="list-group-item"></li>
                                        <li id="resNowDate" class="list-group-item"></li>
                                        <li id="doResInf" class="list-group-item"></li>
                                    </ul>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <div class="card">
                                <div class="card-body" style="background-color:#d39e000f">

                                    <div id="PriceInf" class="info-box shadow-lg">


                                    </div>

                                    <div class="info-box shadow-lg">

                                        <div class="info-box-content">
                                            <table style="text-align:center" class="table table-bordered">


                                                <thead>
                                                    <tr>
                                                        <th style="font-weight:bold" scope="col">Ücret Bilgisi</th>
                                                        <th style="font-weight:bold" scope="col">Ücret </th>

                                                    </tr>
                                                </thead>

                                                <tbody id="PriceNI">
                                                </tbody>
                                                <tfoot>
                                                    <tr>
                                                        <th style="font-weight:bold" scope="col">Ücret Toplam :</th>
                                                        <th id="sumPrice" style="font-weight:bold" scope="col"></th>

                                                    </tr>
                                                </tfoot>

                                            </table>
                                        </div>
                                    </div>

                                    <div class="info-box shadow-lg">
                                        <div class="info-box-content">
                                            <div class="row">
                                                <div style="margin-right:7px">
                                                    <button style="font-size:15px; background-color:#ffc107" type="button" class="btn btn-dark">Ödeme</button>
                                                </div>
                                                <div style="margin-right:7px">
                                                    <button style="font-size:15px;" type="button" class="btn btn-danger">Toplu Ödeme</button>
                                                </div>
                                                <div style="margin-right:7px">
                                                    <button style="font-size:15px; background-color:#17a2b8" type="button" class="btn btn-dark"><i class="fas fa-print"></i> </button>
                                                </div>
                                                <div>
                                                    <button style="font-size:15px;  background-color:#17a2b8" type="button" class="btn btn-dark"><i class="fas fa-edit"></i></button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="rsvModal">
        <div class="modal-dialog modal-lg" style="max-width:1000px; ">
            <div class="modal-content">
                <div class="modal-header" style="background-color:#efefef;">
                    <h5 style="margin:auto; font-family:sans-serif; color:inherit">Rezervasyon Yap</h5>
                </div>

                <div class="modal-header">
                    <div class="row d-flex justify-content-between">

                        <div id="selCourt" class="col-lg-6">

                            <select id="selectCourt" class="form-control">

                                @foreach (var item in Model.courts)
                                {
                                    <option value="@item.CourtId">@item.CourtName</option>

                                }

                            </select>
                        </div>

                        <div id="findMem" class="col-lg-4">
                            <form autocomplete="off">
                                <div class="form-inline">
                                    <input type="text" class="form-control ui-autocomplete-input" id="findMember" placeholder="Üye Ara" autocomplete="off">
                                </div>
                            </form>
                        </div>

                        <div id="selTime" class="col-lg-2">
                            <nav aria-label="Page navigation example">
                                <ul class="pagination">

                                    <li class="page-item"><a style="color:white;  background-color:#3fc9d5 !important" class="page-link" href="~/AdminHome/Index?date=@today">Bugün</a></li>
                                    <li class="page-item"><a style="color:white; background-color:#337ab7" class="page-link" href="~/AdminHome/Index?date=@tomorrow">Yarın</a></li>
                                    <li class="page-item"><input class="form-control" type="date" id="timeNowModal" style="cursor:pointer; background-color:#e7505a; color:white"></li>
                                    <li class="page-item"><button style="color:cornflowerblue; background-color:#f9f9f9" class="page-link" onclick="preDate()"><i class="fas fa-chevron-left"></i></button></li>
                                    <li class="page-item"><button style="color:cornflowerblue; background-color:#f9f9f9" class="page-link" onclick="nextDate()"><i class="fas fa-chevron-right"></i></button></li>
                                </ul>
                            </nav>
                        </div>
                    </div>

                </div>



                <div id="CourtandTime">

                </div>

                <div class="modal-header">
                    <div class="row" id="court_select">
                        <div id="ResModal" style="display: contents;">

                        </div>
                    </div>
                </div>

                <div id="priceList" style="display:block">

                    <div class="modal-header" style="background-color: #004e6c;">
                        <h4 style="margin:auto; color:white">Ücretlendirme</h4>
                    </div>

                    <div class="row">
                        <div class="modal-header col-md-12">
                            <div class="col-sm-12">
                                <div class="form-group" style="text-align:center">
                                    <table class="table table-bordered ">
                                        <thead>
                                            <tr>
                                                <th style="font-weight:bold" scope="col">Adı</th>
                                                <th style="font-weight:bold" scope="col">Fiyatı</th>
                                                <th style="font-weight:bold" scope="col">Seç</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item2 in Model.courtPriceLists)
                                            {
                                                if (item2.Condition == "1")
                                                {
                                                    <tr>
                                                        <td>@item2.Name</td>
                                                        <td>@item2.CourtPrice ₺ </td>
                                                        <td>
                                                            <div class="custom-control custom-checkbox " id="checkPriceTables">

                                                                @{ if (item2.PriceType == "1")
                                                                    {
                                                                        <input class="custom-control-input custom-control-input-danger custom-control-input-outline" value="@item2.CourtPriceListId" type="checkbox" name="@item2.CourtPrice" id="cb_@item2.CourtPriceListId" checked="checked" disabled="">
                                                                    }

                                                                    else
                                                                    {
                                                                        <input class="custom-control-input custom-control-input-danger" value="@item2.CourtPriceListId" name="@item2.CourtPrice" type="checkbox" id="cb_@item2.CourtPriceListId">
                                                                    }

                                                                }
                                                                <label for="cb_@item2.CourtPriceListId" class="custom-control-label"></label>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <th style="font-weight:bold" scope="col">Ücret Toplam :</th>
                                                <th id="sumOfPrice" style="font-weight:bold" scope="col"></th>
                                                <th scope="col"></th>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div style="display:none" class="modal-footer">
                        <textbox style="color:black; " id="userId">@userId</textbox>
                    </div>


                    <div class="modal-footer d-flex justify-content-between" id="forApproveId">
                        <div>
                            <table class="table table-bordered ">

                                <tbody>

                                    <tr>
                                        <td>Rezervasyon Görevi Tanımla</td>
                                        <td>
                                            <div class="custom-control custom-checkbox" id="privResCheck">

                                                <input class="custom-control-input custom-control-input-danger custom-control-input-outline" type="checkbox" id="privChecked">
                                                <label for="privChecked" class="custom-control-label"></label>
                                            </div>
                                        </td>

                                    </tr>

                                </tbody>

                            </table>
                        </div>

                        <div>
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                            <button type="button" class="btn btn-primary" onclick="Approve(this.id)">Rezervasyon Yap</button>
                        </div>

                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="rsvModalUpd">
        <div class="modal-dialog modal-lg" style="max-width:1000px; ">
            <div class="modal-content">
                <div class="modal-header" style="background-color:#efefef;">
                    <h5 style="margin:auto; font-family:sans-serif; color:inherit">Rezervasyon Yap</h5>
                </div>

                <div class="modal-header">
                    <div class="row">

                        <div id="selCourt" class="col-md-6">

                            <select id="selectedCourt" class="form-control">

                                @foreach (var item in Model.courts)
                                {
                                    <option value="@item.CourtId">@item.CourtName</option>

                                }

                            </select>
                        </div>


                        <div id="selTime" class="col-md-6">
                            <nav aria-label="Page navigation example">
                                <ul class="pagination">
                                    <li class="page-item"><a style="color:white;  background-color:#3fc9d5 !important" class="page-link" href="~/AdminHome/Index?date=@today">Bugün</a></li>
                                    <li class="page-item"><a style="color:white; background-color:#337ab7" class="page-link" href="~/AdminHome/Index?date=@tomorrow">Yarın</a></li>
                                    <li class="page-item"><input class="form-control" type="date" id="timeNowUpdModal" style="cursor:pointer; background-color:#e7505a; color:white"></li>
                                    <li class="page-item"><button style="color:cornflowerblue; background-color:#f9f9f9" class="page-link" onclick="preDate()"><i class="fas fa-chevron-left"></i></button></li>
                                    <li class="page-item"><button style="color:cornflowerblue; background-color:#f9f9f9" class="page-link" onclick="nextDate()"><i class="fas fa-chevron-right"></i></button></li>
                                </ul>
                            </nav>
                        </div>

                    </div>

                </div>


                <div id="CourtandTimes">

                </div>

                <div class="modal-header">
                    <div class="row" id="court_select">
                        <div id="ResUpdModal" style="display: contents;">

                        </div>
                    </div>
                </div>

                <div id="priceList" style="display:block">

                    <div class="modal-header" style="background-color: #004e6c;">
                        <h4 style="margin:auto; color:white">Ücretlendirme</h4>
                    </div>

                    <div class="row">
                        <div class="modal-header col-md-9">
                            <div class="col-sm-12">
                                <div class="form-group" style="text-align:center">
                                    <table class="table table-bordered">

                                        <thead>
                                            <tr>
                                                <th style="font-weight:bold" scope="col">Adı</th>
                                                <th style="font-weight:bold" scope="col">Fiyatı</th>
                                                <th style="font-weight:bold" scope="col">Seç</th>
                                            </tr>
                                        </thead>

                                        <tbody>

                                            @foreach (var item2 in Model.courtPriceLists)
                                            {
                                                if (item2.Condition == "1")
                                                {
                                                    <tr>
                                                        <td>@item2.Name</td>
                                                        <td>@item2.CourtPrice ₺ </td>
                                                        <td>
                                                            <div class="custom-control custom-checkbox " id="checkPriceUpdTables">

                                                                @{
                                                                    if (item2.PriceType == "1")
                                                                    {
                                                                        <input class="custom-control-input custom-control-input-danger custom-control-input-outline" value="@item2.CourtPriceListId" type="checkbox" name="@item2.CourtPrice" id="cb_@item2.CourtPriceListId" checked="checked" disabled="">
                                                                    }

                                                                    else
                                                                    {
                                                                        <input class="custom-control-input custom-control-input-danger" value="@item2.CourtPriceListId" name="@item2.CourtPrice" type="checkbox" id="cb_@item2.CourtPriceListId">
                                                                    }

                                                                }

                                                                <label for="cb_@item2.CourtPriceListId" class="custom-control-label"></label>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                            }

                                        </tbody>

                                        <tfoot>
                                            <tr>
                                                <th style="font-weight:bold" scope="col">Ücret Toplam :</th>
                                                <th id="sumOfPrice" style="font-weight:bold" scope="col"></th>
                                                <th scope="col"></th>
                                            </tr>
                                        </tfoot>

                                    </table>
                                </div>
                            </div>
                        </div>


                        <div class="modal-header col-md-3">
                            <div class="col-sm-12">
                                <div class="form-group" style="text-align:center">
                                    <table class="table table-bordered ">
                                        <thead>
                                            <tr>
                                                <th style="font-weight:bold" scope="col">Rezervasyon Görevi</th>
                                                <th style="font-weight:bold" scope="col">Tanımla</th>

                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td>Görev</td>
                                                <td>
                                                    <div class="custom-control custom-checkbox" id="privResCheck">

                                                        <input class="custom-control-input custom-control-input-danger custom-control-input-outline" type="checkbox" id="privChecked">
                                                        <label for="privChecked" class="custom-control-label"></label>
                                                    </div>
                                                </td>

                                            </tr>

                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div style="display:none" class="modal-footer">
                        <textbox style="color:black; " id="userId">@userId</textbox>
                    </div>


                    <div class="modal-footer" id="forApproveUpdId">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                        <button type="button" class="btn btn-primary" onclick="updateReservation(this.id)">Güncelle</button>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="openResProcedureModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header" style="background-color:darkgreen; color:white">
                    <h5 class="modal-title" id="exampleModalLongTitle">Uyarı !!! - Rezervasyon İptal Edilecek</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    <div class="callout callout-info">
                        <h5 id="resUserInfo"></h5>
                        <p id="resCourtInfo"></p>
                        <p id="resInfo"></p>

                    </div>

                    <div class="callout callout-danger">
                        <h5>Dikkat</h5>

                        <p>
                            Dikkat ! Prosedür gereği rezervasyon iptal saati geçmiş olduğu için yapılan iptallerde borçlandırma prosedürü uygulanır.
                        </p>
                    </div>

                    <div class="callout callout-warning">
                        <div class="form-check">
                            <input id="checkProcedure" class="form-check-input" type="checkbox">
                            <label class="form-check-label">Prosedürü Dikkate Alma</label>
                        </div>
                    </div>


                    <div class="form-group">
                        <label>İptal Nedeni Seçiniz</label>
                        <select id="reasonCancel" class="form-control">
                            <option>Turnuva</option>
                            <option>Sağlık</option>
                            <option>Ulaşım</option>
                            <option>Partner</option>
                            <option>Kişisel Sebepler</option>
                            <option>Kort Problemleri</option>
                            <option>Hava Durumu</option>
                        </select>
                    </div>


                </div>
                <div class="modal-footer" id="cancelResProModal">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Vazgeç</button>
                    <button type="button" class="btn btn-primary" onclick="cancelResAuthorized(this.id)">İptal Et</button>
                </div>
            </div>
        </div>
    </div>



    <script src="~/adminRoot/js/loading.js"></script>
    <script src="~/lib/jquery/dist/linq.min.js"></script>


    <script>



        $(document).ready(function () {


            $("#example1").DataTable({
                "responsive": true, "lengthChange": false, "autoWidth": false,
                "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"]
            }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');

            $('#example2 , #example3 , #example4').DataTable({
                "paging": false,
                "lengthChange": false,
                "searching": false,
                "ordering": true,
                "info": true,
                "autoWidth": false,
                "responsive": true,
            });



            getPrice();


            //Rezervasyon Şema Tarih
            var dt = new Date();
            var dd = String(dt.getDate()).padStart(2, '0');
            var mm = String(dt.getMonth() + 1).padStart(2, '0');
            var yyyy = dt.getFullYear();

            var today = yyyy + '-' + mm + '-' + dd;

            $('#timeNow').val(today);

            getResTable(today);

            $('#timeNow').change(function () {

                getResTable($('#timeNow').val());
                resSchemaDetail();

            });


            $('#checkPriceTables input').click(function () {
                if ($(this).is(':checked'))
                    getPrice();

                else {
                    getPrice();

                }
            });

        });

        //TimeInf
        function timeInf() {

            var time = $('#timeNow').val();
            var b = time.split("-");
            var timeNow = b[2] + '-' + b[1] + '-' + b[0];

            var days = new Date(time);
            var getday = days.getDay();


            switch (getday) {
                case 0:
                    day = "Pazar";
                    break;
                case 1:
                    day = "Pazartesi";
                    break;
                case 2:
                    day = "Salı";
                    break;
                case 3:
                    day = "Çarşamba";
                    break;
                case 4:
                    day = "Perşembe";
                    break;
                case 5:
                    day = "Cuma";
                    break;
                case 6:
                    day = "Cumartesi";
            }

            $("#TimeInf").empty();
            row = "";
            row += '<h4 id="timeInfH4" style="margin:auto; color:black"><i style="color:black" class="fas fa-flag nav-icon"></i>' + ' ' + timeNow + ' ' + ' - ' + ' ' + day + ' ' + '</h4>';
            $("#TimeInf").append(row);

            findMember();

        }

        function openUpdateResModal(id) {
            $.ajax({
                type: "GET",
                url: '../AdminHome/GetUpdateResAdmin',
                cache: false,
                data: { "id": id },
                dataType: "json",
                async: true,
                success: function (res) {



                    if (res != null) {

                        var xid = res.reservations.court.courtId + "," + res.reservations.court.courtName + "," + id;

                        $("#updButton button:nth-of-type(1)").attr("id", id);

                        $('#openResInf').modal('toggle');

                        openResModalUpd(xid);
                    }

                    else {
                        $.confirm({
                            title: "Uyarı",
                            content: "Üye Bulunamadı.",
                            buttons: {
                                TAMAM: function () {

                                }
                            }
                        });
                    }

                },
                error: function (textStatus, errorThrown) {
                    console.log(JSON.stringify(textStatus));
                    console.log(textStatus);
                }
            });
        }

        function findMember() {


            $.ajax({
                type: "Get",
                url: '../AdminHome/GetUserSchoolList',
                cache: false,
                dataType: "json",
                async: true,
                success: function (res) {

                    var mem = [];

                    for (var i = 0; i < res.memberLists.length; i++) {
                        mem.push(res.memberLists[i].memberNumber + ' - ' + res.memberLists[i].fullName + ' - ' + res.memberLists[i].nickName);
                    }


                    for (var i = 0; i < res.courtScales.length; i++) {


                        var checkRole = Enumerable.from(res.memberLists)
                            .where(function (x) { return x.role.toLowerCase() == res.courtScales[i].name.toLowerCase() })
                            .select(function (x) { return x }).toArray();

                        if (checkRole.length == 0) {
                            mem.push(res.courtScales[i].code + ' - ' + res.courtScales[i].name);
                        }


                    }


                    $("#findMember").autocomplete({
                        source: mem
                    });


                },

                error: function (textStatus, errorThrown) {
                    console.log(JSON.stringify(textStatus));
                    console.log(textStatus);
                }
            });
        }

        function resSchemaDetail() {

            var date = $("#timeNow").val();

            $.ajax({
                type: "Get",
                url: '../AdminHome/GetResSchemaDetail',
                cache: false,
                data: { "date": date },
                dataType: "json",
                async: true,
                success: function (res) {

                    var days = new Date(date);
                    var getday = days.getDay();

                    switch (getday) {
                        case 0:
                            day = "Pazar";
                            break;
                        case 1:
                            day = "Pazartesi";
                            break;
                        case 2:
                            day = "Salı";
                            break;
                        case 3:
                            day = "Çarşamba";
                            break;
                        case 4:
                            day = "Perşembe";
                            break;
                        case 5:
                            day = "Cuma";
                            break;
                        case 6:
                            day = "Cumartesi";
                    }

                    $("#resSchemaDetail").empty();

                    NewRow = "";


                    NewRow += '<ul class="list-group">';
                    NewRow += '<li class="list-group-item list-group-item-success bg-grey-mint bg-font-grey-mint" style="color:#fff; text-align:center; background-color:#337ab7 !important; font-size: 16px;">' + date + "  " + "  " + day + '</li>';

                    for (var i = 0; i < res.courts.length; i++) {

                        NewRow += '<li style="background-color:#e0ebf9; padding: 0.1rem 1.25rem; color:black; text-align:center;" class="list-group-item list-group-item-info">' + res.courts[i].courtName + '</li>';

                        for (var a = 0; a < res.reservations.length; a++) {

                            if (res.reservations[a].court.courtId == res.courts[i].courtId) {


                                NewRow += '<li style="padding: 0.1rem 1.25rem;" class="list-group-item">';

                                if (res.reservations[a].userId != null) {
                                    for (var x = 0; x < res.memberLists.length; x++) {
                                        if (res.reservations[a].userId == res.memberLists[x].userId) {
                                            NewRow += '<span style="background:#337ab7 ; color:white;">' + res.memberLists[x].nickName + '</span>';
                                            NewRow += '<span style="margin-left:25px">' + res.memberLists[x].fullName + '</span>';
                                        }
                                    }
                                }
                                else {

                                    for (var c = 0; c < res.courtScales.length; c++) {
                                        if (res.reservations[a].nickName == res.courtScales[c].code) {

                                            NewRow += '<span style="background:#337ab7 ; color:white;">' + res.courtScales[c].code + '</span>';
                                            NewRow += '<span style="margin-left:25px">' + res.courtScales[c].name + '</span>';
                                        }
                                    }
                                }

                                NewRow += '<span style="margin-left:25px" class="label label-sm label-primary">' + res.reservations[a].resStartTime + " - " + res.reservations[a].resFinishTime + '</span>';
                                NewRow += ' </li> </ul>';
                            }
                        }


                    }


                    $("#resSchemaDetail").append(NewRow);



                },

                error: function (textStatus, errorThrown) {
                    console.log(JSON.stringify(textStatus));
                    console.log(textStatus);
                }
            });
        }

        // Rezervasyon Şema Tarih

        function nextDate() {




            var date = $("#timeNow").val();

            const d = new Date(date);
            d.setDate(d.getDate() + 1);

            var month = (d.getMonth() + 1);
            var day = d.getDate();
            if (month < 10)
                month = "0" + month;
            if (day < 10)
                day = "0" + day;

            var date3 = d.getFullYear() + '-' + month + '-' + day;

            $("#timeNowUpdModal").val(date3);
            $("#timeNowModal").val(date3);
            getResTable(date3);
        }

        function preDate() {

            var date = $("#timeNow").val();

            const d = new Date(date);
            d.setDate(d.getDate() - 1);

            var month = (d.getMonth() + 1);
            var day = d.getDate();
            if (month < 10)
                month = "0" + month;
            if (day < 10)
                day = "0" + day;
            var date4 = d.getFullYear() + '-' + month + '-' + day;


            $("#timeNowUpdModal").val(date4);
            $("#timeNowModal").val(date4);
            getResTable(date4);

        }

        //Rezervasyon Yap

        function openResModal(id) {

            var modalDate = $("#timeNow").val();
            $("#timeNowModal").val(modalDate);

            var timePickerModal = modalDate;

            var a = id.split(",");
            var courtId = a[0];
            var courtName = a[1];

            var resStartTime = $('#doRes').attr('start');
            var resFinishTime = $('#doRes').attr('finish');

            var currentTime = new Date();
            var hours = currentTime.getHours();
            var min = currentTime.getMinutes();

            if (hours < 10) {
                var time = "0" + hours + ":" + min;
            }
            else if (min < 10) {
                var time = hours + ":" + "0" + min;
            }
            else if (hours < 10 && min < 10) {
                var time = "0" + hours + ":" + "0" + min;
            }
            else
                var time = hours + ":" + min;

            var a = time.split(":");
            var b = resStartTime.split(":");
            var c = resFinishTime.split(":");


            var dt = new Date();
            var dd = String(dt.getDate()).padStart(2, '0');
            var mm = String(dt.getMonth() + 1).padStart(2, '0');
            var yyyy = dt.getFullYear();

            var today = yyyy + '-' + mm + '-' + dd;



            if ($('#timeNowModal').val() < today) {

                swal("Uyarı !", "Önceki Günlere Rezervasyon Yapamazsınız.", "warning", {
                    button: "Tamam",
                });

            }

            else {

                getCourtTime(courtId, courtName, timePickerModal);

                $('#rsvModal').modal('toggle');
            }



            $("#selectCourt option:selected").text(courtName);

            $('#selectCourt').on('change', function () {

                var courtNameOption = $("#selectCourt option:selected").text();
                var courtIdOption = $("#selectCourt option:selected").val();

                getCourtTime(courtIdOption, courtNameOption, $('#timeNowModal').val());

            });

            $('#timeNowModal').change(function () {

                var courtNameOption = $("#selectCourt option:selected").text();
                var courtIdOption = $("#selectCourt option:selected").val();

                getCourtTime(courtIdOption, courtNameOption, $('#timeNowModal').val());

            });

        }

        function getCourtTime(courtId, courtName, timePickerModal) {

            $("#forApproveId button:nth-of-type(2)").attr("id", courtId);


            var dt = new Date();

            var hours = dt.getHours();
            var min = dt.getMinutes();

            if (hours < 10) {
                var time = "0" + hours + ":" + min;
            }
            else if (min < 10) {
                var time = hours + ":" + "0" + min;
            }
            else if (hours < 10 && min < 10) {
                var time = "0" + hours + ":" + "0" + min;
            }
            else
                var time = hours + ":" + min;



            var days = new Date(timePickerModal);
            var getday = days.getDay();

            var dd = String(dt.getDate()).padStart(2, '0');
            var mm = String(dt.getMonth() + 1).padStart(2, '0');
            var yyyy = dt.getFullYear();

            var today = yyyy + '-' + mm + '-' + dd;


            var date = timePickerModal;
            var b = date.split("-");
            var timeInf = b[2] + '-' + b[1] + '-' + b[0];

            if (timePickerModal < today) {

                swal("Uyarı !", "Önceki Günlere Rezervasyon Yapamazsınız.", "warning", {
                    button: "Tamam",
                });

                $("#timeNowModal").val(today);
            }

            else
                $.ajax({
                    type: "POST",
                    url: '../Public/GetResTime',
                    cache: false,
                    data: { "dateInf": timePickerModal, courtId },
                    dataType: "json",
                    async: false,
                    success: function (res) {


                        switch (getday) {
                            case 0:
                                day = "Pazar";
                                break;
                            case 1:
                                day = "Pazartesi";
                                break;
                            case 2:
                                day = "Salı";
                                break;
                            case 3:
                                day = "Çarşamba";
                                break;
                            case 4:
                                day = "Perşembe";
                                break;
                            case 5:
                                day = "Cuma";
                                break;
                            case 6:
                                day = "Cumartesi";
                        }

                        $("#CourtandTime").empty();
                        row = "";
                        row += '<div class="modal-header" style="background-color: #004e6c;">';
                        row += '<h4 style=" margin:auto; color:white"><i class="fas fa-flag nav-icon"></i>' + ' ' + courtName + ' ' + ' - ' + ' ' + timeInf + ' ' + ' - ' + ' ' + day + ' ' + ':' + ' ' + '</h4>';
                        row += '</div>';
                        $("#CourtandTime").append(row);


                        if (res.length > 0) {

                            $("#ResModal").empty();

                            for (var i = 0; i < res.length; i++) {

                                NewRow = "";


                                if (res[i].isTaken == true) {
                                    NewRow += '<div style="background-color:rgb(236, 0, 18);" class="form-group reservationForm">';
                                    NewRow += '<div class="custom-control custom-checkbox custom-control2" id="checkTimeTable">';
                                    NewRow += '<input class="custom-control-input custom-control-input-danger custom-control-input-outline" type="checkbox" id="customCheckbox5" checked="" disabled="">';
                                    NewRow += '<label style="color:white; font-weight:inherit;" for="t_' + res[i].timeId + '" class="custom-control-label custom-control-label2">' + res[i].start + '</label>';
                                    NewRow += '</div></div>';
                                }



                                else if (res[i].start <= time && date == today) {
                                    NewRow += '<div style="background-color:rgb(236, 0, 18);" class="form-group reservationForm">';
                                    NewRow += '<div class="custom-control custom-checkbox custom-control2" id="checkTimeTable">';
                                    NewRow += '<input class="custom-control-input custom-control-input-danger custom-control-input-outline" type="checkbox" id="customCheckbox5" checked="" disabled="">';
                                    NewRow += '<label style="color:white; font-weight:inherit; for="t_' + res[i].timeId + '" class="custom-control-label custom-control-label2">' + res[i].start + '</label>';
                                    NewRow += '</div></div>';
                                }


                                else {
                                    NewRow += '<div  class="form-group reservationForm">';
                                    NewRow += '<div class="custom-control custom-checkbox custom-control2 " id="checkTimeTable">';
                                    NewRow += '<input onclick="checkMe(this.id)" class="custom-control-input custom-control-input-primary" type="checkbox" id= "t_' + res[i].timeId + '" name= "' + res[i].start + '" per= "' + res[i].period + '">';
                                    NewRow += '<label style="font-weight:inherit;" for="t_' + res[i].timeId + '" class="custom-control-label custom-control-label2">' + res[i].start + '</label>';
                                    NewRow += '</div></div>';
                                }


                                $("#ResModal").append(NewRow);
                            }

                        }
                    },

                    error: function (textStatus, errorThrown) {
                        console.log(JSON.stringify(textStatus));
                        console.log(textStatus);
                    }
                });

        }

        function openResModalUpd(id) {

            var modalDate = $("#timeNow").val();
            $("#timeNowUpdModal").val(modalDate);

            var timePickerModal = modalDate;

            var a = id.split(",");
            var courtId = a[0];
            var courtName = a[1];
            var resId = a[2];


            var dt = new Date();
            var dd = String(dt.getDate()).padStart(2, '0');
            var mm = String(dt.getMonth() + 1).padStart(2, '0');
            var yyyy = dt.getFullYear();

            var today = yyyy + '-' + mm + '-' + dd;

            if ($('#timeNowUpdModal').val() < today) {

                swal("Uyarı !", "Önceki Günlere Rezervasyon Yapamazsınız.", "warning", {
                    button: "Tamam",
                });

            }

            else {

                getCourtTimeUpd(courtId, courtName, timePickerModal, resId);

                $('#rsvModalUpd').modal('toggle');

            }

            $("#selectedCourt option:selected").text(courtName);

            $('#selectedCourt').on('change', function () {

                var courtNameOption = $("#selectedCourt option:selected").text();
                var courtIdOption = $("#selectedCourt option:selected").val();

                getCourtTimeUpd(courtIdOption, courtNameOption, $('#timeNowUpdModal').val(), resId);

            });

            $('#timeNowUpdModal').change(function () {

                var courtNameOption = $("#selectedCourt option:selected").text();
                var courtIdOption = $("#selectedCourt option:selected").val();

                getCourtTimeUpd(courtIdOption, courtNameOption, $('#timeNowUpdModal').val(), resId);

            });

        }

        function getCourtTimeUpd(courtId, courtName, timePickerModal, resId) {


            $("#forApproveUpdId button:nth-of-type(2)").attr("id", resId);


            var dt = new Date();

            var hours = dt.getHours();
            var min = dt.getMinutes();

            if (hours < 10) {
                var time = "0" + hours + ":" + min;
            }
            else if (min < 10) {
                var time = hours + ":" + "0" + min;
            }
            else if (hours < 10 && min < 10) {
                var time = "0" + hours + ":" + "0" + min;
            }
            else
                var time = hours + ":" + min;



            var days = new Date(timePickerModal);
            var getday = days.getDay();

            var dd = String(dt.getDate()).padStart(2, '0');
            var mm = String(dt.getMonth() + 1).padStart(2, '0');
            var yyyy = dt.getFullYear();

            var today = yyyy + '-' + mm + '-' + dd;


            var date = timePickerModal;
            var b = date.split("-");
            var timeInf = b[2] + '-' + b[1] + '-' + b[0];

            if (timePickerModal < today) {

                swal("Uyarı !", "Önceki Günlere Rezervasyon Yapamazsınız.", "warning", {
                    button: "Tamam",
                });

                $("#timeNowUpdModal").val(today);
            }

            else
                $.ajax({
                    type: "POST",
                    url: '../AdminHome/GetResUpdTime',
                    cache: false,
                    data: { "dateInf": timePickerModal, courtId, resId },
                    dataType: "json",
                    async: false,
                    success: function (res) {


                        switch (getday) {
                            case 0:
                                day = "Pazar";
                                break;
                            case 1:
                                day = "Pazartesi";
                                break;
                            case 2:
                                day = "Salı";
                                break;
                            case 3:
                                day = "Çarşamba";
                                break;
                            case 4:
                                day = "Perşembe";
                                break;
                            case 5:
                                day = "Cuma";
                                break;
                            case 6:
                                day = "Cumartesi";
                        }

                        $("#CourtandTimes").empty();
                        row = "";
                        row += '<div class="modal-header" style="background-color: #004e6c;">';
                        row += '<h4 style=" margin:auto; color:white"><i class="fas fa-flag nav-icon"></i>' + ' ' + courtName + ' ' + ' - ' + ' ' + timeInf + ' ' + ' - ' + ' ' + day + ' ' + ':' + ' ' + '</h4>';
                        row += '</div>';
                        $("#CourtandTimes").append(row);


                        if (res.length > 0) {

                            $("#ResUpdModal").empty();

                            for (var i = 0; i < res.length; i++) {

                                NewRow = "";


                                if (res[i].isTaken == true) {
                                    NewRow += '<div style="background-color:rgb(236, 0, 18);" class="form-group reservationForm">';
                                    NewRow += '<div class="custom-control custom-checkbox custom-control2" id="checkTimeUpdTable">';
                                    NewRow += '<input class="custom-control-input custom-control-input-danger custom-control-input-outline" type="checkbox" id="customCheckbox5" checked="" disabled="">';
                                    NewRow += '<label style="color:white; font-weight:inherit;" for="t_' + res[i].timeId + '" class="custom-control-label custom-control-label2">' + res[i].start + '</label>';
                                    NewRow += '</div></div>';
                                }



                                else if (res[i].start <= time && date == today) {
                                    NewRow += '<div style="background-color:rgb(236, 0, 18);" class="form-group reservationForm">';
                                    NewRow += '<div class="custom-control custom-checkbox custom-control2" id="checkTimeUpdTable">';
                                    NewRow += '<input class="custom-control-input custom-control-input-danger custom-control-input-outline" type="checkbox" id="customCheckbox5" checked="" disabled="">';
                                    NewRow += '<label style="color:white; font-weight:inherit; for="t_' + res[i].timeId + '" class="custom-control-label custom-control-label2">' + res[i].start + '</label>';
                                    NewRow += '</div></div>';
                                }


                                else {
                                    NewRow += '<div  class="form-group reservationForm">';
                                    NewRow += '<div class="custom-control custom-checkbox custom-control2 " id="checkTimeUpdTable">';
                                    NewRow += '<input onclick="checkMeUpd(this.id)" class="custom-control-input custom-control-input-primary" type="checkbox" id= "ti_' + res[i].timeId + '" name= "' + res[i].start + '" per= "' + res[i].period + '">';
                                    NewRow += '<label style="font-weight:inherit;" for="ti_' + res[i].timeId + '" class="custom-control-label custom-control-label2">' + res[i].start + '</label>';
                                    NewRow += '</div></div>';
                                }


                                $("#ResUpdModal").append(NewRow);
                            }

                        }
                    },

                    error: function (textStatus, errorThrown) {
                        console.log(JSON.stringify(textStatus));
                        console.log(textStatus);
                    }
                });

        }

        function updateReservation(id) {

            var courtId = $("#selectedCourt option:selected").val();


            var times = [];
            $('#checkTimeUpdTable input:checked:not(:disabled)').each(function () {
                times.push(this.name);
            });

            var ResStartTime = times[0];
            var ResFinishTime = times[(times.length - 1)];

            var time = $('#timeNow').val();


            $.ajax({
                type: "GET",
                url: '../AdminHome/UpdateResAdmin',
                cache: false,
                data: { "id": id, "startTime": ResStartTime, "finishTime": ResFinishTime, "time": time, "cId": courtId },
                dataType: "json",
                async: true,
                success: function (res) {



                    if (res != null) {

                        swal({
                            title: "Rezervasyon Düzenlendi",
                            text: "Rezervasyon  Başarılı Bir Şekilde Düzenlendi !",
                            icon: "success",
                            button: "Tamam",
                        }).then((value) => {



                            getResTable($("#timeNow").val());

                        });
                    }

                    else {
                        $.confirm({
                            title: "Uyarı",
                            content: "Üye Bulunamadı.",
                            buttons: {
                                TAMAM: function () {

                                }
                            }
                        });
                    }

                },
                error: function (textStatus, errorThrown) {
                    console.log(JSON.stringify(textStatus));
                    console.log(textStatus);
                }
            });
        }

        function getResTable(date) {


            $("#timeNow").val(date);

            resSchemaDetail();
            timeInf();

            $.ajax({
                type: "GET",
                url: '../AdminHome/GetResTable',
                cache: false,
                data: { "date": date },
                dataType: "json",
                async: true,
                success: function (res) {

                    $("#xyz").empty();

                    row = "";

                    for (var i = 0; i < res.courts.length; i++) {

                        if (res.courts[i].courtConditions == 1) {


                            row += '<tr>';
                            row += ' <th style="background-color:#f5f8fd; font-weight:inherit;" scope="row">' + res.courts[i].courtName + '</th>';



                            for (var a = 0; a < res.resTimes.length; a++) {


                                var Res = Enumerable.from(res.reservations)
                                    .where(function (x) { return x.resStartTime == res.resTimes[a].resTimes && x.court.courtId == res.courts[i].courtId })
                                    .select(function (x) { return x }).toArray();

                                var resCancel = Enumerable.from(res.reservationCancels)
                                    .where(function (x) { return x.resStartTime == res.resTimes[a].resTimes && x.courtId == res.courts[i].courtId })
                                    .select(function (x) { return x }).toArray();





                                var asd = res.courts[i].courtTimePeriod;
                                var period = (60 / parseInt(asd));



                                if (Res.length > 0) {

                                    var mem = Enumerable.from(res.memberLists)

                                        .where(function (x) { return x.userId == Res[0].userId })
                                        .select(function (x) { return x.fullName }).toArray();
                                }

                                if (Res.length > 0) {

                                    var xyz = Res[0].resStartTime.split(":");
                                    var xyzd = Res[0].resFinishTime.split(":");
                                    var sTimeSpl = parseInt((xyz[0] + xyz[1]));
                                    var fTimeSpl = parseInt((xyzd[0] + xyzd[1]));

                                    if ((fTimeSpl - sTimeSpl) >= 1000) {
                                        var colspanVal = (fTimeSpl - sTimeSpl) * 4 / 1000;
                                    }
                                    else {
                                        colspanVal = (fTimeSpl - sTimeSpl) * 4 / 100;
                                    }
                                }


                                if (Res.length != 0 && resCancel.length != 0 && Res[0].userId == Res[0].doResUserId) {



                                    var memInf = Enumerable.from(res.memberLists)

                                        .where(function (x) { return x.nickName == Res[0].nickName })
                                        .select(function (x) { return x }).toArray();

                                    var scaleList2 = Enumerable.from(res.courtScaleLists)

                                        .where(function (x) { return x.name.toLowerCase() == memInf[0].role.toLowerCase() })
                                        .select(function (x) { return x }).toArray();





                                    if (scaleList.length > 0) {
                                        row += '<td borderRes="' + Res[0].resStartTime + ',' + period + '" data-toggle="popover" data-html="true" data-trigger="hover" data-placement="top" data-container="body" data-original-title="' + Res[0].nickName + ' | ' + mem[0] + '" ' + 'data-content="' + '<span style=' + 'color:#e61a1a' + '></span><br />' + Res[0].resStartTime + '-' + Res[0].resFinishTime + ' <br />' + Res[0].court.courtName + ' <br />' + Res[0].resDate + Res[0].resTime + '" onclick="openResInfModal(this.id)" id=" ' + Res[0].resId + '"  ' + 'colspan="' + colspanVal + '" style="text-align:center; vertical-align:middle; cursor:pointer; background-color:' + scaleList[0].color + '!important; color:#ffffff!important; border-right: 1px solid #dee2e6; ">';
                                        row += '<div style="background-color:' + scaleList[0].color + '!important; color:#ffffff!important; ">';
                                    }
                                    else {
                                        row += '<td borderRes="' + Res[0].resStartTime + ',' + period + '" data-toggle="popover" data-html="true" data-trigger="hover" data-placement="top" data-container="body" data-original-title="' + Res[0].nickName + ' | ' + mem[0] + '" ' + 'data-content="' + '<span style=' + 'color:#e61a1a' + '></span><br />' + Res[0].resStartTime + '-' + Res[0].resFinishTime + ' <br />' + Res[0].court.courtName + ' <br />' + Res[0].resDate + Res[0].resTime + '" onclick="openResInfModal(this.id)" id=" ' + Res[0].resId + '"  ' + 'colspan="' + colspanVal + '" style="text-align:center; vertical-align:middle; cursor:pointer; background-color:' + scaleList2[0].color + '!important;color:#ffffff!important;  border-right: 1px solid #dee2e6; ">';
                                        row += '<div style="background-color:' + scaleList2[0].color + '!important; color:#ffffff!important; ">';
                                    }


                                    row += '<a style="padding:0;color:#fff;">';
                                    row += Res[0].nickName;
                                    row += '</a>';

                                    row += ' <small style="right:-3px;top: -10px;position:relative; color:black">';
                                    row += 'w';
                                    row += '</small>';
                                    row += '</div>';
                                    row += '<div style="position: relative;height:3px;background-color:#e61a1a"></div>';
                                    row += '</td>';

                                    a = a + parseInt(colspanVal) - 1;
                                }

                                else if (Res.length != 0 && resCancel.length != 0) {

                                    var scaleList = Enumerable.from(res.courtScaleLists)
                                        .where(function (x) { return x.code == Res[0].nickName })
                                        .select(function (x) { return x }).toArray();



                                    if (scaleList.length == 0) {

                                        var memInf = Enumerable.from(res.memberLists)

                                            .where(function (x) { return x.nickName == Res[0].nickName })
                                            .select(function (x) { return x }).toArray();

                                        var scaleList2 = Enumerable.from(res.courtScaleLists)

                                            .where(function (x) { return x.name.toLowerCase() == memInf[0].role.toLowerCase() })
                                            .select(function (x) { return x }).toArray();

                                    }

                                    if (scaleList.length > 0) {
                                        row += '<td borderRes="' + Res[0].resStartTime + ',' + period + '" data-toggle="popover" data-html="true" data-trigger="hover" data-placement="top" data-container="body" data-original-title="' + Res[0].nickName + ' | ' + scaleList[0].name + '" ' + 'data-content="' + '<span style=' + 'color:#e61a1a' + '></span><br />' + Res[0].resStartTime + '-' + Res[0].resFinishTime + ' <br />' + Res[0].court.courtName + ' <br />' + Res[0].resDate + Res[0].resTime + '" onclick="openResInfModal(this.id)" id=" ' + Res[0].resId + '"  ' + 'colspan="' + colspanVal + '" style="text-align:center; vertical-align:middle; cursor:pointer; background-color:' + scaleList[0].color + '!important; color:#ffffff!important; border-right: 1px solid #dee2e6; ">';
                                        row += '<div style="background-color:' + scaleList[0].color + '!important; color:#ffffff!important; ">';
                                    }
                                    else {
                                        row += '<td borderRes="' + Res[0].resStartTime + ',' + period + '" data-toggle="popover" data-html="true" data-trigger="hover" data-placement="top" data-container="body" data-original-title="' + Res[0].nickName + ' | ' + mem[0] + '" ' + 'data-content="' + '<span style=' + 'color:#e61a1a' + '></span><br />' + Res[0].resStartTime + '-' + Res[0].resFinishTime + ' <br />' + Res[0].court.courtName + ' <br />' + Res[0].resDate + Res[0].resTime + '" onclick="openResInfModal(this.id)" id=" ' + Res[0].resId + '"  ' + 'colspan="' + colspanVal + '" style="text-align:center; vertical-align:middle; cursor:pointer; background-color:' + scaleList2[0].color + '!important;color:#ffffff!important;  border-right: 1px solid #dee2e6; ">';
                                        row += '<div style="background-color:' + scaleList2[0].color + '!important; color:#ffffff!important; ">';
                                    }


                                    row += '<a style="padding:0;color:#fff;">';
                                    row += Res[0].nickName;
                                    row += '</a>';
                                    row += '</div>';
                                    row += '<div style="position: relative;height:3px;background-color:#e61a1a"></div>';
                                    row += '</td>';

                                    a = a + parseInt(colspanVal) - 1;
                                }

                                else if (Res.length != 0 && Res[0].userId == Res[0].doResUserId) {

                                    var scaleList = Enumerable.from(res.courtScaleLists)
                                        .where(function (x) { return x.code == Res[0].nickName })
                                        .select(function (x) { return x }).toArray();



                                    var memInf = Enumerable.from(res.memberLists)

                                        .where(function (x) { return x.nickName == Res[0].nickName })
                                        .select(function (x) { return x }).toArray();

                                    var scaleList2 = Enumerable.from(res.courtScaleLists)

                                        .where(function (x) { return x.name.toLowerCase() == memInf[0].role.toLowerCase() })
                                        .select(function (x) { return x }).toArray();

                                    debugger;

                                    if (scaleList.length > 0) {
                                        row += '<td borderRes="' + Res[0].resStartTime + ',' + period + '" data-toggle="popover" data-html="true" data-trigger="hover" data-placement="top" data-container="body" data-original-title="' + Res[0].nickName + ' | ' + mem[0] + '" ' + 'data-content="' + '<span style=' + 'color:#e61a1a' + '></span><br />' + Res[0].resStartTime + '-' + Res[0].resFinishTime + ' <br />' + Res[0].court.courtName + ' <br />' + Res[0].resDate + Res[0].resTime + '" onclick="openResInfModal(this.id)" id=" ' + Res[0].resId + '"  ' + 'colspan="' + colspanVal + '" style="text-align:center; vertical-align:middle; cursor:pointer; background-color:' + scaleList[0].color + '!important; color:#ffffff!important; border-right: 1px solid #dee2e6; ">';
                                        row += '<div style="background-color:' + scaleList[0].color + '!important; color:#ffffff!important; ">';
                                    }
                                    else {
                                        row += '<td borderRes="' + Res[0].resStartTime + ',' + period + '" data-toggle="popover" data-html="true" data-trigger="hover" data-placement="top" data-container="body" data-original-title="' + Res[0].nickName + ' | ' + mem[0] + '" ' + 'data-content="' + '<span style=' + 'color:#e61a1a' + '></span><br />' + Res[0].resStartTime + '-' + Res[0].resFinishTime + ' <br />' + Res[0].court.courtName + ' <br />' + Res[0].resDate + Res[0].resTime + '" onclick="openResInfModal(this.id)" id=" ' + Res[0].resId + '"  ' + 'colspan="' + colspanVal + '" style="text-align:center; vertical-align:middle; cursor:pointer; background-color:' + scaleList2[0].color + '!important;color:#ffffff!important;  border-right: 1px solid #dee2e6; ">';
                                        row += '<div style="background-color:' + scaleList2[0].color + '!important; color:#ffffff!important; ">';
                                    }

                                    row += '<a style="padding:0;color:#fff;">';
                                    row += Res[0].nickName;
                                    row += '</a>';
                                    row += '<small style="right: -3px;top: -10px;position:relative; color:black">';
                                    row += 'w';
                                    row += '</small>';
                                    row += '</div>';
                                    row += '</td>';

                                    a = a + parseInt(colspanVal) - 1;
                                }

                                else if (Res.length != 0) {

                                    var scaleList = Enumerable.from(res.courtScaleLists)
                                        .where(function (x) { return x.code == Res[0].nickName })
                                        .select(function (x) { return x }).toArray();



                                    if (scaleList.length == 0) {

                                        var memInf = Enumerable.from(res.memberLists)

                                            .where(function (x) { return x.nickName == Res[0].nickName })
                                            .select(function (x) { return x }).toArray();

                                        var scaleList2 = Enumerable.from(res.courtScaleLists)

                                            .where(function (x) { return x.name.toLowerCase() == memInf[0].role.toLowerCase() })
                                            .select(function (x) { return x }).toArray();

                                    }



                                    if (scaleList.length > 0) {
                                        row += '<td borderRes="' + Res[0].resStartTime + ',' + period + '" data-toggle="popover" data-html="true" data-trigger="hover" data-placement="top" data-container="body" data-original-title="' + Res[0].nickName + ' | ' + scaleList[0].name + '" ' + 'data-content="' + '<span style=' + 'color:#e61a1a' + '></span><br />' + Res[0].resStartTime + '-' + Res[0].resFinishTime + ' <br />' + Res[0].court.courtName + ' <br />' + Res[0].resDate + Res[0].resTime + '" onclick="openResInfModal(this.id)" id=" ' + Res[0].resId + '"  ' + 'colspan="' + colspanVal + '" style="text-align:center; vertical-align:middle; cursor:pointer; background-color:' + scaleList[0].color + '!important; color:#ffffff!important; border-right: 1px solid #dee2e6; ">';
                                        row += '<div style="background-color:' + scaleList[0].color + '!important; color:#ffffff!important; ">';
                                    }
                                    else {
                                        row += '<td borderRes="' + Res[0].resStartTime + ',' + period + '" data-toggle="popover" data-html="true" data-trigger="hover" data-placement="top" data-container="body" data-original-title="' + Res[0].nickName + ' | ' + mem[0] + '" ' + 'data-content="' + '<span style=' + 'color:#e61a1a' + '></span><br />' + Res[0].resStartTime + '-' + Res[0].resFinishTime + ' <br />' + Res[0].court.courtName + ' <br />' + Res[0].resDate + Res[0].resTime + '" onclick="openResInfModal(this.id)" id=" ' + Res[0].resId + '"  ' + 'colspan="' + colspanVal + '" style="text-align:center; vertical-align:middle; cursor:pointer; background-color:' + scaleList2[0].color + '!important;color:#ffffff!important;  border-right: 1px solid #dee2e6; ">';
                                        row += '<div style="background-color:' + scaleList2[0].color + '!important; color:#ffffff!important; ">';
                                    }

                                    row += '<a style="padding:0;color:#fff;">';
                                    row += Res[0].nickName;
                                    row += '</a>';
                                    row += '</div>';
                                    row += '</td>';

                                    a = a + parseInt(colspanVal) - 1;
                                }

                                else if (resCancel.length != 0) {



                                    var time = resCancel[0].resStartTime;
                                    var xyz = resCancel[0].resStartTime.split(":");
                                    var xyzd = resCancel[0].resFinishTime.split(":");
                                    var sTimeCan = parseInt((xyz[0] + xyz[1]));
                                    var fTimeCan = parseInt((xyzd[0] + xyzd[1]));

                                    if ((fTimeCan - sTimeCan) >= 1000) {

                                        colspanVal = (fTimeCan - sTimeCan) * 4 / 1000;
                                    }
                                    else {
                                        colspanVal = (fTimeCan - sTimeCan) * 4 / 100;
                                    }

                                    for (var t = 0; t < colspanVal; t++) {

                                        if (period == 1) {
                                            row += '<td borderRes="' + res.resTimes[a].resTimes + ',' + period + '" ' + ' id="' + res.courts[i].courtId + ',' + res.courts[i].courtName + '" ' + 'class="tdHover " data-toggle="tooltip" data-placement="top" title="' + res.courts[i].courtName + '-' + time + '" ' + 'onclick="openResModal(this.id)" colspan="4" style="vertical-align: bottom; padding: 0px; border: 1px solid #dadee2; cursor: pointer">';
                                            row += '<div style="height:3px;background-color:#e61a1a"></div>';
                                            row += '</td>';

                                            t = t + 3;
                                        }

                                        else if (period == 2) {

                                            row += '<td borderRes="' + res.resTimes[a].resTimes + ',' + period + '" ' + ' id="' + res.courts[i].courtId + ',' + res.courts[i].courtName + '" ' + 'class="tdHover " data-toggle="tooltip" data-placement="top" title="' + res.courts[i].courtName + '-' + time + '" ' + 'onclick="openResModal(this.id)" colspan="2" style="vertical-align: bottom; padding: 0px; border: 1px solid #dadee2; cursor: pointer">';
                                            row += '<div style="height:3px;background-color:#e61a1a"></div>';
                                            row += '</td>';
                                            var c = time.split(":");
                                            var hour = parseInt(c[0]);
                                            var min = parseInt(c[1]);
                                            if (min == 30) {
                                                time = (hour + 1) + ":" + "00";
                                            }
                                            else {

                                                time = hour + ":" + (min + 30);
                                            }

                                            t = t + 1;
                                        }

                                        else
                                            row += '<td borderRes="' + res.resTimes[a].resTimes + ',' + period + '" ' + ' id="' + res.courts[i].courtId + ',' + res.courts[i].courtName + '" ' + 'class="tdHover " data-toggle="tooltip" data-placement="top" title="' + res.courts.courtName + '-' + time + '" ' + 'onclick="openResModal(this.id)"  style="vertical-align: bottom; padding: 0px; border: 1px solid #dadee2; cursor: pointer">';
                                        row += '<div style="height:3px;background-color:#e61a1a"></div>';
                                        row += '</td>';

                                        var c = time.split(":");
                                        var hour = parseInt(c[0]);
                                        var min = parseInt(c[1]);

                                        if (min == 45) {
                                            time = (hour + 1) + ":" + "00";
                                        }

                                        else {

                                            time = hour + ":" + (min + 15);
                                        }


                                    }


                                    a = a + parseInt(colspanVal - 1);

                                }

                                else
                                    if (period == 4) {

                                        row += '<td borderRes="' + res.resTimes[a].resTimes + ',' + period + '" ' + 'class="tdHover" data-toggle="popover" data-trigger="hover" data-placement="top" data-container="body" data-content="' + res.courts[i].courtName + '-' + res.resTimes[a].resTimes + '" ' + ' onclick="openResModal(this.id)" style="cursor:pointer" id="' + res.courts[i].courtId + ',' + res.courts[i].courtName + ',' + res.resTimes[a].resTimes + '" ' + 'per="' + period + '"></td>';
                                    }

                                    else if (period == 2) {
                                        row += '<td borderRes="' + res.resTimes[a].resTimes + ',' + period + '" ' + 'class="tdHover" data-toggle="popover" data-trigger="hover" data-placement="top" data-container="body" data-content="' + res.courts[i].courtName + '-' + res.resTimes[a].resTimes + '" ' + ' onclick="openResModal(this.id)" colspan="2" style="cursor:pointer" id="' + res.courts[i].courtId + ',' + res.courts[i].courtName + ',' + res.resTimes[a].resTimes + '" ' + 'per="' + period + '"></td>';

                                        a = a + 1;
                                    }

                                    else if (period == 1) {
                                        row += '<td borderRes="' + res.resTimes[a].resTimes + ',' + period + '" ' + 'class="tdHover" data-toggle="popover" data-trigger="hover" data-placement="top" data-container="body" data-content="' + res.courts[i].courtName + '-' + res.resTimes[a].resTimes + '" ' + ' onclick="openResModal(this.id)" colspan="4" style="cursor:pointer" id="' + res.courts[i].courtId + ',' + res.courts[i].courtName + ',' + res.resTimes[a].resTimes + '" ' + 'per="' + period + '"></td>';

                                        a = a + 3;
                                    }


                            }
                            row += '</tr>';
                        }
                    }

                    $("#xyz").append(row);

                    myfunction();

                },
                error: function (textStatus, errorThrown) {
                    console.log(JSON.stringify(textStatus));
                    console.log(textStatus);
                }
            });
        }

        function myfunction() {

            $(function () {
                $('[data-toggle="popover"]').popover()
            })


            $("#tablecount td").each(function () {


                var abc = $(this).attr('borderRes');
                var time = abc.split(",")[0].split(":")[1].trim();
                var per = abc.split(",")[1].trim();

                if (time == "00" && per == "1")

                    $(this).addClass("hourborder");

                else if (time == "00" && per == "2") {
                    $(this).addClass("hourborder");
                }

                else if (time == "00" && per == "4") {

                    $(this).addClass("hourborder");
                }

                else {
                    $(this).addClass("");
                }

                $(this).css("width", "15px");

            });


        }

        function getPrice() {


            var price = [];
            $('#checkPriceTables input:checked').each(function () {
                price.push(this.name);
            });


            var sum = 0;

            for (var i = 0; i < price.length; i++) {

                var first = parseInt(price[i])
                var sum = first + sum;


                $("#sumOfPrice").html(sum);
            }

        }

        function Approve(id) {



            // seçilen saatler
            var times = [];
            $('#checkTimeTable input:checked:not(:disabled)').each(function () {
                times.push(this.name);
            });


            var priceId = [];
            $('#checkPriceTables input:checked').each(function () {
                priceId.push(this.value);
            });


            var memberUserName = $("#findMember").val().split("-");

            var userName = memberUserName[2];

            if (userName == undefined) {

                userName = memberUserName[0];
            }


            var strPriceId = "";

            for (var i = 0; i < priceId.length; i++) {

                var Id = priceId[i];
                var x = Id + ',';
                strPriceId = strPriceId + x;
            }


            //saat  - tarih
            var dt = new Date();
            var time = dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds();

            var dd = String(dt.getDate()).padStart(2, '0');
            var mm = String(dt.getMonth() + 1).padStart(2, '0');
            var yyyy = dt.getFullYear();

            var today = yyyy + '-' + mm + '-' + dd;


          

            var resobject = {

                ResDate: '',
                ResStartTime: '',
                ResFinishTime: '',
                ResEvent: '',
                userId: '',
                CourtId: '',
                ResTime: '',
                ResNowDate: '',
                Price: '',
                PriceIds: '',
                UserName: '',
                PrivRes: '',

            }


            var x = $("#privResCheck input:checkbox").is(":checked")
            if (x == true) {
                resobject.PrivRes = true;
            }
            else {
                resobject.PrivRes = false;
            }

            resobject.ResNowDate = today;
            resobject.ResStartTime = times[0];
            resobject.ResFinishTime = times[(times.length - 1)];
            resobject.UserName = userName;
            resobject.Price = $("#sumOfPrice").html();
            resobject.ResDate = $("#timeNowModal").val();
            resobject.ResTime = time;
            resobject.PriceIds = strPriceId;
            resobject.userId = $("#userId").text();
            resobject.ResEvent = "event-1"
            resobject.CourtId = id;


            if (times.length == 0) {


                swal({
                    title: "Rezervasyon Onaylanmadı",
                    text: "Lütfen Saat Seçiniz !",
                    icon: "error",
                    button: "Tamam",
                }).then((value) => {



                });

            }

            else if ($("#findMember").val() == "") {

                swal({
                    title: "Uyarı",
                    text: "Lütfen Üye Seçiniz !",
                    icon: "error",
                    button: "Tamam",
                }).then((value) => {



                });
            }

            else
                try {

                    $.ajax({
                        type: "POST",
                        url: '../AdminHome/NewReservationAdmin',
                        cache: false,
                        data: resobject,
                        dataType: "json",
                        async: true,
                        success: function (res) {

                            if (res == true) {

                                $('#rsvModal').modal('toggle');

                                swal({
                                    title: "Rezervasyon Başarılı",
                                    text: "Rezervasyon Kaydınız Başarılı Bir Şekilde Gerçekleşti !",
                                    icon: "success",
                                    button: "Tamam",
                                    timer: 500,
                                }).then((value) => {

                                    getResTable($("#timeNow").val());

                                });
                            }

                            else {

                                $('#rsvModal').modal('toggle');

                                swal({
                                    title: "Rezervasyon Onaylanmadı",
                                    text: "Kullanıcı Bakiyesi Yetersiz ,  Lütfen Bakiye Yükleyiniz !",
                                    icon: "error",
                                    button: "Tamam",
                                }).then((value) => {



                                });
                            }

                        },
                        error: function (textStatus, errorThrown) {
                            console.log(JSON.stringify(textStatus));
                            console.log(textStatus);
                        }
                    });
                } catch (e) {
                    console.log(e.message);
                }


        }

        function WebReservation() {

            swal("Dikkat!", "İnternet Üzerinden Rezervasyon Yetkiniz Bulunmamaktadır.", "warning", {
                button: "Tamam",
            });
        }

        //RezervasyonBilgiModal

        function openResInfModal(id) {

            $.ajax({
                type: "GET",
                url: '../Public/GetResModalInf',
                cache: false,
                data: { "id": id },
                dataType: "json",
                async: true,
                success: function (res) {



                    $("#PriceInf").empty();
                    row = "";

                    if (res.resSchemaModal.priceInf == false) {
                        row += '<span class="info-box-icon"><i style="color:red" class="fas fa-times"></i></span>';
                        row += '<div class="info-box-content">';
                        row += '<span class="info-box-text">Ücreti Ödenmedi - Borç Mevcut</span>';
                    }
                    else {
                        row += '<span class="info-box-icon"><i style="color:#1bbc27" class="fas fa-check"></i></span>';
                        row += '<div class="info-box-content">';
                        row += '<span class="info-box-text">Ücreti Ödendi - Borç Mevcut Değil</span>';
                    }
                    row += '</div>';
                    $("#PriceInf").append(row);



                    var x = res.resSchemaModal.priceIds;
                    var IdsArray = x.split(",");

                    $("#PriceNI").empty();

                    row = "";

                    for (var i = 0; i < res.courtPriceLists.length; i++) {
                        for (var a = 0; a < IdsArray.length; a++) {

                            if (IdsArray[a] == res.courtPriceLists[i].courtPriceListId) {
                                row += '<tr>';
                                row += '<td>' + res.courtPriceLists[i].name + '</td>';
                                row += '<td>' + res.courtPriceLists[i].courtPrice + '</td>';
                                row += '</tr>';
                            }
                        }
                    }

                    $("#PriceNI").append(row);

                    $("#sumPrice").html(res.resSchemaModal.price);

                    var a = res.resSchemaModal.resNowDate.split("-");
                    var nowDate = a[2] + '-' + a[1] + '-' + a[0];

                    var b = res.resSchemaModal.resDate.split("-");
                    var date = b[2] + '-' + b[1] + '-' + b[0];

                    var days = new Date(res.resSchemaModal.resDate);
                    var getday = days.getDay();

                    switch (getday) {
                        case 0:
                            day = "Pazar";
                            break;
                        case 1:
                            day = "Pazartesi";
                            break;
                        case 2:
                            day = "Salı";
                            break;
                        case 3:
                            day = "Çarşamba";
                            break;
                        case 4:
                            day = "Perşembe";
                            break;
                        case 5:
                            day = "Cuma";
                            break;
                        case 6:
                            day = "Cumartesi";
                    }

                    if (res != null) {

                        debugger;

                        $("#nickAndFullName").text(res.resSchemaModal.nickName + ' - ' + res.resSchemaModal.fullName);
                        $("#courtName").text('Kort Adı:' + ' ' + res.resSchemaModal.courtName);
                        $("#resDate").text('Tarih-Gün:' + ' ' + date + ' - ' + day);
                        $("#resTime").text('Saat:' + ' ' + res.resSchemaModal.resStartTime + ' - ' + res.resSchemaModal.resFinishTime);
                        $("#resNowDate").text('Oluşturulma' + ':' + ' ' + nowDate + ' - ' + res.resSchemaModal.resTime);
                        $("#doResInf").text('İşlem Yapan' + ':' + ' ' + res.resSchemaModal.doResInf);

                        $("#cancelRes button:nth-of-type(1)").attr("id", id);
                        $("#updateRes button:nth-of-type(1)").attr("id", id);
                        $('#openResInf').modal('toggle');

                    }
                    else {
                        $.confirm({
                            title: "Uyarı",
                            content: "Üye Bulunamadı.",
                            buttons: {
                                TAMAM: function () {

                                }
                            }
                        });
                    }

                },
                error: function (textStatus, errorThrown) {
                    console.log(JSON.stringify(textStatus));
                    console.log(textStatus);
                }
            });

        }

        function cancelResProcedureModal(id) {

            $.ajax({
                type: "GET",
                url: '../AdminHome/CancelResProcedureModal',
                cache: false,
                data: { "id": id },
                dataType: "json",
                async: true,
                success: function (res) {



                    if (res != true) {

                        $('#openResProcedureModal').modal('toggle')

                        $('#resUserInfo').text(res.resSchemaModal.fullName + " - " + res.resSchemaModal.nickName);
                        $('#resCourtInfo').text("Kort: " + " " + res.resSchemaModal.courtName + " " + " " + "Tarih:" + " " + res.resSchemaModal.resDate);
                        $('#resInfo').text("Rezervasyon Saatleri:" + " " + res.resSchemaModal.resStartTime + "-" + res.resSchemaModal.resFinishTime);


                        $("#cancelResProModal button:nth-of-type(2)").attr("id", id);

                        $('#openResInf').modal('toggle')
                    }
                    else {

                        cancelResAuthorized(id)
                    }

                },

                error: function (textStatus, errorThrown) {
                    console.log(JSON.stringify(textStatus));
                    console.log(textStatus);
                }
            });

        }

        function cancelResAuthorized(id) {

            var userId = $("#userId").text();
            var procedure = false;
            var cancelReasons = $("#reasonCancel option:selected").text();


            if ($("#checkProcedure").is(":checked")) {
                procedure = true;
            }

            swal({
                title: "Emin Misiniz?",
                text: "Rezervasyon  İptal Edilecek !",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {

                        $.ajax({
                            type: "GET",
                            url: '../AdminHome/CancelResAdmin',
                            cache: false,
                            data: { "id": id, "userId": userId, "procedure": procedure, "cancelReasons": cancelReasons },
                            dataType: "json",
                            async: true,
                            success: function (res) {

                                if (res != null) {

                                    swal({
                                        title: "Rezervasyon İptal Edildi",
                                        text: "Rezervasyon Kaydınız Başarılı Bir Şekilde İptal Edildi !",
                                        icon: "success",
                                        button: "Tamam",
                                    }).then((value) => {

                                        $('#openResProcedureModal').modal('hide');
                                        $('#openResInf').modal('hide');


                                        getResTable($("#timeNow").val());

                                    });

                                }
                            },

                            error: function (textStatus, errorThrown) {
                                console.log(JSON.stringify(textStatus));
                                console.log(textStatus);
                            }
                        });

                    }
                    else
                        swal({
                            title: "Rezervasyon Korundu",
                            text: "Rezervasyonu Silmekten Vazgeçtiniz!",
                            icon: "success",
                            button: "Tamam",
                        });
                });
        }

        function checkMe(id) {

            var per = $("#" + id).attr("per");
            var checkID = parseInt(id.split("_")[1]);

            var checkList = [];
            var checkTrueList = [];


            $('#checkTimeTable input:checked:not(:disabled)').each(function () {
                checkTrueList.push(this.id);
            });

            for (var i = 0; i < checkTrueList.length; i++) {

                var x = checkTrueList[i];

                if (x != id) {

                    checkList.push(x);
                }

            }
            checkList.push(id);



            if (per == 15) {

                if (checkTrueList.length < 4 && checkTrueList.length == 3) {

                    for (var i = 0; i < checkTrueList.length; i++) {

                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', false);
                    }
                }


                else if (checkTrueList.length < 4 && checkTrueList.length != 1) {

                    for (var i = 0; i < checkTrueList.length; i++) {

                        $("#t_" + i).prop('checked', false);
                    }

                }



                else if (checkTrueList.length > 4 && checkList[checkList.length - 1].split("_")[1] - checkList[checkList.length - 2].split("_")[1] == 1) {

                    for (var i = 0; i < checkTrueList.length; i++) {
                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', true);
                    }

                }


                else if (checkTrueList.length > 4) {

                    for (var i = 0; i < checkTrueList.length; i++) {
                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', false);
                    }


                    for (var i = checkID; i < (checkID + 4); i++) {

                        $("#t_" + i).prop('checked', true);

                        checkList.push("t_" + i);

                    }
                }

                else
                    for (var i = checkID; i < (checkID + 4); i++) {

                        $("#t_" + i).prop('checked', true);

                        checkList.push("t_" + i);

                    }
            }

            else if (per == 30) {

                if (checkTrueList.length > 2 && checkList[checkList.length - 1].split("_")[1] - checkList[checkList.length - 2].split("_")[1] == 1) {

                    for (var i = 0; i < checkTrueList.length; i++) {
                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', true);
                    }

                }

                else if (checkTrueList.length > 2) {

                    for (var i = 0; i < checkTrueList.length; i++) {

                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', false);
                    }


                    for (var i = checkID; i < (checkID + 2); i++) {

                        $("#t_" + i).prop('checked', true);

                        checkList.push("t_" + i);


                    }
                }

                else if (checkTrueList.length == 1) {


                    for (var i = 0; i < checkTrueList.length; i++) {

                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', false);
                    }


                    for (var i = checkID; i < (checkID + 2); i++) {

                        $("#t_" + i).prop('checked', true);

                        checkList.push("t_" + i);


                    }
                }

            }

            else

                if (checkTrueList.length > 1) {

                    for (var i = 0; i < checkTrueList.length; i++) {

                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', false);
                    }


                    for (var i = checkID; i < (checkID + 1); i++) {

                        $("#t_" + i).prop('checked', true);

                        checkList.push("t_" + i);


                    }
                }
        }

        function checkMeUpd(id) {

            var per = $("#" + id).attr("per");
            var checkID = parseInt(id.split("_")[1]);

            var checkList = [];
            var checkTrueList = [];


            $('#checkTimeUpdTable input:checked:not(:disabled)').each(function () {
                checkTrueList.push(this.id);
            });

            for (var i = 0; i < checkTrueList.length; i++) {

                var x = checkTrueList[i];

                if (x != id) {

                    checkList.push(x);
                }

            }
            checkList.push(id);



            if (per == 15) {

                if (checkTrueList.length < 4 && checkTrueList.length == 3) {

                    for (var i = 0; i < checkTrueList.length; i++) {

                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', false);
                    }
                }


                else if (checkTrueList.length < 4 && checkTrueList.length != 1) {

                    for (var i = 0; i < checkTrueList.length; i++) {

                        $("#ti_" + i).prop('checked', false);
                    }

                }



                else if (checkTrueList.length > 4 && checkList[checkList.length - 1].split("_")[1] - checkList[checkList.length - 2].split("_")[1] == 1) {

                    for (var i = 0; i < checkTrueList.length; i++) {
                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', true);
                    }

                }


                else if (checkTrueList.length > 4) {

                    for (var i = 0; i < checkTrueList.length; i++) {
                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', false);
                    }


                    for (var i = checkID; i < (checkID + 4); i++) {

                        $("#ti_" + i).prop('checked', true);

                        checkList.push("ti_" + i);

                    }
                }

                else
                    for (var i = checkID; i < (checkID + 4); i++) {

                        $("#ti_" + i).prop('checked', true);

                        checkList.push("ti_" + i);

                    }
            }

            else if (per == 30) {

                if (checkTrueList.length > 2 && checkList[checkList.length - 1].split("_")[1] - checkList[checkList.length - 2].split("_")[1] == 1) {

                    for (var i = 0; i < checkTrueList.length; i++) {
                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', true);
                    }

                }

                else if (checkTrueList.length > 2) {

                    for (var i = 0; i < checkTrueList.length; i++) {

                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', false);
                    }


                    for (var i = checkID; i < (checkID + 2); i++) {

                        $("#ti_" + i).prop('checked', true);

                        checkList.push("ti_" + i);


                    }
                }

                else if (checkTrueList.length == 1) {


                    for (var i = 0; i < checkTrueList.length; i++) {

                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', false);
                    }


                    for (var i = checkID; i < (checkID + 2); i++) {

                        $("#ti_" + i).prop('checked', true);

                        checkList.push("ti_" + i);


                    }
                }

            }

            else

                if (checkTrueList.length > 1) {

                    for (var i = 0; i < checkTrueList.length; i++) {

                        var checkedTime = checkTrueList[i];

                        $('#' + checkedTime).prop('checked', false);
                    }


                    for (var i = checkID; i < (checkID + 1); i++) {

                        $("#ti_" + i).prop('checked', true);

                        checkList.push("ti_" + i);


                    }
                }
        }

        $(function () {
            $('#submit').click(function () {
                var pageTitle = 'Rezervasyon Genel Durum Şema' + ' - ' + $("#timeInfH4").text(),
                    stylesheet = '//maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css',
                    win = window.open('', 'Print', 'width=500,height=300');
                win.document.write('<html><head><title>' + pageTitle + '</title>' +
                    '<link rel="stylesheet" href="' + stylesheet + '">' +
                    '</head><body>' + $('#tablecount')[0].outerHTML + '</body></html>');
                win.document.close();
                win.print();
                win.close();
                return false;
            });
        });


    </script>


