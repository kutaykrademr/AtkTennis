
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model Helpers.Dto.ViewDtos.HomeModelDto
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor;

@{
    var fullname = HttpContextAccessor.HttpContext.Session.GetString("FullName");
    var nickname = HttpContextAccessor.HttpContext.Session.GetString("NickName");
    var username = HttpContextAccessor.HttpContext.Session.GetString("UserName");
    var userId = HttpContextAccessor.HttpContext.Session.GetString("UserId");
    var Role = HttpContextAccessor.HttpContext.Session.GetString("Role");




    var times = Model.resTimes.Where(x => x.Restimes60 == 60).ToList();

    var x = times.Count * 4;

    var start = Model.reservationSettings.Where(x => x.ReservationSettingsInf == "Web Rezervasyon Başlangıç Saati").FirstOrDefault();
    var finish = Model.reservationSettings.Where(x => x.ReservationSettingsInf == "Web Rezervasyon Bitiş Saati (Max = 23:59)").FirstOrDefault();
    var resSettingsTime = Model.reservationSettings.Where(x => x.ReservationSettingsInf == "Rezervasyon Süresi (Dakika)").FirstOrDefault();

    var startTime = start.ReservationValue;
    var finishTime = finish.ReservationValue;
    var resSetTime = resSettingsTime.ReservationValue;

}

<style>



    .ui-autocomplete {
        font-size: 17px;
        cursor: pointer;
        text-align: center;
        position: absolute;
        top: 0;
        left: 0;
        z-index: 1510 !important;
        float: left;
        /*display: none;*/
        min-width: 160px;
        width: 160px;
        padding: 4px 0;
        margin: 2px 0 0 0;
        list-style: circle;
        background-color: #ffffff;
        border-color: #ccc;
        border-color: rgba(0, 0, 0, 0.2);
        border-style: solid;
        border-width: 1px;
    }
</style>


<div class="content-wrapper">


    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-3 col-6">
                    <div class="small-box bg-warning">
                        <div style="margin-top:10px" class="inner">
                            <h3>
                                @if (Model.TotalUserCount == null)
                                {
                                    @Html.Raw("-");
                                }
                                else
                                {
                                    @Model.TotalUserCount
                                }

                            </h3>
                            <p>Toplam Üye Sayısı</p>
                        </div>
                        <div class="icon">
                            <i class="ion ion-person-add"></i>
                        </div>
                        @*<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>*@
                    </div>
                </div>

                <div class="col-lg-3 col-6">

                    <div class="small-box bg-info">
                        <div style="margin-top:10px" class="inner">
                            <h3>
                                @if (Model.TotalRoleCount == null)
                                {@Html.Raw("-") ;
                            }
                            else
                            { @Model.TotalRoleCount}
                            </h3>
                            <p>Toplam Yetkiler</p>
                        </div>
                        <div class="icon">
                            <i class="ion ion-bag"></i>
                        </div>
                        @*<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>*@
                    </div>
                </div>

                <div class="col-lg-3 col-6">

                    <div class="small-box bg-success">
                        <div style="margin-top:10px" class="inner">
                            @*<h3>53<sup style="font-size: 20px">%</sup></h3>*@

                            <h3>

                                @if (Model.TodayResCount == null)
                                {
                                    @Html.Raw("-") ;
                                }

                                else

                                    @Model.TodayResCount

                            </h3>
                            <p>Bugüne Ait Rezervasyon Sayısı</p>
                        </div>
                        <div class="icon">
                            <i class="ion ion-stats-bars"></i>
                        </div>
                        @*<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>*@
                    </div>
                </div>

                <div class="col-lg-3 col-6">

                    <div class="small-box bg-danger">
                        <div style="margin-top:10px" class="inner">
                            <h3>

                                @if (Model.TotalResCount == null)
                                {
                                    @Html.Raw("-") ;
                                }

                                else

                                    @Model.TotalResCount

                            </h3>

                            <p>Toplam Rezervasyon Sayısı</p>
                        </div>
                        <div class="icon">
                            <i class="ion ion-pie-graph"></i>
                        </div>
                        @*<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>*@
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-9">
                    <section class="content">
                        <div class="container-fluid">
                            <style>
                                .tdHover:hover {
                                    background-color: #131da882;
                                }

                                .reservationForm {
                                    padding: 1rem 0 0.3rem 0 !important;
                                    border: 1px solid #dedede !important;
                                    margin: 0.2rem !important;
                                }

                                .custom-control2 {
                                    padding: 0.2rem !important;
                                }

                                .custom-control-label2::before {
                                    top: -0.75rem !important;
                                    left: 0.8rem !important;
                                }

                                .custom-control-label2::after {
                                    top: -0.75rem !important;
                                    left: 0.8rem !important;
                                }
                            </style>

                            <div style="display: none;"><input id="RoleName" type="text" name="name" value="@Role" /></div>
                            <div style="display: none;"><input id="doRes" start="@startTime" finish="@finishTime" setTime="@resSetTime" type="text" /></div>


                            <div class="col-12">
                                <div class="card">

                                    <div class="card-header d-flex justify-content-between">

                                        <div style="margin:8px" id="TimeInf">

                                        </div>

                                        <div style="margin-top:8px">
                                            <nav aria-label="Page navigation example">
                                                <ul class="pagination">

                                                    @{
                                                        DateTime date1 = DateTime.Now;
                                                        var date2 = date1.AddDays(1);
                                                        var today = date1.ToString("yyyy-MM-dd");
                                                        var tomorrow = date2.ToString("yyyy-MM-dd");
                                                    }

                                                    <li class="page-item"><a style="color:white;  background-color:#3fc9d5 !important" class="page-link" href="~/AdminHome/Index?date=@today">Bugün</a></li>
                                                    <li class="page-item"><a style="color:white; background-color:#337ab7" class="page-link" href="~/AdminHome/Index?date=@tomorrow">Yarın</a></li>
                                                    <li class="page-item"><input class="form-control" type="date" id="timeNow" style="cursor:pointer; background-color:#e7505a; color:white"></li>
                                                    <li class="page-item"><button style="color:cornflowerblue; background-color:#f9f9f9" class="page-link" onclick="preDate()"><i class="fas fa-chevron-left"></i></button></li>
                                                    <li class="page-item"><button style="color:cornflowerblue; background-color:#f9f9f9" class="page-link" onclick="nextDate()"><i class="fas fa-chevron-right"></i></button></li>

                                                </ul>
                                            </nav>
                                        </div>
                                    </div>
                                    <div class="card">
                                        <div class="card-body">
                                            <table style="text-align:center" class="table table-bordered">
                                                <thead>
                                                    <tr>
                                                        <th style="background-color:#f5f8fd" scope="col">
                                                            <div class="row">
                                                                <div class="col-md-7">Kortlar</div>

                                                                <div style="background-color:royalblue; color:white ; cursor:pointer" class="col-md-2">
                                                                    <i class="fas fa-print"></i>
                                                                </div>

                                                                <div class="col-md-2" style="background-color: #e7505a; color:white">
                                                                    <i class="fas fa-trash"></i>
                                                                </div>


                                                            </div>
                                                        </th>

                                                        @for (int i = 0; i < times.Count; i++)

                                                        {
                                                            <th style="background-color:#f5f8fd; font-weight:inherit;" colspan="4" scope="col">@times[i].ResTimes</th>

                                                        }

                                                    </tr>
                                                </thead>

                                                <tbody>
                                                    @foreach (var item in Model.courts)

                                                    {
                                                        <tr>

                                                            <th style="background-color:#f5f8fd; font-weight:inherit;" scope="row">@item.CourtName</th>

                                                            @for (int i = 0; i < Model.resTimes.Count; i++)
                                                            {

                                                                var res = Model.reservations.Where(x => x.ResStartTime == Model.resTimes[i].ResTimes && x.Court.CourtId == item.CourtId).FirstOrDefault();

                                                                var resCancel = Model.reservationCancels.Where(x => x.ResStartTime == Model.resTimes[i].ResTimes && x.CourtId == item.CourtId).FirstOrDefault();

                                                                var court = Model.courtTimeInfs.SingleOrDefault(x => x.CourtId == item.CourtId);

                                                                var period = (60 / Convert.ToInt32(court.CourtTimePeriod));

                                                                if (res != null && resCancel != null)
                                                                {
                                                                    <td data-toggle="tooltip" data-placement="top" title="@res.ResStartTime - @res.ResFinishTime - @res.Court.CourtName - @res.ResDate" onclick="openResInfModal(this.id)" id="@res.ResId" colspan="4" style="text-align:center; vertical-align:middle; cursor:pointer; background-color:#1bbc27!important;color:#ffffff!important;">
                                                                        <div style="background-color:#1bbc27!important;color:#ffffff!important;">
                                                                            <a style="padding:0;color:#fff;">
                                                                                @res.NickName

                                                                            </a>
                                                                        </div>
                                                                        <div style="position: relative;height:3px;background-color:#e61a1a"></div>
                                                                    </td>

                                                                    i = i + 3;
                                                                }

                                                                else if (res != null)
                                                                {
                                                                    <td data-toggle="tooltip" data-placement="top" title="@res.ResStartTime - @res.ResFinishTime - @res.Court.CourtName - @res.ResDate" onclick="openResInfModal(this.id)" id="@res.ResId" colspan="4" style="text-align:center; vertical-align:middle; cursor:pointer; background-color:#1bbc27!important;color:#ffffff!important;">
                                                                        <div style="background-color:#1bbc27!important;color:#ffffff!important;">
                                                                            <a style="padding:0;color:#fff;">
                                                                                @res.NickName


                                                                            </a>
                                                                        </div>
                                                                    </td>

                                                                    i = i + 3;
                                                                }



                                                                else if (resCancel != null)
                                                                {
                                                                    var time = Model.resTimes[i].ResTimes;

                                                                    for (var t = 0; t < 4; t++)
                                                                    {
                                                                        if (period == 1)
                                                                        {
                                                                            <td id="@item.CourtId , @item.CourtName" class="tdHover" data-toggle="tooltip" data-placement="top" title="@item.CourtName - @time" onclick="openResModal(this.id)" colspan="4" style="vertical-align:bottom; padding: 0px; border: 1px solid #dadee2; cursor:pointer">
                                                                                <div style="position: relative;height:3px;background-color:#e61a1a"></div>
                                                                            </td>


                                                                            t = t + 3;

                                                                        }
                                                                        else if (period == 2)
                                                                        {
                                                                            <td id="@item.CourtId , @item.CourtName" class="tdHover" data-toggle="tooltip" data-placement="top" title="@item.CourtName - @time" onclick="openResModal(this.id)" colspan="2" style="vertical-align:bottom; padding: 0px; border: 1px solid #dadee2; cursor:pointer">
                                                                                <div style="position: relative;height:3px;background-color:#e61a1a"></div>
                                                                            </td>

                                                                            var c = time.Split(":");
                                                                            var hour = Convert.ToInt32(c[0]);
                                                                            var min = Convert.ToInt32(c[1]);
                                                                            if (min == 30)
                                                                            {
                                                                                time = (hour + 1) + ":" + "00";
                                                                            }
                                                                            else
                                                                            {

                                                                                time = hour + ":" + (min + 30);
                                                                            }
                                                                            t = t + 1;
                                                                        }
                                                                        else
                                                                        {
                                                                            <td id="@item.CourtId , @item.CourtName" class="tdHover" data-toggle="tooltip" data-placement="top" title="@item.CourtName - @time" onclick="openResModal(this.id)" style="vertical-align:bottom; padding: 0px; border: 1px solid #dadee2; cursor:pointer">
                                                                                <div style="position: relative;height:3px;background-color:#e61a1a"></div>
                                                                            </td>


                                                                            var c = time.Split(":");
                                                                            var hour = Convert.ToInt32(c[0]);
                                                                            var min = Convert.ToInt32(c[1]);
                                                                            if (min == 45)
                                                                            {
                                                                                time = (hour + 1) + ":" + "00";
                                                                            }
                                                                            else
                                                                            {

                                                                                time = hour + ":" + (min + 15);
                                                                            }
                                                                        }

                                                                    }
                                                                    i = i + 3;
                                                                }


                                                                else

                                                                {
                                                                    if (period == 4)
                                                                    {
                                                                        <td class="tdHover" data-toggle="tooltip" data-placement="top" title="@item.CourtName - @Model.resTimes[i].ResTimes" onclick="openResModal(this.id)" style="cursor:pointer" id="@item.CourtId , @item.CourtName , @Model.resTimes[i].ResTimes" per="@period"></td>
                                                                    }

                                                                    else if (period == 2)
                                                                    {
                                                                        <td class="tdHover" data-toggle="tooltip" data-placement="top" title="@item.CourtName - @Model.resTimes[i].ResTimes" onclick="openResModal(this.id)" colspan="2" style="cursor:pointer" id="@item.CourtId , @item.CourtName , @Model.resTimes[i].ResTimes" per="@period"></td>
                                                                        i = i + 1;
                                                                    }
                                                                    else if (period == 1)
                                                                    {
                                                                        <td class="tdHover" data-toggle="tooltip" data-placement="top" title="@item.CourtName - @Model.resTimes[i].ResTimes" onclick="openResModal(this.id)" colspan="4" style="cursor:pointer" id="@item.CourtId , @item.CourtName , @Model.resTimes[i].ResTimes" per="@period"></td>
                                                                        i = i + 3;
                                                                    }

                                                                }

                                                            }

                                                        </tr>
                                                    }

                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>

                    </section>
                </div>

                <div class="col-lg-3">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">
                                <i class="ion ion-clipboard mr-1"></i>
                                Rezervasyon Detay Şema
                            </h3>


                        </div>
                        <!-- /.card-header -->
                        <div class="card-body">
                            <div style="padding: 0px;">

                                <div id="resSchemaDetail" style="max-height: 505px; min-height: 617px; padding: 0px; background-color: #f5f8fd; overflow: scroll;">

                                </div>

                            </div>
                        </div>
                    </div>
                </div>

            </div>

            <div class="row">
                <section class="col-lg-7 connectedSortable">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="card card-primary">
                                <div class="card-header">
                                    <h3 class="card-title">Area Chart</h3>

                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                        <button type="button" class="btn btn-tool" data-card-widget="remove">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="chart">
                                        <div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
                                        <canvas id="areaChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%; display: block; width: 764px;" width="764" height="250" class="chartjs-render-monitor"></canvas>
                                    </div>
                                </div>
                            </div>
                            <div class="card card-danger">
                                <div class="card-header">
                                    <h3 class="card-title">Donut Chart</h3>

                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                        <button type="button" class="btn btn-tool" data-card-widget="remove">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
                                    <canvas id="donutChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%; display: block; width: 764px;" width="764" height="250" class="chartjs-render-monitor"></canvas>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">

                            <div class="card card-info">
                                <div class="card-header" style="background-color:rebeccapurple">
                                    <h3 class="card-title">Line Chart</h3>

                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                        <button type="button" class="btn btn-tool" data-card-widget="remove">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="chart">
                                        <div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
                                        <canvas id="lineChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%; display: block; width: 764px;" width="764" height="250" class="chartjs-render-monitor"></canvas>
                                    </div>
                                </div>
                            </div>
                            <div class="card card-success">
                                <div class="card-header">
                                    <h3 class="card-title">Bar Chart</h3>

                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                        <button type="button" class="btn btn-tool" data-card-widget="remove">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="chart">
                                        <div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
                                        <canvas id="barChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%; display: block; width: 764px;" width="764" height="250" class="chartjs-render-monitor"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>



                    <div class="card bg-gradient-success">
                        <div class="card-header border-0">

                            <h3 class="card-title">
                                <i class="far fa-calendar-alt"></i>
                                Calendar
                            </h3>

                            <div class="card-tools">
                                <div class="btn-group">
                                    <button type="button" class="btn btn-success btn-sm dropdown-toggle" data-toggle="dropdown" data-offset="-52">
                                        <i class="fas fa-bars"></i>
                                    </button>
                                    <div class="dropdown-menu" role="menu">
                                        <a href="#" class="dropdown-item">Add new event</a>
                                        <a href="#" class="dropdown-item">Clear events</a>
                                        <div class="dropdown-divider"></div>
                                        <a href="#" class="dropdown-item">View calendar</a>
                                    </div>
                                </div>
                                <button type="button" class="btn btn-success btn-sm" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-success btn-sm" data-card-widget="remove">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>

                        </div>

                        <div class="card-body pt-0">

                            <div id="calendar" style="width: 100%"></div>
                        </div>
                    </div>
                </section>



                <section class="col-lg-5 connectedSortable">
                    <div class="card card-info">
                        <div class="card-header">
                            <h3 class="card-title"><i style="margin-right:10px" class="fas fa-chart-pie mr-1"></i>Kort Doluluk Oranları </h3>

                            <div class="card-tools">
                                <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                                    <i class="fas fa-minus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body p-0">
                            <table style="text-align:center" id="example2" class="table table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>Kortlar</th>
                                        <th>Doluluk Oranı</th>

                                    </tr>
                                </thead>
                                <tbody>



                                    @foreach (var item2 in Model.courts)
                                    {

                                        var a = Model.reservations.Where(x => x.Court.CourtId == item2.CourtId && x.ResDate == today).ToList();
                                        var count = a.Count();
                                        var percent = (count * 100) / 17;
                                        <tr>
                                            <td>@item2.CourtName</td>
                                            <td>

                                                <div class="progress1">
                                                    <div class="progress-value1" style="width: @percent%"><span>@percent%</span></div>
                                                </div>

                                            </td>
                                        </tr>
                                    }

                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="card card-info">
                        <div class="card-header" style="background-color:darkmagenta">
                            <h3 class="card-title"><i style="margin-right:10px" class="fas fa-tasks"></i>Yapılacak Listesi </h3>

                            <div class="card-tools">
                                <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                                    <i class="fas fa-minus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body p-0">
                            <ul class="todo-list" data-widget="todo-list">

                                @foreach (var item in Model.toDoLists)
                                {
                                    <li>
                                        <span class="handle">
                                            <i class="fas fa-ellipsis-v"></i>
                                            <i class="fas fa-ellipsis-v"></i>
                                        </span>

                                        <div class="icheck-primary d-inline ml-2">
                                            <input type="checkbox" name="to_@item.ListId" id="to_@item.ListId">
                                            <label for="to_@item.ListId"></label>
                                        </div>

                                        <span class="text">@item.ToDo</span>
                                        <small class="badge badge-secondary"><i class="far fa-clock"></i>@item.Date</small>
                                        <div class="tools">
                                            <i class="fas fa-edit"></i>
                                            <i class="fas fa-trash"></i>
                                        </div>
                                    </li>
                                }


                            </ul>
                        </div>
                        <div class="card-footer clearfix">
                            <button data-toggle="modal" data-target="#openToDoModal" style="background-color:darkmagenta; border-color:cornflowerblue" type="button" class="btn btn-info float-right"><i class="fas fa-plus"></i> Ekle</button>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </section>
</div>


<div class="modal fade" id="openResInf" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #004e6c;">
                <h5 class="modal-title" style="color:white;" id="exampleModalLabel">Rezervasyon Bilgileri</h5>
                <button style="color:white;" type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <div class="card">
                    <div class="card-body row" style="background-color: #f7f7f7f7;">

                        <h5 class="col-md-9" id="nickAndFullName"></h5>
                        <div id="cancelRes" class="col-md-0">
                            <button style="background-color:#dc3545; color:white" class="btn btn-danger" type="button" onclick="cancelResProcedureModal(this.id)">İptal Et</button>
                        </div>
                        <div class="col-md">
                            <button style="background-color:#ffc107; color:white" class="btn btn-warning" type="button" id="">Düzenle</button>
                        </div>
                    </div>

                </div>

                <div class="row">
                    <div class="col-sm-6">
                        <div class="card">
                            <div class="card-body" style="background-color:#f7f7f7">
                                <ul style="font-size:20px" class="list-group list-group-flush">
                                    <li id="courtName" class="list-group-item"></li>
                                    <li id="resDate" class="list-group-item"></li>
                                    <li id="resTime" class="list-group-item"></li>
                                    <li id="resNowDate" class="list-group-item"></li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="card">
                            <div class="card-body">

                                <div id="PriceInf" class="info-box shadow-lg">

                                </div>

                                <div class="info-box shadow-lg">

                                    <div class="info-box-content">
                                        <table style="text-align:center" class="table table-bordered">


                                            <thead>
                                                <tr>
                                                    <th style="font-weight:bold" scope="col">Ücret Bilgisi</th>
                                                    <th style="font-weight:bold" scope="col">Ücret </th>

                                                </tr>
                                            </thead>

                                            <tbody id="PriceNI">
                                            </tbody>
                                            <tfoot>
                                                <tr>
                                                    <th style="font-weight:bold" scope="col">Ücret Toplam :</th>
                                                    <th id="sumPrice" style="font-weight:bold" scope="col"></th>

                                                </tr>
                                            </tfoot>

                                        </table>
                                    </div>
                                </div>

                                <div class="info-box shadow-lg">
                                    <div class="info-box-content">
                                        <div class="row">
                                            <div class="col-md-3">
                                                <button type="button" class="btn btn-danger courtbutton">Ödeme</button>
                                            </div>
                                            <div class="col-md-5">
                                                <button type="button" class="btn btn-danger courtbutton">Toplu Ödeme</button>
                                            </div>
                                            <div class="col-md-2">
                                                <button type="button" class="btn btn-danger courtbutton"><i class="fas fa-print"></i> </button>
                                            </div>
                                            <div class="col-md-1">
                                                <button type="button" class="btn btn-danger courtbutton"><i class="fas fa-edit"></i></button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="rsvModal">
    <div class="modal-dialog modal-lg" style="max-width:1000px; ">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #004e6c;">
                <h4 style="margin:auto; color:white">Rezervasyon Yap</h4>
            </div>

            <div class="modal-header">
                <div class="row">
                    <div class="col-md-6">
                        <h4>Sayın , @fullname</h4>
                    </div>

                    <form autocomplete="off">
                        <div class="form-inline">
                            <input type="text" class="form-control " id="findMember" placeholder="Üye Ara">
                        </div>
                    </form>

                    <div class="col-md-2">
                        <nav aria-label="Page navigation example">
                            <ul class="pagination">

                                <li class="page-item"><a style="color:white;  background-color:#3fc9d5 !important" class="page-link" href="~/AdminHome/Index?date=@today">Bugün</a></li>
                                <li class="page-item"><a style="color:white; background-color:#337ab7" class="page-link" href="~/AdminHome/Index?date=@tomorrow">Yarın</a></li>
                                <li class="page-item"><input class="form-control" type="date" id="timeNowModal" style="cursor:pointer; background-color:#e7505a; color:white"></li>
                                <li class="page-item"><button style="color:cornflowerblue; background-color:#f9f9f9" class="page-link" onclick="preDate()"><i class="fas fa-chevron-left"></i></button></li>
                                <li class="page-item"><button style="color:cornflowerblue; background-color:#f9f9f9" class="page-link" onclick="nextDate()"><i class="fas fa-chevron-right"></i></button></li>

                            </ul>
                        </nav>
                    </div>
                </div>

            </div>



            <div id="CourtandTime">

            </div>

            <div class="modal-header">
                <div class="row" id="court_select">
                    <div id="ResModal" style="display: contents;">

                    </div>
                </div>
            </div>

            <div class="modal-header" style="background-color: #004e6c;">
                <h4 style="margin:auto; color:white">Ücretlendirme</h4>
            </div>


            <div class="modal-header">
                <div class="col-sm-12">
                    <div class="form-group" style="text-align:center">
                        <table class="table table-bordered ">
                            <thead>
                                <tr>
                                    <th style="font-weight:bold" scope="col">Adı</th>
                                    <th style="font-weight:bold" scope="col">Fiyatı</th>
                                    <th style="font-weight:bold" scope="col">Seç</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item2 in Model.courtPriceLists)
                                {
                                    if (item2.Condition == "1")
                                    {
                                        <tr>
                                            <td>@item2.Name</td>
                                            <td>@item2.CourtPrice ₺ </td>
                                            <td>
                                                <div class="custom-control custom-checkbox " id="checkPriceTables">

                                                    @{ if (item2.PriceType == "1")
                                                        {
                                                            <input class="custom-control-input custom-control-input-danger custom-control-input-outline" value="@item2.CourtPriceListId" type="checkbox" name="@item2.CourtPrice" id="cb_@item2.CourtPriceListId" checked="checked" disabled="">
                                                        }

                                                        else
                                                        {
                                                            <input class="custom-control-input custom-control-input-danger" value="@item2.CourtPriceListId" name="@item2.CourtPrice" type="checkbox" id="cb_@item2.CourtPriceListId">
                                                        }

                                                    }
                                                    <label for="cb_@item2.CourtPriceListId" class="custom-control-label"></label>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th style="font-weight:bold" scope="col">Ücret Toplam :</th>
                                    <th id="sumOfPrice" style="font-weight:bold" scope="col"></th>
                                    <th scope="col"></th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>

            <div style="display:none" class="modal-footer">
                <textbox style="color:black; " id="userId">@userId</textbox>
            </div>



            <div class="modal-footer" id="forApproveId">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" onclick="Approve(this.id)">Rezervasyon Yap</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="openResInf" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #004e6c;">
                <h5 class="modal-title" style="color:white;" id="exampleModalLabel">Rezervasyon Bilgileri</h5>
                <button style="color:white;" type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <div class="card">
                    <div class="card-body row" style="background-color: #f7f7f7f7;">

                        <h5 class="col-md-9" id="nickAndFullName"></h5>
                        <div id="cancelRes" class="col-md-0">
                            <button style="background-color:#dc3545; color:white" class="btn btn-danger" type="button" onclick="cancelResAuthorized(this.id)">İptal Et</button>
                        </div>
                        <div class="col-md">
                            <button style="background-color:#ffc107; color:white" class="btn btn-warning" type="button" id="">Düzenle</button>
                        </div>
                    </div>

                </div>

                <div class="row">
                    <div class="col-sm-6">
                        <div class="card">
                            <div class="card-body" style="background-color:#f7f7f7">
                                <ul style="font-size:20px" class="list-group list-group-flush">
                                    <li id="courtName" class="list-group-item"></li>
                                    <li id="resDate" class="list-group-item"></li>
                                    <li id="resTime" class="list-group-item"></li>
                                    <li id="resNowDate" class="list-group-item"></li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="card">
                            <div class="card-body">

                                <div id="PriceInf" class="info-box shadow-lg">

                                </div>

                                <div class="info-box shadow-lg">

                                    <div class="info-box-content">
                                        <table style="text-align:center" class="table table-bordered">


                                            <thead>
                                                <tr>
                                                    <th style="font-weight:bold" scope="col">Ücret Bilgisi</th>
                                                    <th style="font-weight:bold" scope="col">Ücret </th>

                                                </tr>
                                            </thead>

                                            <tbody id="PriceNI">
                                            </tbody>
                                            <tfoot>
                                                <tr>
                                                    <th style="font-weight:bold" scope="col">Ücret Toplam :</th>
                                                    <th id="sumPrice" style="font-weight:bold" scope="col"></th>

                                                </tr>
                                            </tfoot>

                                        </table>
                                    </div>
                                </div>

                                <div class="info-box shadow-lg">
                                    <div class="info-box-content">
                                        <div class="row">
                                            <div class="col-md-3">
                                                <button type="button" class="btn btn-danger courtbutton">Ödeme</button>
                                            </div>
                                            <div class="col-md-5">
                                                <button type="button" class="btn btn-danger courtbutton">Toplu Ödeme</button>
                                            </div>
                                            <div class="col-md-2">
                                                <button type="button" class="btn btn-danger courtbutton"><i class="fas fa-print"></i> </button>
                                            </div>
                                            <div class="col-md-1">
                                                <button type="button" class="btn btn-danger courtbutton"><i class="fas fa-edit"></i></button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="openResProcedureModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color:darkgreen; color:white">
                <h5 class="modal-title" id="exampleModalLongTitle">Uyarı !!! - Rezervasyon İptal Edilecek</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <div class="callout callout-info">
                    <h5 id="resUserInfo"></h5>
                    <p id="resCourtInfo"></p>
                    <p id="resInfo"></p>

                </div>

                <div class="callout callout-danger">
                    <h5>Dikkat</h5>

                    <p>
                        Dikkat ! Prosedür gereği rezervasyon iptal saati geçmiş olduğu için yapılan iptallerde borçlandırma prosedürü uygulanır.
                    </p>
                </div>

                <div class="callout callout-warning">
                    <div class="form-check">
                        <input id="checkProcedure" class="form-check-input" type="checkbox">
                        <label class="form-check-label">Prosedürü Dikkate Alma</label>
                    </div>
                </div>


                <div class="form-group">
                    <label>İptal Nedeni Seçiniz</label>
                    <select id="reasonCancel" class="form-control">
                        <option>Turnuva</option>
                        <option>Sağlık</option>
                        <option>Ulaşım</option>
                        <option>Partner</option>
                        <option>Kişisel Sebepler</option>
                        <option>Kort Problemleri</option>
                        <option>Hava Durumu</option>
                    </select>
                </div>


            </div>
            <div class="modal-footer" id="cancelResProModal">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Vazgeç</button>
                <button type="button" class="btn btn-primary" onclick="cancelResAuthorized(this.id)">İptal Et</button>
            </div>
        </div>
    </div>
</div>



<script src="~/lib/jquery/dist/jquery.min.js"></script>




<script>

    var picker = "@ViewBag.Date";

    $(document).ready(function () {

        $("#example1").DataTable({
            "responsive": true, "lengthChange": false, "autoWidth": false,
            "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"]
        }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');

        $('#example2 , #example3 , #example4').DataTable({
            "paging": false,
            "lengthChange": false,
            "searching": false,
            "ordering": true,
            "info": true,
            "autoWidth": false,
            "responsive": true,
        });

        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })

            var now = new Date();
            var month = (now.getMonth() + 1);
            var day = now.getDate();

        if (month < 10)
            month = "0" + month;
        if (day < 10)
            day = "0" + day;

        var today = now.getFullYear() + '-' + month + '-' + day;



        //Rezervasyon Şema Tarih

        $('#timeNow').val(picker);


        $('#timeNow').change(function () {

            window.location.href = "Index?date=" + $('#timeNow').val();

        });



        resSchemaDetail()
        getPrice();

        $('#checkPriceTables input').click(function () {
            if ($(this).is(':checked'))
                getPrice();

            else {
                getPrice();

            }
        });



        //TimeInf
        var time = $('#timeNow').val();
        var b = time.split("-");
        var timeNow = b[2] + '-' + b[1] + '-' + b[0];

        var days = new Date(time);
        var getday = days.getDay();



        switch (getday) {
            case 0:
                day = "Pazar";
                break;
            case 1:
                day = "Pazartesi";
                break;
            case 2:
                day = "Salı";
                break;
            case 3:
                day = "Çarşamba";
                break;
            case 4:
                day = "Perşembe";
                break;
            case 5:
                day = "Cuma";
                break;
            case 6:
                day = "Cumartesi";
        }

        $("#TimeInf").empty();
        row = "";
        row += '<h4 style="margin:auto; color:black"><i style="color:black" class="fas fa-flag nav-icon"></i>' + ' ' + timeNow + ' ' + ' - ' + ' ' + day + ' ' + '</h4>';
        $("#TimeInf").append(row);


        findMember();


    });

    function findMember() {


        $.ajax({
            type: "Get",
            url: '../Public/UserList',
            cache: false,
            dataType: "json",
            async: true,
            success: function (res) {



                var mem = [];

                for (var i = 0; i < res.memberLists.length; i++) {
                    mem.push(res.memberLists[i].fullName + ' - ' + res.memberLists[i].nickName + ' - ' + res.memberLists[i].userName);
                }

                $("#findMember").autocomplete({
                    source: mem
                });


            },

            error: function (textStatus, errorThrown) {
                console.log(JSON.stringify(textStatus));
                console.log(textStatus);
            }
        });
    }

    function resSchemaDetail() {

        var date = $("#timeNow").val();

        $.ajax({
            type: "Get",
            url: '../AdminHome/GetResSchemaDetail',
            cache: false,
            data: { "date": date },
            dataType: "json",
            async: true,
            success: function (res) {

                var days = new Date(date);
                var getday = days.getDay();

                switch (getday) {
                    case 0:
                        day = "Pazar";
                        break;
                    case 1:
                        day = "Pazartesi";
                        break;
                    case 2:
                        day = "Salı";
                        break;
                    case 3:
                        day = "Çarşamba";
                        break;
                    case 4:
                        day = "Perşembe";
                        break;
                    case 5:
                        day = "Cuma";
                        break;
                    case 6:
                        day = "Cumartesi";
                }

                $("#resSchemaDetail").empty();

                NewRow = "";


                NewRow += '<ul class="list-group">';
                NewRow += '<li class="list-group-item list-group-item-success bg-grey-mint bg-font-grey-mint" style="color: #fff; text-align:center; background-color:#525e64; font-size: 16px;">' + date + "  " + "  " + day + '</li>';

                for (var i = 0; i < res.courts.length; i++) {

                    NewRow += '<li style="background-color:black; color:white; text-align:center;" class="list-group-item list-group-item-info">'+ res.courts[i].courtName + '</li>';

                    for (var a = 0; a < res.reservations.length; a++) {

                        if (res.reservations[a].court.courtId == res.courts[i].courtId) {

                            NewRow += '<li class="list-group-item">';
                            NewRow += '<span class="label label-sm label-primary">' + res.reservations[a].resStartTime + " - " + res.reservations[a].resFinishTime + '</span>';
                            for (var x = 0; x < res.memberLists.length; x++) {
                                if (res.reservations[a].userId == res.memberLists[x].userId) {
                                    NewRow += '<span style="margin-left:25px">' + res.memberLists[x].fullName + '</span>';
                                    NewRow += '<span style="margin-left:25px;border: inset;border-color:#19c140; background:#19c140; color:white;">' + res.memberLists[x].nickName + '</span>';
                                }
                            }

                            NewRow += ' </li> </ul>';
                        }
                    }


                }


                $("#resSchemaDetail").append(NewRow);



            },

            error: function (textStatus, errorThrown) {
                console.log(JSON.stringify(textStatus));
                console.log(textStatus);
            }
        });
    }

    // Rezervasyon Şema Tarih

    function nextDate() {

        var date = $("#timeNow").val();

        const d = new Date(date);
        d.setDate(d.getDate() + 1);

        var month = (d.getMonth() + 1);
        var day = d.getDate();
        if (month < 10)
            month = "0" + month;
        if (day < 10)
            day = "0" + day;

        var date3 = d.getFullYear() + '-' + month + '-' + day;



        window.location.href = "Index?date=" + date3;
    }

    function preDate() {

        var date = $("#timeNow").val();

        const d = new Date(date);
        d.setDate(d.getDate() - 1);

        var month = (d.getMonth() + 1);
        var day = d.getDate();
        if (month < 10)
            month = "0" + month;
        if (day < 10)
            day = "0" + day;
        var date4 = d.getFullYear() + '-' + month + '-' + day;



        window.location.href = "Index?date=" + date4;

    }

    //Rezervasyon Yap

    function openResModal(id ) {



        var modalDate = $("#timeNow").val();
        $("#timeNowModal").val(modalDate);
        var timePickerModal = modalDate;

        var a = id.split(",");
        var courtId = a[0];
        var courtName = a[1];


        var resStartTime = $('#doRes').attr('start');
        var resFinishTime = $('#doRes').attr('finish');
        var dt = new Date();
        var hours = dt.getHours();
        var min = dt.getMinutes();

        if (hours < 10)
        {
            var time = "0" +  hours + ":" + min;
        }
        else if (min < 10) {
            var time = hours + ":" + "0" +  min;
        }
        else if (hours < 10 && min <10) {
            var time = "0" + hours + ":" + "0" + min;
        }
        else
            var time =  hours + ":" + min;



        var a = time.split(":");
        var b = resStartTime.split(":");
        var c = resFinishTime.split(":");

        var nowTime = a[0] + a[1];
        var sTime = b[0] + b[1];
        var fTime = c[0] + c[1];

        $('#timeNowModal').change(function () {

            getCourtTime(courtId, courtName, $('#timeNowModal').val());

        });


        if (sTime < nowTime && fTime > nowTime) {

            getCourtTime(courtId, courtName, timePickerModal);

            $('#rsvModal').modal('toggle');
        }

        else {

            swal("Rezervasyon Saatleri Dışındasınız !", "Rezervasyon Saatleri: " + '  ' + resStartTime + '  ' + "ile" + '  ' + resFinishTime + '  ' + "saatleri" + '  ' + "arasındadır.", "warning", {
                button: "Tamam",
            });
        }
    }

    function getCourtTime(courtId, courtName, timePickerModal ) {



        $("#forApproveId button:nth-of-type(2)").attr("id", courtId);

        var dt = new Date();

        var hours = dt.getHours();
        var min = dt.getMinutes();

        if (hours < 10)
        {
            var time = "0" +  hours + ":" + min;
        }
        else if (min < 10) {
            var time = hours + ":" + "0" +  min;
        }
        else if (hours < 10 && min <10) {
            var time = "0" + hours + ":" + "0" + min;
        }
        else
            var time =  hours + ":" + min;



        var days = new Date(timePickerModal);
        var getday = days.getDay();

        var dd = String(dt.getDate()).padStart(2, '0');
        var mm = String(dt.getMonth() + 1).padStart(2, '0');
        var yyyy = dt.getFullYear();

        var today = yyyy + '-' + mm + '-' + dd;


        var date = timePickerModal;
        var b = date.split("-");
        var timeInf = b[2] + '-' + b[1] + '-' + b[0];


        //ResNextDayMember
        function parseDate(str) {
            var mdy = str.split('-');
            return new Date(mdy[0], mdy[1] - 1, mdy[2]);
        }

        function datediff(first, second) {
            // Take the difference between the dates and divide by milliseconds per day.
            // Round to nearest whole number to deal with DST.
            return Math.round((second - first) / (1000 * 60 * 60 * 24));
        }

        var x = today;
        var y = timePickerModal;

        var diff = datediff(parseDate(x), parseDate(y));

        if (timePickerModal < today) {

            swal("Uyarı !", "Önceki Günlere Rezervasyon Yapamazsınız." , "warning", {
                button: "Tamam",
            });

            $("#timeNowModal").val(today)
        }

        else if ($("#RoleName").val() == "Üye" && diff > 3 ) {


                swal("Uyarı !", "En Fazla 3 Gün Sonraya Rezervasyon Yapabilirsiniz  !!", "warning", {
                    button: "Tamam",
                });

                $("#dateInf").val(today)
        }

        else if ($("#RoleName").val() == "Antrenör" && diff > 6) {

                swal("Uyarı !", "En Fazla 6 Gün Sonraya Rezervasyon Yapabilirsiniz  !!", "warning", {
                    button: "Tamam",
                });

                $("#dateInf").val(today)
        }

        else
            $.ajax({
                type: "POST",
                url: '../Public/GetResTime',
                cache: false,
                data: { "dateInf": timePickerModal , courtId },
                dataType: "json",
                async: false,
                success: function (res) {






                    switch (getday) {
                        case 0:
                            day = "Pazar";
                            break;
                        case 1:
                            day = "Pazartesi";
                            break;
                        case 2:
                            day = "Salı";
                            break;
                        case 3:
                            day = "Çarşamba";
                            break;
                        case 4:
                            day = "Perşembe";
                            break;
                        case 5:
                            day = "Cuma";
                            break;
                        case 6:
                            day = "Cumartesi";
                    }

                    $("#CourtandTime").empty();
                    row = "";
                    row += '<div class="modal-header" style="background-color: #004e6c;">';
                    row += '<h4 style=" margin:auto; color:white"><i class="fas fa-flag nav-icon"></i>' + ' ' + courtName + ' ' + ' - ' + ' ' + timeInf + ' ' + ' - ' + ' ' + day + ' ' + ':' + ' ' + '</h4>';
                    row += '</div>';
                    $("#CourtandTime").append(row);


                    if (res.length > 0) {

                            $("#ResModal").empty();

                        for (var i = 0; i < res.length; i++) {

                                NewRow = "";
                                NewRow += '<div class="form-group reservationForm">';
                                NewRow += '<div class="custom-control custom-checkbox custom-control2" id="checkTimeTable">';

                                if (res[i].isTaken == true)

                                    NewRow += '<input class="custom-control-input custom-control-input-primary custom-control-input-outline" type="checkbox" id="customCheckbox5" checked="" disabled="">';

                                else if (res[i].start <= time && date == today)

                                    NewRow += '<input class="custom-control-input custom-control-input-primary custom-control-input-outline" type="checkbox" id="customCheckbox5" checked="" disabled="">';


                                else

                                NewRow += '<input class="custom-control-input custom-control-input-danger" type="checkbox" id= "t_' + res[i].timeId + '" name= "' + res[i].start + '">';
                                NewRow += '<label for="t_' + res[i].timeId + '" class="custom-control-label custom-control-label2">' + res[i].start + '</label>';
                                NewRow += '</div></div>';


                                $("#ResModal").append(NewRow);
                        }

                    }
                },

                error: function (textStatus, errorThrown) {
                    console.log(JSON.stringify(textStatus));
                    console.log(textStatus);
                }
            });

    }

    function getPrice() {

        var price = [];
        $('#checkPriceTables input:checked').each(function () {
            price.push(this.name);
        });


        var sum = 0;

        for (var i = 0; i < price.length; i++) {

            var first = parseInt(price[i])
            var sum = first + sum;


            $("#sumOfPrice").html(sum);
        }

    }

    function Approve(id) {

        // seçilen saatler
        var times = [];
        $('#checkTimeTable input:checked:not(:disabled)').each(function () {
            times.push(this.name);
        });


        var priceId = [];
        $('#checkPriceTables input:checked').each(function () {
            priceId.push(this.value);
        });


        var memberUserName = $("#findMember").val().split("-");


        var strPriceId = "";

        for (var i = 0; i < priceId.length; i++) {

            var Id = priceId[i];
            var x = Id + ',';
            strPriceId = strPriceId + x;
        }


        //saat  - tarih
        var dt = new Date();
        var time = dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds();

        var dd = String(dt.getDate()).padStart(2, '0');
        var mm = String(dt.getMonth() + 1).padStart(2, '0');
        var yyyy = dt.getFullYear();

        var today = yyyy + '-' + mm + '-' + dd;

        var userName = memberUserName[2];

        var resobject = {

            ResDate: '',
            ResStartTime: '',
            ResFinishTime: '',
            ResEvent: '',
            userId: '',
            CourtId: '',
            ResTime: '',
            ResNowDate: '',
            Price: '',
            PriceIds: '',
            UserName:'',

        }

        resobject.ResNowDate = today;
        resobject.ResStartTime = times[0];
        resobject.ResFinishTime = times[(times.length - 1)];
        resobject.UserName = userName;
        resobject.Price = $("#sumOfPrice").html();
        resobject.ResDate = $("#timeNowModal").val();
        resobject.ResTime = time;
        resobject.PriceIds = strPriceId;
        resobject.userId = $("#userId").text();
        resobject.ResEvent = "event-1"
        resobject.CourtId = id;


        if (times.length == 0) {

            swal({
                title: "Rezervasyon Onaylanmadı",
                text: "Lütfen Saat Seçiniz !",
                icon: "error",
                button: "Tamam",
            }).then((value) => {



            });

        }

        else if ($("#findMember").val() == "") {

            swal({
                title: "Uyarı",
                text: "Lütfen Üye Seçiniz !",
                icon: "error",
                button: "Tamam",
            }).then((value) => {



            });
        }

        else
            try {

                $.ajax({
                    type: "POST",
                    url: '../AdminHome/NewReservationAdmin',
                    cache: false,
                    data: resobject,
                    dataType: "json",
                    async: true,
                    success: function (res) {

                        if (res == true) {

                            $('#rsvModal').modal('toggle');

                            swal({
                                title: "Rezervasyon Başarılı",
                                text: "Rezervasyon Kaydınız Başarılı Bir Şekilde Gerçekleşti !",
                                icon: "success",
                                button: "Tamam",
                            }).then((value) => {

                                window.location.href = "Index?date=" + $('#timeNow').val();

                            });
                        }

                        else {

                            $('#rsvModal').modal('toggle');

                            swal({
                                title: "Rezervasyon Onaylanmadı",
                                text: "Bakiye Yetersiz Lütfen Bakiye Yükleyiniz !",
                                icon: "error",
                                button: "Tamam",
                            }).then((value) => {



                            });
                        }

                    },
                    error: function (textStatus, errorThrown) {
                        console.log(JSON.stringify(textStatus));
                        console.log(textStatus);
                    }
                });
            } catch (e) {
                console.log(e.message);
            }


    }

    function WebReservation() {

        swal("Dikkat!", "İnternet Üzerinden Rezervasyon Yetkiniz Bulunmamaktadır.", "warning", {
            button: "Tamam",
        });
    }

    //RezervasyonBilgiModal

    function openResInfModal(id) {

        $.ajax({
            type: "GET",
            url: '../Public/GetResModalInf',
            cache: false,
            data: { "id": id },
            dataType: "json",
            async: true,
            success: function (res) {



                $("#PriceInf").empty();
                row = "";

                if (res.resSchemaModal.priceInf == false) {
                    row += '<span class="info-box-icon bg-danger"><i class="fas fa-times"></i></span>';
                    row += '<div class="info-box-content">';
                    row += '<span class="info-box-text">Ücreti Ödenmedi - Borç Mevcut</span>';
                }
                else {
                    row += '<span style="background-color:#82c91e" class="info-box-icon "><i class="fas fa-check"></i></span>';
                    row += '<div class="info-box-content">';
                    row += '<span class="info-box-text">Ücreti Ödendi - Borç Mevcut Değil</span>';
                }
                row += '</div>';
                $("#PriceInf").append(row);



                var x = res.resSchemaModal.priceIds;
                var IdsArray = x.split(",");

                $("#PriceNI").empty();

                row = "";

                for (var i = 0; i < res.courtPriceLists.length; i++) {
                    for (var a = 0; a < IdsArray.length; a++) {

                        if (IdsArray[a] == res.courtPriceLists[i].courtPriceListId) {
                            row += '<tr>';
                            row += '<td>' + res.courtPriceLists[i].name + '</td>';
                            row += '<td>'+ res.courtPriceLists[i].courtPrice+'</td>';
                            row += '</tr>';
                        }
                    }
                }

                $("#PriceNI").append(row);

                $("#sumPrice").html(res.resSchemaModal.price);

                var a = res.resSchemaModal.resNowDate.split("-");
                var nowDate = a[2] + '-' + a[1] + '-' + a[0];

                var b = res.resSchemaModal.resDate.split("-");
                var date = b[2] + '-' + b[1] + '-' + b[0];

                var days = new Date(res.resSchemaModal.resDate);
                var getday = days.getDay();

                switch (getday) {
                    case 0:
                        day = "Pazar";
                        break;
                    case 1:
                        day = "Pazartesi";
                        break;
                    case 2:
                        day = "Salı";
                        break;
                    case 3:
                        day = "Çarşamba";
                        break;
                    case 4:
                        day = "Perşembe";
                        break;
                    case 5:
                        day = "Cuma";
                        break;
                    case 6:
                        day = "Cumartesi";
                }

                if (res != null) {

                    $("#nickAndFullName").text(res.resSchemaModal.nickName + ' - ' + res.resSchemaModal.fullName);
                    $("#courtName").text('Kort Adı:' + ' ' + res.resSchemaModal.courtName);
                    $("#resDate").text('Tarih-Gün:' + ' ' + date + ' - ' + day);
                    $("#resTime").text('Saat:' + ' ' + res.resSchemaModal.resStartTime + ' - ' + res.resSchemaModal.resFinishTime);
                    $("#resNowDate").text('Oluşturulma' + ':' + ' ' + nowDate + ' - ' + res.resSchemaModal.resTime);

                    $("#cancelRes button:nth-of-type(1)").attr("id", id);
                    $('#openResInf').modal('toggle');

                }
                else {
                    $.confirm({
                        title: "Uyarı",
                        content: "Üye Bulunamadı.",
                        buttons: {
                            TAMAM: function () {

                            }
                        }
                    });
                }

            },
            error: function (textStatus, errorThrown) {
                console.log(JSON.stringify(textStatus));
                console.log(textStatus);
            }
        });

    }

    function cancelResProcedureModal(id) {

        $.ajax({
            type: "GET",
            url: '../AdminHome/CancelResProcedureModal',
            cache: false,
            data: { "id": id },
            dataType: "json",
            async: true,
            success: function (res) {



                if (res != true) {

                    $('#openResProcedureModal').modal('toggle')

                    $('#resUserInfo').text(res.resSchemaModal.fullName + " - " + res.resSchemaModal.nickName);
                    $('#resCourtInfo').text("Kort: " + " " + res.resSchemaModal.courtName + " " + " " + "Tarih:" + " " + res.resSchemaModal.resDate);
                    $('#resInfo').text("Rezervasyon Saatleri:" + " " + res.resSchemaModal.resStartTime + "-" + res.resSchemaModal.resFinishTime);


                    $("#cancelResProModal button:nth-of-type(2)").attr("id", id);

                    $('#openResInf').modal('toggle')
                }
                else {

                    cancelResAuthorized(id)
                }

            },

            error: function (textStatus, errorThrown) {
                console.log(JSON.stringify(textStatus));
                console.log(textStatus);
            }
        });

    }

    function cancelResAuthorized(id) {

        var userId = $("#userId").text();
        var procedure = false;
        var cancelReasons = $("#reasonCancel option:selected").text();


        if ($("#checkProcedure").is(":checked")) {
             procedure = true;
        }

        swal({
            title: "Emin Misiniz?",
            text: "Rezervasyon  İptal Edilecek !",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {

                    $.ajax({
                        type: "GET",
                        url: '../AdminHome/CancelResAdmin',
                        cache: false,
                        data: { "id": id, "userId": userId, "procedure": procedure, "cancelReasons": cancelReasons },
                        dataType: "json",
                        async: true,
                        success: function (res) {

                            if (res != null) {

                                swal({
                                    title: "Rezervasyon İptal Edildi",
                                    text: "Rezervasyon Kaydınız Başarılı Bir Şekilde İptal Edildi !",
                                    icon: "success",
                                    button: "Tamam",
                                }).then((value) => {

                                    window.location.href = "Index?date=" + $('#timeNow').val();

                                });

                            }
                        },

                        error: function (textStatus, errorThrown) {
                            console.log(JSON.stringify(textStatus));
                            console.log(textStatus);
                        }
                    });

                }
                else
                    swal({
                        title: "Rezervasyon Korundu",
                        text: "Rezervasyonu Silmekten Vazgeçtiniz!",
                        icon: "success",
                        button: "Tamam",
                    });
            });
    }

</script>


<script>
    $(function () {
        /* ChartJS
         * -------
         * Here we will create a few charts using ChartJS
         */

        //--------------
        //- AREA CHART -
        //--------------

        // Get context with jQuery - using jQuery's .get() method.
        var areaChartCanvas = $('#areaChart').get(0).getContext('2d')

        var areaChartData = {
            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
            datasets: [
                {
                    label: 'Digital Goods',
                    backgroundColor: 'rgba(60,141,188,0.9)',
                    borderColor: 'rgba(60,141,188,0.8)',
                    pointRadius: false,
                    pointColor: '#3b8bba',
                    pointStrokeColor: 'rgba(60,141,188,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(60,141,188,1)',
                    data: [28, 48, 40, 19, 86, 27, 90]
                },
                {
                    label: 'Electronics',
                    backgroundColor: 'rgba(210, 214, 222, 1)',
                    borderColor: 'rgba(210, 214, 222, 1)',
                    pointRadius: false,
                    pointColor: 'rgba(210, 214, 222, 1)',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(220,220,220,1)',
                    data: [65, 59, 80, 81, 56, 55, 40]
                },
            ]
        }

        var areaChartOptions = {
            maintainAspectRatio: false,
            responsive: true,
            legend: {
                display: false
            },
            scales: {
                xAxes: [{
                    gridLines: {
                        display: false,
                    }
                }],
                yAxes: [{
                    gridLines: {
                        display: false,
                    }
                }]
            }
        }

        // This will get the first returned node in the jQuery collection.
        var areaChart = new Chart(areaChartCanvas, {
            type: 'line',
            data: areaChartData,
            options: areaChartOptions
        })

        //-------------
        //- LINE CHART -
        //--------------
        var lineChartCanvas = $('#lineChart').get(0).getContext('2d')
        var lineChartOptions = $.extend(true, {}, areaChartOptions)
        var lineChartData = $.extend(true, {}, areaChartData)
        lineChartData.datasets[0].fill = false;
        lineChartData.datasets[1].fill = false;
        lineChartOptions.datasetFill = false

        var lineChart = new Chart(lineChartCanvas, {
            type: 'line',
            data: lineChartData,
            options: lineChartOptions
        })

        //-------------
        //- DONUT CHART -
        //-------------
        // Get context with jQuery - using jQuery's .get() method.
        var donutChartCanvas = $('#donutChart').get(0).getContext('2d')
        var donutData = {
            labels: [
                'Chrome',
                'IE',
                'FireFox',
                'Safari',
                'Opera',
                'Navigator',
            ],
            datasets: [
                {
                    data: [700, 500, 400, 600, 300, 100],
                    backgroundColor: ['#f56954', '#00a65a', '#f39c12', '#00c0ef', '#3c8dbc', '#d2d6de'],
                }
            ]
        }
        var donutOptions = {
            maintainAspectRatio: false,
            responsive: true,
        }
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        var donutChart = new Chart(donutChartCanvas, {
            type: 'doughnut',
            data: donutData,
            options: donutOptions
        })



        //-------------
        //- BAR CHART -
        //-------------
        var barChartCanvas = $('#barChart').get(0).getContext('2d')
        var barChartData = $.extend(true, {}, areaChartData)
        var temp0 = areaChartData.datasets[0]
        var temp1 = areaChartData.datasets[1]
        barChartData.datasets[0] = temp1
        barChartData.datasets[1] = temp0

        var barChartOptions = {
            responsive: true,
            maintainAspectRatio: false,
            datasetFill: false
        }

        var barChart = new Chart(barChartCanvas, {
            type: 'bar',
            data: barChartData,
            options: barChartOptions
        })


    })
</script>